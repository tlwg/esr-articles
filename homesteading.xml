<?xml version="1.0" encoding="TIS-620"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" 
>

<article>
<title>Homesteading the Noosphere</title>
<articleinfo>

<!-- %%BEGIN STANDALONE%% -->
<author>
  <firstname>Eric</firstname>
  <othername>Steven</othername>
  <surname>Raymond</surname>
  <affiliation>
    <orgname><ulink url="http://www.tuxedo.org/~esr/">
    Thyrsus Enterprises</ulink></orgname> 
    <address>
    <email>esr@thyrsus.com</email>
    </address>
  </affiliation>
</author>
<pubdate role="cvs">$Date: 2008-10-01 08:16:32 $</pubdate>
<releaseinfo>นี่คือรุ่นที่ 3.0</releaseinfo>
<copyright>
  <year>2000</year>
  <holder role="mailto:esr@thyrsus.com">Eric S. Raymond</holder> 
</copyright>
<copyright>
  <year>2004</year>
  <holder role="mailto:thep@linux.thai.net">
    Theppitak Karoonboonyanan (Thai translation)
  </holder> 
</copyright>
<legalnotice>
  <title>Copyright</title>
  <para>Permission is granted to copy, distribute and/or modify
  this document under the terms of the Open Publication License,
  version 2.0.</para>

  <para>อนุญาตให้ทำซ้ำ เผยแพร่ และ/หรือ แก้ไขเอกสารนี้ ภายใต้เงื่อนไขของ
  Open Publication License รุ่น 2.0.</para>
</legalnotice>

<revhistory>
   <revision>
      <revnumber>1.22</revnumber>
      <date>24 สิงหาคม 2000</date>
      <authorinitials>esr</authorinitials>
       <revremark>
	  Handicap theory, peacocks, and stags.  Parallels with knighthood.

          ทฤษฎีการต่อแต้ม, นกยูง และกวาง. ความคล้ายคลึงกับความเป็นอัศวิน.
       </revremark>
   </revision>

   <revision>
      <revnumber>1.22</revnumber>
      <date>24 สิงหาคม 2000</date>
      <authorinitials>esr</authorinitials>
       <revremark>
	  DocBook 4.1 conversion.

          แปลงเป็น DocBook 4.1.
       </revremark>
   </revision>

   <revision>
      <revnumber>1.21</revnumber>
      <date>31 สิงหาคม 1999</date>
      <authorinitials>esr</authorinitials>
       <revremark>
	  Major revision for the O'Reilly book. Incorporated some
	  ideas about the costs of forking and rogue patches from
	  Michael Chastain.  Thomas Gagne (tgagne@ix.netcom.com)
	  noticed the similarity between "seniority wins" and database
	  heuristics.  Henry Spencer's political analogy.  Ryan
	  Waldron and El Howard (elhoward@hotmail.com)
	  contributed thoughts on the value of novelty.  Thomas Bryan
	  (tbryan@arlut.utexas.edu) explained the hacker
	  revulsion to ``embrace and extend''.  Darcy Horrocks
	  inspired the new section ``How Fine A Gift?''  Other new
	  material on the connection to the Maslovian hierarcy of
	  values, and the taboo against attacks on competence.

          แก้ไขครั้งใหญ่เพื่อตีพิมพ์ในหนังสือของ O'Reilly.
          เพิ่มแนวคิดเกี่ยวกับต้นทุนของการฟอร์กและแพตช์เถื่อนจาก
	  Michael Chastain.  Thomas Gagne (tgagne@ix.netcom.com)
          ตั้งข้อสังเกตเรื่องความคล้ายระหว่าง "ผู้มีอาวุโสชนะ"
          กับเคล็ดของระบบฐานข้อมูล. การอุปมาอุปมัยกับการเมืองของ Henry Spencer.
	  Ryan Waldron and El Howard (elhoward@hotmail.com)
          สมทบความคิดเกี่ยวกับคุณค่าของนวัตกรรม. Thomas Bryan
	  (tbryan@arlut.utexas.edu) อธิบายความเอือมระอาของแฮ็กเกอร์ต่อนโยบาย
          ``เขมือบแล้วขยาย''. Darcy Horrocks ให้แรงบันดาลใจต่อหัวข้อใหม่
          ``ของขวัญนั้นดีแค่ไหน?''
          เนื้อหาใหม่เรื่องความเชื่อมโยงกับลำดับชั้นของคุณค่าของมาสโลว์
          และข้อห้ามเรื่องการโจมตีความสามารถ.
       </revremark>
   </revision>

   <revision>
      <revnumber>1.14</revnumber>
      <date>21 พฤศจิกายน 1998</date>
      <authorinitials>esr</authorinitials>
       <revremark>
	  Minor editorial and stale-link fixes.

          แก้ไขเล็กน้อย และแก้ลิงก์ที่เสีย.
       </revremark>
   </revision>

   <revision>
      <revnumber>1.10</revnumber>
      <date>11 กรกฎาคม 1998</date>
      <authorinitials>esr</authorinitials>
       <revremark>
          Remove Fare Rideau's reference to `fame' at his
          suggestion.

          ลบการอ้างถึงคำว่า `fame' ของ Fare Rideau ตามที่เขาแนะนำ.
       </revremark>
   </revision>

   <revision>
      <revnumber>1.9</revnumber>
      <date>26 พฤษภาคม 1998</date>
      <authorinitials>esr</authorinitials>
       <revremark>
	  Incorporated Far&eacute; Rideau's noosphere/ergosphere
	  distinction. Incorporated RMS's assertion that he is not
	  anticommercial.  New section on acculturation and academia
	  (thanks to Ross J. Reedstrom, Eran Tromer, Allan McInnes,
	  Mike Whitaker, and others). More about humility, (`egoless
	  behavior') from Jerry Fass and Marsh Ray.

          เพิ่มการแยกความแตกต่างระหว่าง noosphere/ergosphere ของ
          Far&eacute; Rideau. เพิ่มการแก้ต่างของ RMS ว่าเขาไม่ได้ต่อต้านการค้า.
          หัวข้อใหม่เรื่องการถ่ายทอดวัฒนธรรมและภาคการศึกษา (ขอบคุณ
          Ross J. Reedstrom, Eran Tromer, Allan McInnes, Mike Whitaker
          และคนอื่นๆ). เพิ่มเติมเกี่ยวกับความอ่อนน้อมถ่อมตน
          (`พฤติกรรมที่ไร้อัตตา') จาก Jerry Fass และ Marsh Ray.
       </revremark>
   </revision>

   <revision>
      <revnumber>1.8</revnumber>
      <date>27 เมษายน 1998</date>
      <authorinitials>esr</authorinitials>
       <revremark>
          Added Goldhaber to the bibliography.  This is the
	  version that will go in the Linux Expo proceedings.

          เพิ่ม Goldhaber ในบรรณานุกรม. ฉบับนี้เป็นฉบับที่จะตีพิมพ์ใน
          proceedings ของงาน Linux Expo.
       </revremark>
   </revision>

   <revision>
      <revnumber>1.7</revnumber>
      <date>16 เมษายน 1998</date>
      <authorinitials>esr</authorinitials>
       <revremark>
	  New section on `Global implications' discusses
	  historical tends in the colonization of the noosphere, and
	  examines the `category-killer' phenomenon.  Added another
	  research question.

          หัวข้อใหม่เรื่อง `นัยในภาพรวม' ถกเรื่องแนวโน้มการตั้งถิ่นฐานใน
          noosphere ที่ผ่านมา และตรวจสอบเรื่องปรากฏการณ์ `ผู้พิชิต'.
          เพิ่มคำถามเพื่อการค้นคว้าเพิ่มเติมอีกข้อ.
       </revremark>
   </revision>

   <revision>
      <revnumber>1.3</revnumber>
      <date>12 เมษายน 1998</date>
      <authorinitials>esr</authorinitials>
       <revremark>
          Typo fixes and responses to first round of public
	  comments.  First four items in bibliography.  An anonymously
	  contributed observation about reputation incentives
	  operating even when the craftsman is unaware of them.  Added
	  instructive contrasts with warez d00dz, material on the
	  `software should speak for itself' premise, and observations
	  on avoiding personality cults.  As a result of all these
	  changes, the section on `The Problem of Ego' grew and
	  fissioned.

          แก้ไขคำสะกดผิด และตอบคำวิจารณ์จากสาธารณชนรอบแรก.
          บรรณานุกรมสี่รายการแรก. ข้อสังเกตจากผู้ไม่ประสงค์จะเอ่ยนาม
          เกี่ยวกับการทำงานของแรงกระตุ้นจากชื่อเสียง แม้ตัวช่างฝีมือจะไม่รู้ตัว.
          เพิ่มการเปรียบเทียบกับ warez d00dz ที่น่าศึกษา, เนื้อหาเรื่องเงื่อนไข
          `ซอฟต์แวร์ควรบอกเอง', และข้อสังเกตเกี่ยวกับการเลี่ยงความนิยมตัวบุคคล.
          ผลของการเปลี่ยนแปลงทั้งหมดนี้ ทำให้หัวข้อ `ปัญหาของอัตตา' ยาวขึ้น
          และถูกแบ่งเป็นหัวข้อย่อย.
       </revremark>
   </revision>

   <revision>
      <revnumber>1.2</revnumber>
      <date>10 เมษายน 1998</date>
      <authorinitials>esr</authorinitials>
       <revremark>
          First published on the Web.

          เผยแพร่บนเว็บเป็นครั้งแรก.
       </revremark>
   </revision>
</revhistory>
<!-- %%END ENDNOTES%% -->

<abstract>
<para>After observing a contradiction between the official ideology 
defined by open-source licenses and the actual behavior of hackers, 
I examine the actual customs that regulate the ownership and control
of open-source software.  I show that they imply an underlying
theory of property rights homologous to the Lockean theory of land
tenure.  I then relate that to an analysis of the hacker culture
as a `gift culture' in which participants compete for prestige
by giving time, energy, and creativity away.  Finally, I examine the
consequences of this analysis for conflict resolution in the culture,
and develop some prescriptive implications.</para>
<para>หลังจากที่ได้สังเกตเห็นความขัดแย้งกันเอง
ระหว่างอุดมการณ์อย่างเป็นทางการที่กำหนดโดยสัญญาอนุญาตโอเพนซอร์สต่างๆ
กับพฤติกรรมที่ปรากฏจริงของแฮ็กเกอร์ทั้งหลาย
ผู้เขียนจึงได้ตรวจสอบจารีตประเพณีในทางปฏิบัติ
ที่คอยกำหนดกฎเกณฑ์กรรมสิทธิ์และอำนาจควบคุมของซอฟต์แวร์โอเพนซอร์สทั้งหลาย
ผู้เขียนจะแสดงให้เห็นว่า
จารีตประเพณีเหล่านั้นบ่งบอกถึงทฤษฎีแห่งทรัพย์สินที่อยู่เบื้องหลัง
ซึ่งละม้ายกับทฤษฎีสิทธิถือครองที่ดินของล็อค จากนั้น
ผู้เขียนจะเชื่อมโยงเรื่องดังกล่าวเข้ากับการวิเคราะห์วัฒนธรรมแฮ็กเกอร์
ซึ่งเป็น `วัฒนธรรมแห่งการให้' (gift culture) ซึ่งสมาชิกจะแข่งขันเพื่อเกียรติยศ
โดยอุทิศเวลา แรงกายแรงใจ และความคิดสร้างสรรค์ให้กับชุมชน
และท้ายที่สุด ผู้เขียนจะตรวจสอบผลพวงของการวิเคราะห์นี้
ต่อการยุติข้อขัดแย้งในชุมชน และพัฒนาเป็นจารีตโดยนัย</para>
</abstract>
</articleinfo>

<!-- An Introductory Contradiction -->
<sect1><title>ความขัดแย้งในตัวเองในเบื้องต้น</title>

<para>Anyone who watches the busy, tremendously productive world of Internet
open-source software for a while is bound to notice an interesting
contradiction between what open-source hackers say they believe and
the way they actually behave&mdash;between the official ideology of the
open-source culture and its actual practice.</para>

<para>ใครก็ตาม
ที่เฝ้ามองโลกที่ไม่หยุดนิ่งและอุดมผลของซอฟต์แวร์โอเพนซอร์สในอินเทอร์เน็ตสักระยะหนึ่ง
จะสังเกตได้ถึงความขัดแย้งในตัวเองที่น่าสนใจข้อหนึ่ง
ระหว่างสิ่งที่แฮ็กเกอร์โอเพนซอร์สบอกว่าเชื่อ กับวิธีปฏิบัติที่เป็นจริง
หรืออีกนัยหนึ่งคือ ระหว่างอุดมการณ์อย่างเป็นทางการของวัฒนธรรมโอเพนซอร์ส
กับการปฏิบัติในความเป็นจริง</para>

<para>Cultures are adaptive machines.  The open-source culture is a
response to an identifiable set of drives and pressures.  As usual,
the culture's adaptation to its circumstances manifests both as
conscious ideology and as implicit, unconscious or semi-conscious
knowledge.  And, as is not uncommon, the unconscious adaptations are
partly at odds with the conscious ideology.</para>

<para>วัฒนธรรมเป็นกลไกที่ปรับตัวได้ วัฒนธรรมโอเพนซอร์สเอง
ก็เป็นการสนองตอบต่อแรงขับเคลื่อนและแรงกดดันที่บ่งบอกได้จำนวนหนึ่ง
ซึ่งการปรับตัวของมันไปตามสภาวการณ์ต่างๆ ก็มีทั้งจากอุดมการณ์ในจิตสำนึก
และจากการเรียนรู้ที่สั่งสมกันมาแบบไม่รู้ตัว หรือไม่มีการเอ่ยถึง
และก็ไม่แปลกอะไร ที่การปรับตัวแบบเป็นไปเอง
จะขัดกับอุดมการณ์ในจิตสำนึกไปบ้าง</para>

<para>In this essay, I will dig around the roots of that contradiction, and
use it to discover those drives and pressures.  I will deduce some
interesting things about the hacker culture and its customs.  I will
conclude by suggesting ways in which the culture's implicit knowledge
can be leveraged better.</para>

<para>ในบทความนี้ ผู้เขียนจะเจาะหาต้นตอของความขัดแย้งในตัวเองดังกล่าว
เพื่อใช้ค้นหาแรงขับเคลื่อนและแรงกดดันเหล่านั้น
ผู้เขียนจะอนุมานต่อถึงประเด็นที่น่าสนใจจำนวนหนึ่งเกี่ยวกับวัฒนธรรมแฮ็กเกอร์และจารีตประเพณีของมัน
จากนั้นจะสรุปด้วยการแนะนำหนทางที่จะทำให้การเรียนรู้ที่แฝงอยู่ในวัฒนธรรมนี้ที่ว่านั้น
มีประสิทธิผลยิ่งขึ้น</para>

</sect1>
<!-- The Varieties of Hacker Ideology -->
<sect1><title>อุดมการณ์ต่างๆ ของแฮ็กเกอร์</title>

<para>The ideology of the Internet open-source culture (what hackers
say they believe) is a fairly complex topic in itself.  All members
agree that open source (that is, software that is freely
redistributable and can readily evolved and be modified to fit
changing needs) is a good thing and worthy of significant and
collective effort.  This agreement effectively defines membership in
the culture.  However, the reasons individuals and various subcultures
give for this belief vary considerably.</para>

<para>อุดมการณ์ของวัฒนธรรมโอเพนซอร์สบนอินเทอร์เน็ต (สิ่งที่แฮ็กเกอร์บอกว่าเชื่อ)
เป็นเรื่องที่ค่อนข้างซับซ้อนในตัวเอง สมาชิกทุกคนเห็นพ้องต้องกันว่า โอเพนซอร์ส
(กล่าวคือ ซอฟต์แวร์ที่แจกจ่ายได้อย่างเสรี
และสามารถพัฒนาหรือปรับเปลี่ยนตามความต้องการที่เปลี่ยนไปได้) เป็นสิ่งที่ดี
และควรค่าแก่การร่วมกันลงแรงอย่างแข็งขัน ความเห็นพ้องนี้นี่เอง
ที่เป็นตัวบ่งชี้ความเป็นส่วนหนึ่งในวัฒนธรรมนี้ของแต่ละบุคคล อย่างไรก็ดี
เหตุผลของแต่ละคนหรือแต่ละวัฒนธรรมย่อยที่สนับสนุนความเชื่อดังกล่าว
กลับแตกต่างกันอย่างเห็นได้ชัด</para>

<para>One degree of variation is zealotry; whether open source development
is regarded merely as a convenient means to an end (good tools and fun
toys and an interesting game to play) or as an end in itself.</para>

<para>ความแตกต่างหนึ่งคือระดับความจริงจังที่จะยึดถือ
ว่าการพัฒนาแบบโอเพนซอร์สเป็นเพียงหนทางที่สะดวกที่จะไปสู่เป้าหมาย
(คือเป็นเครื่องมือที่ดี เป็นของเล่นที่สนุก และเป็นเกมที่น่าเล่น)
หรือคือเป้าหมายในตัวของมันเอง</para>

<para>A person of great zeal might say ``Free software is my life!  I
exist to create useful, beautiful programs and information resources,
and then give them away.''  A person of moderate zeal might say ``Open
source is a good thing, which I am willing to spend significant time
helping happen''.  A person of little zeal might say ``Yes, open
source is okay sometimes.  I play with it and respect people who build
it''.</para>

<para>คนที่จริงจังมากอาจจะบอกว่า ``ซอฟต์แวร์เสรีคือชีวิตของฉัน!
ฉันเกิดมาเพื่อสร้างโปรแกรมและทรัพยากรข้อมูลที่สวยงามใช้ประโยชน์ได้ และให้เปล่า''
คนที่จริงจังปานกลางอาจจะพูดว่า
``โอเพนซอร์สเป็นสิ่งที่ดีที่ฉันเต็มใจสละเวลาช่วยให้มันเกิด''
ส่วนคนที่จริงจังน้อยอาจจะบอก ``อืมม์ โอเพนซอร์สบางทีก็ดีเหมือนกันนะ
ฉันก็เล่นกับมันและเคารพผู้คนที่สร้างมันขึ้นมา''</para>

<para>Another degree of variation is in hostility to commercial
software and/or the companies perceived to dominate the commercial
software market.</para>

<para>ความแตกต่างอีกมุมหนึ่งคือระดับความเป็นปฏิปักษ์กับซอฟต์แวร์เชิงพาณิชย์
และ/หรือ บริษัทที่เห็นได้ชัดว่าครอบครองตลาดซอฟต์แวร์เชิงพาณิชย์อยู่</para>

<para>A very anticommercial person might say ``Commercial software is
theft and hoarding.  I write free software to end this evil.''  A
moderately anticommercial person might say ``Commercial software in
general is OK because programmers deserve to get paid, but companies
that coast on shoddy products and throw their weight around are
evil.''  An un-anticommercial person might say ``Commercial software
is okay, I just use and/or write open-source software because I like it
better''.  (Nowadays, given the growth of the open-source part of the
industry since the first public version of this essay, one might also
hear ``Commercial software is fine, as long as I get the source or it
does what I want it to do.'')</para>

<para>คนที่ต่อต้านการค้ามากๆ อาจจะบอกว่า
``ซอฟต์แวร์พาณิชย์คือการปล้นและหมกเม็ด
ฉันเขียนซอฟต์แวร์เสรีก็เพื่อจบความชั่วร้ายนี้'' คนที่ต่อต้านการค้าปานกลาง
อาจจะพูดว่า ``ซอฟต์แวร์พาณิชย์โดยทั่วไปก็โอเค
เพราะโปรแกรมเมอร์สมควรได้รับค่าตอบแทน แต่บริษัทที่แถซอฟต์แวร์ห่วยๆ ไปมา
โดยทิ้งน้ำหนักตัวเองใส่ชาวบ้าน คือพวกชั่วร้าย'' ส่วนคนที่ไม่ต่อต้านการค้าเลย
อาจจะบอก ``ซอฟต์แวร์พาณิชย์ก็โอเค
แต่ฉันเขียนซอฟต์แวร์โอเพนซอร์สเพราะฉันชอบกว่า'' (ทุกวันนี้
ท่ามกลางการเติบโตของอุตสาหกรรมภาคโอเพนซอร์สหลังจากปล่อยรุ่นแรกของบทความนี้สู่สาธารณะ
ใครบางคนอาจจะเคยได้ยินด้วยว่า ``ซอฟต์แวร์พาณิชย์ก็ดีนะ ตราบใดที่ฉันยังได้ซอร์ส
หรือมันยังทำงานตามที่ฉันต้องการ'')</para>

<para>All nine of the attitudes implied by the cross-product of the
categories mentioned earlier are represented in the open-source
culture.  It is worthwhile to point out the distinctions because they
imply different agendas, and different adaptive and cooperative
behaviors.</para>

<para>ในวัฒนธรรมโอเพนซอร์ส
มีทัศนคติครบทั้งเก้าแบบที่เกิดจากการจับคู่ความเห็นในเรื่องทั้งสอง
การชี้ความแตกต่างตรงนี้มีความหมาย เพราะมันหมายถึงวาระ
พฤติกรรมการปรับตัวและการให้ความร่วมมือที่แตกต่างกันของแต่ละคน</para>

<para>Historically, the most visible and best-organized part of the hacker
culture has been both very zealous and very anticommercial.  The Free
Software Foundation founded by Richard M. Stallman (RMS) supported 
a great deal of open-source development from the early 1980s forward,
including tools like Emacs and GCC which are still basic to the Internet
open-source world, and seem likely to remain so for the forseeable
future.</para>

<para>ตามนัยประวัติแล้ว
ภาคที่เห็นได้ชัดและมีระเบียบแบบแผนมากที่สุดของวัฒนธรรมแฮ็กเกอร์ก็คือ
กลุ่มที่จริงจังมากและต่อต้านการค้า มูลนิธิซอฟต์แวร์เสรี (Free Software
Foundation&mdash;FSF) ที่ก่อตั้งโดย ริชาร์ด เอ็ม. สตอลแมน (Richard M.
Stallman&mdash;RMS)
ได้ให้แรงสนับสนุนอย่างมากต่อการพัฒนาแบบโอเพนซอร์สตั้งแต่ต้นทศวรรษ 1980
เป็นต้นมา ซึ่งรวมถึงเครื่องมืออย่าง Emacs และ GCC
ที่ยังคงเป็นพื้นฐานของโลกโอเพนซอร์สบนอินเทอร์เน็ต
และมีทีท่าจะคงอยู่ต่อไปในอนาคต</para>

<para>For many years the FSF was the single most important focus of
open-source hacking, producing a huge number of tools still critical
to the culture.  The FSF was also long the only sponsor of open source
with an institutional identity visible to outside observers of the
hacker culture.  They effectively defined the term `free software',
deliberately giving it a confrontational weight (which the newer label
`<ulink url="http://www.opensource.org">open source</ulink>' just as
deliberately avoids).</para>

<para>เป็นเวลาหลายปีที่ FSF
ได้เป็นศูนย์รวมที่สำคัญที่สุดเพียงแห่งเดียวของการทำงานโอเพนซอร์ส
ซึ่งได้ผลิตเครื่องมือจำนวนมากที่ยังคงเป็นส่วนที่สำคัญที่สุดของตัววัฒนธรรม
นอกจากนี้ FSF
ยังเป็นผู้สนับสนุนโอเพนซอร์สในรูปแบบสถาบันที่มองเห็นได้จากภายนอกวัฒนธรรมแฮ็กเกอร์เพียงแห่งเดียวเป็นเวลายาวนาน
FSF ได้บัญญัติคำว่า `ซอฟต์แวร์เสรี' (free software) อย่างได้ผล โดยมีเจตนาลึกๆ
ที่จะให้เกิดแรงปะทะ (ซึ่งฉลากใหม่
`<ulink url="http://www.opensource.org">โอเพนซอร์ส'</ulink> (open source)
มีเจตนาลึกเท่ากันที่จะหลีกเลี่ยง)</para>

<para>Thus, perceptions of the hacker culture from both within and without
it tended to identify the culture with the FSF's zealous attitude and
perceived anticommercial aims.  RMS himself denies he is
anticommercial, but his program has been so read by most people,
including many of his most vocal partisans.  The FSF's vigorous and
explicit drive to ``Stamp Out Software Hoarding!'' became the closest
thing to a hacker ideology, and RMS the closest thing to a leader of
the hacker culture.</para>

<para>ดังนั้น ภาพที่ปรากฏของวัฒนธรรมแฮ็กเกอร์ทั้งจากภายในและภายนอก FSF
จึงมีแนวโน้มที่จะแสดงเอกลักษณ์ของตัวเองด้วยทัศนคติที่จริงจังและความมุ่งหวังที่จะต่อต้านการค้าของ
FSF แม้ตัว RMS เองจะปฏิเสธว่าไม่ได้ต่อต้านการค้า
แต่คนทั่วไปก็อ่านความเคลื่อนไหวต่างๆ ของเขาออกมาเช่นนั้น
รวมทั้งสาวกที่เสียงดังที่สุดของเขาหลายคน การขับเคลื่อนที่ทรงพลังและชัดแจ้งของ
FSF ที่จะ ``กระทืบการเก็บกักซอฟต์แวร์ให้จมดิน!''
กลายเป็นตัวแทนที่ชัดที่สุดของอุดมการณ์แฮ็กเกอร์ และ RMS
ก็กลายเป็นตัวแทนที่ชัดที่สุดของผู้นำของวัฒนธรรมแฮ็กเกอร์</para>

<para>The FSF's license terms, the ``General Public License'' (GPL),
expresses the FSF's attitudes.  It is very widely used in the
open-source world.  North Carolina's <ulink
url="http://metalab.unc.edu/pub/Linux/welcome.html">Metalab</ulink>
(formerly Sunsite) is the largest and most popular software archive in
the Linux world.  In July 1997 about half the Sunsite software
packages with explicit license terms used GPL.</para>

<para>ข้อกำหนดในสัญญาอนุญาตของ FSF คือ ``General Public License'' (GPL) นั้น
แสดงทัศนคติดังกล่าวของ FSF อย่างชัดแจ้ง
และก็เป็นสัญญาอนุญาตที่ใช้กันกว้างขวางที่สุดในโลกโอเพนซอร์สด้วย <ulink
url="http://metalab.unc.edu/pub/Linux/welcome.html">Metalab</ulink>
(หรือ Sunsite ในอดีต) ของมหาวิทยาลัยนอร์ธแคโรไลนา
เป็นแหล่งเก็บซอฟต์แวร์ที่ใหญ่ที่สุดและเป็นที่รู้จักกันมากที่สุดในโลกของลินุกซ์
ในเดือนกรกฎาคม 1997 ประมาณครึ่งหนึ่งของแพกเกจซอฟต์แวร์ใน Sunsite
ที่ระบุสัญญาอนุญาต เป็นซอฟต์แวร์ที่ใช้ GPL</para>

<para>But the FSF was never the only game in town.  There was always a
quieter, less confrontational and more market-friendly strain in the
hacker culture.  The pragmatists were loyal not so much to an ideology
as to a group of engineering traditions founded on early open-source
efforts which predated the FSF.  These traditions included, most
importantly, the intertwined technical cultures of Unix and the
pre-commercial Internet.</para>

<para>แต่ FSF ไม่ใช่ทั้งหมดของโอเพนซอร์ส ยังมีผู้ที่ส่งเสียงน้อยกว่า
เผชิญหน้าน้อยกว่า และเป็นมิตรกับตลาดมากกว่าอยู่เสมอในแวดวงแฮ็กเกอร์
นักปฏิบัติทั้งหลายไม่ได้เคร่งครัดกับอุดมการณ์เท่ากับธรรมเนียมทางวิศวกรรมที่พบในความพยายามแรกๆ
ของโอเพนซอร์สซึ่งเกิดก่อน FSF เสียอีก ธรรมเนียมเหล่านี้ที่สำคัญที่สุดก็คือ
วัฒนธรรมทางเทคนิคที่เกี่ยวพันกันของยูนิกซ์กับอินเทอร์เน็ตก่อนยุคพาณิชย์
</para>

<para>The typical pragmatist attitude is only moderately anticommercial, and
its major grievance against the corporate world is not `hoarding' per
se.  Rather it is that world's perverse refusal to adopt superior
approaches incorporating Unix and open standards and open-source
software.  If the pragmatist hates anything, it is less likely to be
`hoarders' in general than the current King Log of the software
establishment; formerly IBM, now Microsoft.</para>

<para>ทัศนคติโดยปกติของนักปฏิบัติจะต่อต้านการค้าแค่ปานกลาง
และความสลดใจต่อโลกธุรกิจก็ไม่ใช่ที่การ `หมกเม็ด' โดยตรง
แต่เป็นการที่โลกดันทุรังปฏิเสธวิถีทางที่ดีกว่าที่ประกอบด้วยยูนิกซ์ มาตรฐานเปิด
และซอฟต์แวร์โอเพนซอร์ส ถ้าจะมีสิ่งที่นักปฏิบัติเกลียดชัง ก็ไม่น่าจะใช่
`พวกหมกเม็ด' โดยทั่วไป แต่น่าจะเป็นราชาแห่งวงการซอฟต์แวร์อย่างไอบีเอ็มในอดีต
และไมโครซอฟท์ในปัจจุบันมากกว่า</para>

<para>To pragmatists the GPL is important as a tool, rather than as an
end in itself.  Its main value is not as a weapon against `hoarding',
but as a tool for encouraging software sharing and the growth of
<ulink url="http://www.tuxedo.org/~esr/writings/cathedral-bazaar">
bazaar-mode</ulink>bazaar-mode development communities.  The
pragmatist values having good tools and toys more than he dislikes
commercialism, and may use high-quality commercial software without
ideological discomfort.  At the same time, his open-source experience
has taught him standards of technical quality that very little closed
software can meet.</para>

<para>สำหรับนักปฏิบัติแล้ว GPL มีความสำคัญในฐานะเครื่องมือ
ไม่ใช่ในฐานะตัวของมันเอง และคุณค่าของมันก็ไม่ใช่ในฐานะอาวุธต่อต้าน `การหมกเม็ด'
แต่เป็นเครื่องมือสำหรับกระตุ้นให้เกิดการแบ่งปันซอฟต์แวร์และการเติบโตของ
<ulink url="http://www.tuxedo.org/~esr/writings/cathedral-bazaar">
การพัฒนาแบบตลาดสด</ulink> นักปฏิบัติจะให้คุณค่ากับเครื่องไม้เครื่องมือที่ดี
มากกว่าเกลียดชังการพาณิชย์
และอาจใช้ซอฟต์แวร์พาณิชย์คุณภาพสูงโดยไม่รู้สึกขัดกับอุดมการณ์ ในขณะเดียวกัน
ประสบการณ์โอเพนซอร์สก็ได้สอนให้เขาได้รู้ถึงมาตรฐานของคุณภาพทางเทคนิคที่ซอฟต์แวร์ปิดน้อยตัวจะบรรลุได้
</para>

<para>For many years, the pragmatist point of view expressed itself
within the hacker culture mainly as a stubborn current of refusal to
completely buy into the GPL in particular or the FSF's agenda in
general.  Through the 1980s and early 1990s, this attitude tended to
be associated with fans of Berkeley Unix, users of the BSD license,
and the early efforts to build open-source Unixes from the BSD source
base.  These efforts, however, failed to build bazaar communities of
significant size, and became seriously fragmented and
ineffective.</para>

<para>เป็นเวลาหลายปีที่มุมมองของนักปฏิบัติถูกแสดงออกมาในวัฒนธรรมแฮ็กเกอร์
ด้วยกระแสต่อต้านการใช้ GPL หรือกิจกรรมต่างๆ ของ FSF โดยทั่วไป
โดยในช่วงตลอดทศวรรษ 1980 และต้นทศวรรษ 1990 นั้น ทัศนคตินี้ดูจะประสานกันกับแฟนๆ
Berkeley Unix และผู้ที่ใช้สัญญาอนุญาตแบบ BSD
รวมไปถึงความพยายามยุคแรกที่จะสร้างยูนิกซ์โอเพนซอร์สจากซอร์สของ BSD
แต่ในที่สุด ความพยายามเหล่านี้ก็ไม่สามารถสร้างชุมชนแบบตลาดสดที่ใหญ่พอ
แล้วก็แตกเป็นเสี่ยงๆ และไร้ประสิทธิผล</para>

<para>Not until the Linux explosion of early 1993&ndash;1994 did
pragmatism find a real power base.  Although Linus Torvalds never made
a point of opposing RMS, he set an example by looking benignly on the
growth of a commercial Linux industry, by publicly endorsing the use
of high-quality commercial software for specific tasks, and by gently
deriding the more purist and fanatical elements in the culture.</para>

<para>จนกระทั่งเกิดการบูมของลินุกซ์ในช่วงต้น 1993&ndash;1994
แนวคิดนักปฏิบัติจึงได้กลับมาเรืองอำนาจ แม้ ลินุส ทอร์วาลด์
จะไม่เคยแสดงความต่อต้าน RMS แต่เขาก็ได้ทำตัวให้เป็นตัวอย่าง
ด้วยการมองการเติบโตของลินุกซ์เชิงพาณิชย์อย่างเป็นมิตร
ด้วยการสนับสนุนการใช้ซอฟต์แวร์พาณิชย์คุณภาพสูงอย่างชัดแจ้งในงานเฉพาะ
และด้วยการหยอกเอินพวกเคร่งและคลั่งลัทธิในแวดวงอย่างสุภาพ</para>

<para>A side effect of the rapid growth of Linux was the induction of
a large number of new hackers for which Linux was their primary
loyalty and the FSF's agenda primarily of historical interest.  Though
the newer wave of Linux hackers might describe the system as ``the
choice of a GNU generation'', most tended to emulate Torvalds more
than Stallman.</para>

<para>ผลข้างเคียงของการเติบโตอย่างรวดเร็วของลินุกซ์ก็คือ
การดึงดูดแฮ็กเกอร์หน้าใหม่จำนวนมากเข้ามาร่วม
โดยที่ลินุกซ์คือสิ่งที่พวกเขาให้ความภักดี และวาระต่างๆ ของ FSF
กลายเป็นเรื่องของอดีต
และถึงแม้คลื่นลูกใหม่ของเหล่าแฮ็กเกอร์ลินุกซ์จะเรียกระบบของตัวเองว่า
``คำตอบของยุค GNU'' (the choice of a GNU generation)
แต่ส่วนมากมีแนวโน้มจะเลียนแบบทอร์วาลด์มากกว่าสตอลแมน</para>

<para>Increasingly it was the anticommercial purists who found themselves in
a minority.  How much things had changed would not become apparent
until the Netscape announcement in February 1998 that it would
distribute Navigator 5.0 in source.  This excited more interest in `free
software' within the corporate world. The subsequent call to the hacker
culture to exploit this unprecedented opportunity and to re-label its
product from `free software' to `open source' was met with a level of
instant approval that surprised everybody involved.</para>

<para>ในที่สุด กลุ่มผู้เคร่งอุดมการณ์ที่ต่อต้านการค้าค่อยๆ
พบว่าตัวเองกลายเป็นชนกลุ่มน้อยขึ้นเรื่อยๆ
ความเปลี่ยนแปลงนี้เห็นได้ชัดเมื่อเน็ตสเคปประกาศในเดือนกุมภาพันธ์ 1998
ว่าจะแจกจ่าย Navigator 5.0 ในรูปซอร์สโค้ด เรื่องนี้ได้กระตุ้นความสนใจ
`ซอฟต์แวร์เสรี' ในภาคธุรกิจ การเรียกร้องที่ตามมา
ให้วัฒนธรรมแฮ็กเกอร์ถือโอกาสสำคัญนี้เปลี่ยนฉลากผลิตภัณฑ์จาก `ซอฟต์แวร์เสรี'
(free software) เป็น `โอเพนซอร์ส' (open source) ได้รับการตอบสนองอย่างรวดเร็ว
จนต้องทำให้ทุกคนต้องประหลาดใจ</para>

<para>In a reinforcing development, the pragmatist part of the culture was
itself becoming polycentric by the mid-1990s.  Other semi-independent
communities with their own self-consciousness and charismatic leaders
began to bud from the Unix/Internet root stock.  Of these, the most
important after Linux was the Perl culture under Larry Wall.  Smaller,
but still significant, were the traditions building up around John
Osterhout's Tcl and Guido van Rossum's Python languages.  All three of
these communities expressed their ideological independence by devising
their own, non-GPL licensing schemes.</para>

<para>ในการพัฒนาอีกด้านหนึ่งที่เสริมกัน
กลุ่มนักปฏิบัติได้เกิดศูนย์รวมขึ้นหลายศูนย์ในช่วงกลางทศวรรษ 1990
ชุมชนใหม่หลายแห่งที่มีแนวคิดและผู้นำเป็นของตนเองก็เริ่มแตกหน่อออกจากรากของยูนิกซ์/อินเทอร์เน็ต
ในจำนวนนี้ แหล่งที่สำคัญที่สุดหลังจากลินุกซ์ได้แก่วัฒนธรรมชุมชน Perl ของ
ลาร์รี วอลล์ (Larry Wall) อีกกลุ่มหนึ่งที่ถึงจะเล็กกว่าแต่ก็สำคัญ
คือธรรมเนียมปฏิบัติที่เกิดรอบๆ ภาษา Tcl ของ John Osterhout และภาษา Python
ของ Guido van Rossum
ชุมชนทั้งสามได้แสดงอิสรภาพของอุดมการณ์ด้วยการสร้างสัญญาอนุญาตของตัวเอง
โดยไม่ใช้ GPL</para>

</sect1>
<!-- Promiscuous Theory, Puritan Practice -->
<sect1><title>ทฤษฎีสำส่อน ปฏิบัติเคร่งครัด</title>

<para>Through all these changes, nevertheless, there remained a broad
consensus theory of what `free software' or `open source' is.  The
clearest expression of this common theory can be found in the various
open-source licenses, all of which have crucial common
elements. </para>

<para>แม้กระนั้น ท่ามกลางความเปลี่ยนแปลงเหล่านี้
ก็ยังคงมีทฤษฎีสาธารณะแบบกว้างๆ ที่อธิบายความหมายของ `ซอฟต์แวร์เสรี' หรือ
`โอเพนซอร์ส' การแสดงออกที่ชัดเจนที่สุดของทฤษฏีสามัญนี้
สามารถพบได้ในสัญญาอนุญาตโอเพนซอร์สทั้งหลาย ซึ่งต่างก็มีองค์ประกอบที่สำคัญๆ
ร่วมกัน</para>

<para>In 1997 these common elements were distilled into the Debian Free
Software Guidelines, which became the <ulink
url="http://www.opensource.org">Open Source Definition</ulink>.  Under
the guidelines defined by the OSD, an open-source license must protect an
unconditional right of any party to modify (and redistribute modified
versions of) open-source software.</para>

<para>ในปี 1997 องค์ประกอบร่วมเหล่านี้ ได้ถูกกลั่นกรองออกมาเป็น
`แนวทางซอฟต์แวร์เสรีเดเบียน' (Debian Free Software Guidelines)
ซึ่งต่อมาได้กลายเป็น
<ulink url="http://www.opensource.org">นิยามโอเพนซอร์ส</ulink> (Open Source
Definition&mdash;OSD) ด้วยแนวทางที่กำหนดโดย OSD นี้ สัญญาอนุญาตโอเพนซอร์สใดๆ
จะต้องปกป้องสิทธิ์อย่างไร้เงื่อนไขของฝ่ายใดก็ตามที่จะแก้ไขและแจกจ่ายซอฟต์แวร์โอเพนซอร์ส
</para>

<para>Thus, the implicit theory of the OSD (and OSD-conformant
licenses such as the GPL, the BSD license, and Perl's Artistic
License) is that anyone can hack anything.  Nothing prevents half a
dozen different people from taking any given open-source product (such
as, say the Free Software Foundations's gcc C compiler), duplicating
the sources, running off with them in different evolutionary
directions, but all claiming to be <emphasis>the</emphasis>
product.</para>

<para>ด้วยเหตุนี้ ทฤษฎีที่แฝงอยู่ใน OSD (และสัญญาอนุญาตที่สอดคล้องกับ OSD
ทั้งหลาย เช่น GPL, สัญญาอนุญาต BSD, และสัญญาอนุญาต Artistic ของ Perl) ก็คือ
ใครจะแฮ็กอะไรก็ได้ ไม่มีการห้ามกลุ่มบุคคลต่างๆ มิให้นำเอาผลิตภัณฑ์โอเพนซอร์ส
(ตัวอย่างเช่น คอมไพเลอร์ภาษาซี gcc ของมูลนิธิซอฟต์แวร์เสรี)
มาทำซ้ำแล้วพัฒนาต่อไปอีกทางโดยที่ยังใช้ชื่อผลิตภัณฑ์เดิม</para>

<para>This kind of divergence is called a <emphasis>fork</emphasis>.
The most important characteristic of a fork is that it spawns
competing projects that cannot later exchange code, splitting the
potential developer community.  (There are phenomena that look
superficially like forking but are not, such as the proliferation of
different Linux distributions. In these pseudo-forking cases there may
be separate projects, but they use mostly common code and can benefit
from each other's development efforts completely enough that they are
neither technically nor sociologically a waste, and are not perceived
as forks.)</para>

<para>การแยกเส้นทางแบบนี้เรียกว่า <emphasis>การฟอร์ก</emphasis> (fork)
ลักษณะสำคัญของการฟอร์กก็คือ เกิดโครงการเดิมเพิ่มอีกชุดมาแข่งกัน
โดยที่ไม่สามารถแลกเปลี่ยนโค้ดกันได้อีก
อันทำให้ชุมชนนักพัฒนาที่มีศักยภาพต้องแตกแยก (มีปรากฏการณ์บางอย่างที่ดูเผินๆ
อาจจะคล้ายการฟอร์ก แต่ไม่ใช่ เช่น
การเกิดอย่างมโหฬารของดิสทริบิวชันลินุกซ์ที่แตกต่างกัน การฟอร์กเทียมๆ เหล่านี้
อาจทำให้เกิดโครงการแยกกันก็จริง แต่ทั้งหมดก็ยังคงใช้โค้ดเกือบทั้งหมดร่วมกัน
และยังคงได้รับประโยชน์จากการพัฒนาของกลุ่มอื่นอย่างเต็มที่
จนไม่นับว่าเป็นความสูญเปล่า ไม่ว่าจะเป็นทางเทคนิคหรือทางสังคม
จึงไม่ถือเป็นการฟอร์ก)</para>

<para>The open-source licenses do nothing to restrain forking, let
alone pseudo-forking; in fact, one could argue that they implicitly
encourage both.  In practice, however, pseudo-forking is common but
forking almost never happens.  Splits in major projects have been
rare, and are always accompanied by re-labeling and a large volume of
public self-justification.  It is clear, in such cases as the GNU
Emacs/XEmacs split, or the gcc/egcs split, or the various fissionings
of the BSD splinter groups, that the splitters felt they were going
against a fairly powerful community norm <link
linkend="BSD">[BSD]</link>.</para>

<para>สัญญาอนุญาตโอเพนซอร์สไม่ได้ทำอะไรเพื่อห้ามปรามการฟอร์กเลย
ยิ่งเรื่องการฟอร์กเทียมๆ ยิ่งไม่ต้องพูดถึง และอันที่จริง ใครบางคนอาจแย้งว่า
มันเชื้อเชิญให้ทำทั้งสองอย่างด้วยซ้ำ อย่างไรก็ตาม ในทางปฏิบัติแล้ว
การฟอร์กเทียมเป็นเรื่องปกติ แต่การฟอร์กจริงแทบจะไม่เกิดขึ้นเลย
การแตกกลุ่มในโครงการใหญ่ๆ ไม่ค่อยจะมีให้เห็น แต่ถ้ามี ก็จะมีการเปลี่ยนชื่อ
และต้องผ่านการกลั่นกรองจากสาธารณะด้วย เห็นได้ชัดว่า กรณีอย่างการแยก GNU
Emacs/XEmacs หรือการแยก gcc/egcs หรือการแตกเป็นเสี่ยงๆ ของกลุ่ม BSD นั้น
กลุ่มผู้แยกตัวต่างรู้สึกว่าต้องต่อสู้กับจารีตอันแข็งแกร่งของประชาคมอยู่ไม่น้อย
<link linkend="BSD">[BSD]</link></para>

<para>In fact (and in contradiction to the anyone-can-hack-anything
consensus theory) the open-source culture has an elaborate but
largely unadmitted set of ownership customs. These customs
regulate who can modify software, the circumstances under which
it can be modified, and (especially) who has the right to
redistribute modified versions back to the community.</para>

<para>ในความเป็นจริง (ซึ่งขัดแย้งในตัวเองกับทฤษฎีสาธารณะที่ใครแฮ็กอะไรก็ได้)
วัฒนธรรมโอเพนซอร์สมีจารีตประเพณีที่ละเอียดยิบย่อยแต่กลับไม่ค่อยยอมรับกันว่ามี
ว่าด้วยเรื่องของกรรมสิทธิ์อยู่ จารีตประเพณีนี้
คอยกำหนดกฎเกณฑ์ว่าใครสามารถแก้ไขซอฟต์แวร์ได้บ้าง
มีเงื่อนไขใดบ้างที่จะสามารถแก้ไขซอฟต์แวร์ได้ และโดยเฉพาะอย่างยิ่ง
ใครที่มีสิทธิ์ที่จะแจกจ่ายซอฟต์แวร์ที่แก้ไขแล้วกลับไปให้กับชุมชน</para>

<para>The taboos of a culture throw its norms into sharp relief.  Therefore,
it will be useful later on if we summarize some important ones here:</para>

<para>ข้อห้ามของวัฒนธรรมช่วยเน้นจารีตให้ปรากฏเด่นชัดยิ่งขึ้น ดังนั้น
น่าจะเป็นการดีถ้าเรามาสรุปข้อห้ามที่สำคัญไว้ ณ ที่นี้:</para>

<itemizedlist>
<listitem><para> 
There is strong social pressure against forking projects.  It does
not happen except under plea of dire necessity, with much public
self-justification, and requires a renaming.</para></listitem>
<listitem><para>
มีแรงกดดันอย่างรุนแรงจากสังคมที่คอยต้านการฟอร์กโครงการทั้งหลาย
จะไม่มีการฟอร์กนอกจากจะมีการวิงวอนด้วยความจำเป็นอันสาหัส
ทั้งยังต้องผ่านการกลั่นกรองจากสาธารณะ และมักจะต้องเปลี่ยนชื่อด้วย
</para></listitem>
<listitem><para>
Distributing changes to a project without the cooperation of the
moderators is frowned upon, except in special cases like essentially
trivial porting fixes.</para></listitem>
<listitem><para>
การแจกจ่ายการแก้ไขในโครงการโดยปราศจากความร่วมมือจากผู้ดูแลมักไม่ได้รับการยอมรับ
ยกเว้นในกรณีพิเศษจริงๆ เช่นการแก้ปัญหาเรื่องการข้ามแพล็ตฟอร์มเล็กๆ น้อยๆ
</para></listitem>
<listitem><para>
Removing a person's name from a project history, credits, or maintainer
list is absolutely <emphasis>not done</emphasis> without the person's explicit
consent.</para></listitem>
<listitem><para>
จะไม่มีการลบชื่อบุคคลออกจากประวัติโครงการ จากกิติกรรมประกาศ
หรือจากรายชื่อผู้ดูแล <emphasis>อย่างเด็ดขาด</emphasis>
ยกเว้นด้วยความยินยอมของบุคคลนั้น</para></listitem>
</itemizedlist>

<para>In the remainder of this essay, we shall examine these taboos and
ownership customs in detail.  We shall inquire not only into how they
function but what they reveal about the underlying social dynamics and
incentive structures of the open-source community.</para>

<para>ในส่วนที่เหลือของบทความนี้ เราจะมาตรวจสอบข้อห้ามเหล่านี้
และจารีตประเพณีเรื่องกรรมสิทธิ์กันในรายละเอียด
เราจะไม่เพียงศึกษาว่ามันทำงานอย่างไร
แต่จะศึกษาด้วยว่ามันได้เปิดเผยอะไรบ้างเกี่ยวกับพลวัตทางสังคมเบื้องหลัง
และโครงสร้างของแรงจูงใจต่างๆ ในชุมชนโอเพนซอร์ส</para>

</sect1>
<!-- Ownership and Open Source -->
<sect1><title>กรรมสิทธิ์กับโอเพนซอร์ส</title>

<para>What does `ownership' mean when property is infinitely reduplicable, 
highly malleable, and the surrounding culture has neither coercive
power relationships nor material scarcity economics?</para>

<para>ความหมายของ `กรรมสิทธิ์' คืออะไร ในเมื่อทรัพย์สินสามารถทำซ้ำได้ไม่จำกัด
แปรเปลี่ยนรูปได้สารพัด แถมวัฒนธรรมแวดล้อมก็ไม่มีความเกี่ยวข้องกับพลังอำนาจ
หรือเศรษฐศาสตร์ที่ขาดแคลนด้านวัตถุใดๆ เลย?</para>

<para>Actually, in the case of the open-source culture this is an easy
question to answer.  The owner of a software project is the person
who has the exclusive right, recognized by the community at large,
to <emphasis>distribute modified versions</emphasis>.</para>

<para>อันที่จริง ในกรณีของวัฒนธรรมโอเพนซอร์ส คำถามนี้ตอบง่ายมาก
เจ้าของโครงการซอฟต์แวร์ก็คือบุคคลที่มีเอกสิทธิ์โดยการยอมรับของชุมชนในวงกว้าง
ที่จะ <emphasis>แจกจ่ายซอฟต์แวร์ที่แก้ไขแล้ว</emphasis></para>

<para>(In discussing `ownership' in this section I will use the singular, as
though all projects are owned by some one person.  It should be
understood, however, that projects may be owned by groups.  We shall
examine the internal dynamics of such groups later on.)</para>

<para>(ในการอภิปรายเรื่อง `กรรมสิทธิ์' ในหัวข้อนี้ ผู้เขียนจะใช้คำเอกพจน์
เหมือนกับว่าทุกโครงการมีเจ้าของเพียงคนเดียว
แต่ขอให้เข้าใจด้วยว่าโครงการอาจมีเจ้าของเป็นกลุ่มก็ได้
เราจะมาตรวจสอบพลวัตภายในของกลุ่มดังกล่าวในภายหลัง)</para>

<para>According to the standard open-source licenses, all parties are
equals in the evolutionary game.  But in practice there is a very
well-recognized distinction between `official' patches, approved and
integrated into the evolving software by the publicly recognized
maintainers, and `rogue' patches by third parties.  Rogue patches are
unusual, and generally not trusted <link
linkend="rp">[RP]</link>.</para>

<para>ตามสัญญาอนุญาตโอเพนซอร์สมาตรฐานแล้ว ทุกฝ่ายเท่าเทียมกันในเกมแห่งวิวัฒนาการ
แต่ในทางปฏิบัติ จะมีความแตกต่างที่ยอมรับกันเป็นอย่างดี ระหว่างแพตช์ที่
`เป็นทางการ' ที่ตรวจสอบและรวมเข้าแล้วในซอฟต์แวร์ที่วิวัฒน์ไปข้างหน้า
โดยผู้ดูแลที่สาธารณชนยอมรับ กับแพตช์ `เถื่อน' ของบุคคลที่สาม
แพตช์เถื่อนเป็นของแปลกปลอม และมักไม่ค่อยได้รับความเชื่อถือ <link
linkend="rp">[RP]</link></para>

<para>That <emphasis>public</emphasis> redistribution is the
fundamental issue is easy to establish.  Custom encourages people to
patch software for personal use when necessary. Custom is indifferent
to people who redistribute modified versions within a closed user or
development group.  It is only when modifications are posted to the
open-source community in general, to compete with the original, that
ownership becomes an issue.</para>

<para>เรื่องของการแจกจ่ายการแก้ไข <emphasis>สู่สาธารณะ</emphasis>
เป็นเรื่องพื้นฐานที่สร้างได้ง่าย
จารีตประเพณีเชื้อเชิญผู้คนให้แก้ไขซอฟต์แวร์เพื่อใช้ส่วนตัวเมื่อจำเป็น
จารีตประเพณีไม่ว่าอะไรใครที่แจกจ่ายซอฟต์แวร์ที่แก้ไขแล้วในกลุ่มผู้ใช้หรือนักพัฒนากลุ่มเล็กๆ
แต่เมื่อใดก็ตาม ที่การแก้ไขนั้นถูกประกาศสู่ชุมชนโอเพนซอร์สโดยทั่วไป
โดยชนกับต้นฉบับ นั่นแหละที่เรื่องกรรมสิทธิ์จะเป็นเรื่องขึ้นมา</para>

<para>There are, in general, three ways to acquire ownership of an
open-source project.  One, the most obvious, is to found the project.
When a project has had only one maintainer since its inception and
the maintainer is still active, custom does not even permit a
<emphasis>question</emphasis> as to who owns the project.</para>

<para>โดยทั่วไปแล้ว มีสามทางที่จะได้กรรมสิทธิ์ในโครงการโอเพนซอร์ส ทางที่หนึ่ง
ซึ่งชัดเจนที่สุด คือตั้งโครงการเอง
เมื่อโครงการใดมีผู้ดูแลเพียงคนเดียวตั้งแต่แรกเริ่ม
และผู้ดูแลนั้นก็ยังคงทำงานอยู่ จารีตประเพณีก็จะไม่แม้แต่จะยอมให้มี
<emphasis>คำถาม</emphasis> ว่าใครเป็นเจ้าของโครงการ</para>

<para>The second way is to have ownership of the project handed to you by
the previous owner (this is sometimes known as `passing the baton').
It is well understood in the community that project owners have a duty
to pass projects to competent successors when they are no longer
willing or able to invest needed time in development or maintenance
work.</para>

<para>ทางที่สองคือ ให้มีการถ่ายโอนกรรมสิทธิ์นั้นให้กับคุณจากเจ้าของคนเดิม
(การถ่ายโอนนี้ บางทีก็รู้จักกันในนาม `การส่งไม้' (passing the baton))
ประชาคมจะเข้าใจดีว่า
เป็นหน้าที่จองเจ้าของโครงการที่จะส่งต่อโครงการให้กับผู้สืบทอดที่มีความสามารถ
เมื่อเขาไม่ต้องการหรือไม่สามารถอุทิศเวลาให้กับงานพัฒนาหรือดูแลโครงการได้อีก
</para>

<para>It is significant that in the case of major projects, such transfers
of control are generally announced with some fanfare.  While it is
unheard of for the open-source community at large to actually
interfere in the owner's choice of succession, customary practice
clearly incorporates a premise that public legitimacy is important.</para>

<para>เป็นเรื่องสำคัญในกรณีของโครงการใหญ่ๆ
ที่ต้องมีการประกาศการถ่ายโอนการควบคุมดังกล่าวอย่างเป็นทางการ
และถึงแม้จะไม่เคยปรากฏว่ามีชุมชนโอเพนซอร์สไหนไปก้าวก่ายการตัดสินใจของเจ้าของโครงการ
แต่ตามธรรมเนียมปฏิบัติแล้ว
ก็จะถือเอาความเหมาะสมตามความเห็นของสาธารณชนเป็นสำคัญ</para>

<para>For minor projects, it is generally sufficient for a change history
included with the project distribution to note the change of
ownership.  The clear presumption is that if the former owner has not
in fact voluntarily transferred control, he or she may reassert
control with community backing by objecting publicly within a
reasonable period of time.</para>

<para>สำหรับโครงการเล็กๆ
การบันทึกการเปลี่ยนกรรมสิทธิ์ลงในประวัติการเปลี่ยนแปลงของโครงการที่แนบไปพร้อมกับการแจกจ่ายก็ถือว่าเพียงพอ
โดยถือว่า ถ้าเจ้าของคนก่อนไม่ได้เต็มใจถ่ายโอนการควบคุมให้
เขาก็สามารถร้องขออำนาจคืนด้วยการสนับสนุนของชุมชน
โดยประท้วงในที่สาธารณะภายในเวลาอันควรได้</para>

<para>The third way to acquire ownership of a project is to observe that it
needs work and the owner has disappeared or lost interest.  If you
want to do this, it is your responsibility to make the effort to find
the owner.  If you don't succeed, then you may announce in a relevant
place (such as a Usenet newsgroup dedicated to the application area)
that the project appears to be orphaned, and that you are considering
taking responsibility for it.</para>

<para>ทางที่สามที่จะได้มาซึ่งกรรมสิทธิ์ในโครงการ
คือการสังเกตพบว่าโครงการมีสิ่งที่ควรทำต่อ แต่เจ้าของได้หายตัวไป หรือเลิกสนใจ
ถ้าคุณต้องการทำงานชิ้นนั้น ก็เป็นความรับผิดชอบของคุณที่จะพยายามหาตัวเจ้าของให้พบ
ถ้าคุณหาไม่พบ ก็อาจจะประกาศในที่ที่เกี่ยวข้อง (เช่น ในกลุ่มข่าว Usenet
ที่ตั้งขึ้นเพื่อโปรแกรมประเภทนั้น) ว่าโครงการนั้นไร้ผู้ดูแล
และคุณกำลังพิจารณารับภาระดูแลต่อ</para>

<para>Custom demands that you allow some time to pass before following
up with an announcement that you have declared yourself the new owner.
In this interval, if someone else announces that they have been
actually working on the project, their claim trumps yours.  It is
considered good form to give public notice of your intentions more
than once.  You get more points for good form if you announce in many
relevant forums (related newsgroups, mailing lists), and still more if
you show patience in waiting for replies.  In general, the more
visible effort you make to allow the previous owner or other claimants
to respond, the better your claim if no response is
forthcoming.</para>

<para>ตามธรรมเนียมแล้ว คุณควรเว้นช่วงเวลาสักพัก ก่อนที่จะตอบการประกาศของคุณ
ว่าคุณจะประกาศตัวเป็นเจ้าของคนใหม่ โดยในช่วงนี้
ถ้ามีใครบางคนประกาศว่าเขากำลังทำงานกับโครงการนี้อยู่ ก็ถือว่าเขาได้ไป
ถ้ายังไม่มีใครตอบ การประกาศต่อสาธารณะมากกว่าหนึ่งครั้งก็ถือว่าเป็นมารยาทที่ดี
คุณจะยิ่งได้คะแนนมารยาทมากขึ้นถ้าคุณประกาศในฟอรัมที่เกี่ยวข้องหลายแห่ง (เช่น
กลุ่มข่าวที่เกี่ยวข้องและเมลลิงลิสต์)
และจะได้มากขึ้นอีกถ้าคุณแสดงความอดทนที่จะรอคำตอบ โดยทั่วไปแล้ว
ยิ่งคุณแสดงความพยายามให้เห็นมากเท่าไร
ในการให้โอกาสเจ้าของคนเดิมหรือผู้อื่นที่อาจอ้างสิทธิ์ที่จะให้คำตอบ
การอ้างกรรมสิทธิ์ของคุณเมื่อไร้คำตอบ ก็จะดูดีมากขึ้นเท่านั้น</para>

<para>If you have gone through this process in sight of the project's user
community, and there are no objections, then you may claim ownership
of the orphaned project and so note in its history file.  This,
however, is less secure than being passed the baton, and you cannot
expect to be considered fully legitimate until you have made
substantial improvements in the sight of the user community.</para>

<para>ถ้าคุณได้ผ่านขั้นตอนทั้งหมดนี้ท่ามกลางสายตาของชุมชนผู้ใช้ของโครงการมาแล้ว
ก็จะไม่มีการคัดค้านอะไรอีก คุณก็สามารถอ้างกรรมสิทธิ์ในโครงการไร้ผู้ดูแลนี้
และสามารถบันทึกการถ่ายโอนลงในประวัติโครงการได้ อย่างไรก็ตาม
วิธีนี้ก็ยังปลอดภัยน้อยกว่าการรับไม้โดยตรง
และคุณก็ยังไม่อาจคาดหวังว่าจะมีความชอบธรรมเต็มที่
จนกว่าคุณจะได้ลงมือปรับปรุงจนเห็นได้ชัดในสายตาของชุมชนผู้ใช้</para>

<para>I have observed these customs in action for 20 years, going back
to the pre-FSF ancient history of open-source software.  They have
several very interesting features.  One of the most interesting is
that most hackers have followed them without being fully aware of
doing so.  Indeed, this may be the first conscious and reasonably
complete summary ever to have been written down.</para>

<para>ผู้เขียนได้สังเกตเห็นจารีตประเพณีเหล่านี้ในสถานการณ์จริงมากว่า 20 ปี
ย้อนไปจนถึงประวัติศาสตร์ของซอฟต์แวร์โอเพนซอร์สในยุคเก่าก่อน FSF
เป็นจารีตประเพณีที่มีลักษณะที่น่าสนใจมากๆ หลายประการ ประการหนึ่งคือ
แฮ็กเกอร์ส่วนใหญ่ประพฤติตามนี้โดยไม่รู้ตัว และความจริงแล้ว
นี่อาจเป็นการสรุปอย่างสมบูรณ์และอย่างรู้ตัวเป็นครั้งแรกที่เคยจดบันทึก</para>

<para>Another is that, for unconscious customs, they have been followed with
remarkable (even astonishing) consistency.  I have observed the
evolution of literally hundreds of open-source projects, and I can
still count the number of significant violations I have observed or
heard about on my fingers.</para>

<para>ลักษณะอีกอย่างหนึ่งสำหรับจารีตประเพณีแฝงนี้ก็คือ
ทุกคนเชื่อฟังมันอย่างสม่ำเสมอในระดับที่น่าสังเกต (หรือกระทั่งน่าพิศวง)
ผู้เขียนได้สังเกตวิวัฒนาการของโครงการโอเพนซอร์สมาหลายร้อยโครงการ
และสามารถนับจำนวนครั้งของการฝ่าฝืนอย่างร้ายแรงที่สังเกตเห็นหรือเคยได้ยินได้ด้วยนิ้วมือของผู้เขียน
</para>

<para>Yet a third interesting feature is that as these customs have evolved
over time, they have done so in a consistent direction.  That
direction has been to encourage more public accountability, more
public notice, and more care about preserving the credits and change
histories of projects in ways that (among other things) establish
the legitimacy of the present owners.</para>

<para>ยังมีลักษณะที่น่าสนใจประการที่สาม คือจารีตประเพณีเหล่านี้
มีการพัฒนาตามกาลเวลา และพัฒนาในทิศทางที่แน่นอน ทิศทางที่ว่านี้
เป็นไปเพื่อเอื้อให้เกิดความโปร่งใสในสาธารณะมากยิ่งขึ้น
เกิดความสังวรณ์ในสาธารณะมากขึ้น
และเกิดความเอาใจใส่มากขึ้นในการระวังรักษาการนับผลงานและประวัติโครงการในทางที่
(นอกเหนือจากสิ่งอื่น) สถาปนาความชอบธรรมแก่เจ้าของปัจจุบันของโครงการ</para>

<para>These features suggest that the customs are not accidental, but are
products of some kind of implicit agenda or generative pattern in the
open-source culture that is utterly fundamental to the way it operates.</para>

<para>ลักษณะเหล่านี้บ่งบอกว่า จารีตประเพณีเหล่านี้มิได้เกิดขึ้นโดยบังเอิญ
แต่เป็นผลของแผนการณ์แฝง หรือแบบแผนที่เกิดซ้ำแล้วซ้ำเล่าในวัฒนธรรมโอเพนซอร์ส
โดยเป็นสิ่งพื้นฐานที่สุดต่อแนวทางการทำงาน</para>

<para>An early respondent pointed out that contrasting the Internet hacker
culture with the cracker/pirate culture (the ``warez d00dz'' centered
around game-cracking and pirate bulletin-board systems) illuminates
the generative patterns of both rather well.  We'll return to the
d00dz for contrast later in this essay.</para>

<para>มีผู้ให้ความเห็นคนแรกๆ ต่อบทความนี้ ชี้ว่าการเปรียบเทียบกับด้านตรงข้าม
ระหว่างวัฒนธรรมแฮ็กเกอร์ในอินเทอร์เน็ตกับวัฒนธรรมนักเจาะ/ขโมย (cracker/pirate)
(พวก ``warez d00dz'' ที่มุ่งเจาะเกมและขโมยข้อมูลจากระบบ bulletin board)
จะช่วยทำให้เห็นภาพของแบบแผนที่เกิดซ้ำแล้วซ้ำเล่าในวัฒนธรรมทั้งสองได้เป็นอย่างดี
เราจะกลับมาพูดถึงพวก d00dz เพื่อเปรียบเทียบในภายหลังในบทความนี้</para>

</sect1>
<!-- Locke and Land Title -->
<sect1><title>ล็อคกับกรรมสิทธิ์ที่ดิน</title>

<para>To understand this generative pattern, it helps to notice a historical
analogy for these customs that is far outside the domain of hackers'
usual concerns.  As students of legal history and political philosophy
may recognize, the theory of property they imply is virtually
identical to the Anglo-American common-law theory of land tenure!</para>

<para>เพื่อที่จะเข้าใจแบบแผนที่กล่าวมา
การสังเกตอุปมาอุปไมยในประวัติของจารีตประเพณีนี้
กับสิ่งที่อยู่นอกเหนือขอบเขตของสิ่งที่แฮ็กเกอร์สนใจ อาจจะช่วยได้
นักศึกษาประวัติศาสตร์กฎหมายและปรัชญาการเมืองคงจะนึกออก
ว่าทฤษฎีทรัพย์สินที่แฝงอยู่ในแบบแผนดังกล่าวนั้น
เหมือนกันทุกประการกับทฤษฎีกฎหมายจารีตประเพณีของแองโกล-อเมริกัน
ว่าด้วยสิทธิถือครองที่ดิน!</para>

<para>In this theory, there are three ways to acquire ownership of land:</para>

<para>ตามทฤษฏีดังกล่าว มีสามทางที่จะได้มาซึ่งกรรมสิทธิ์ในที่ดิน:</para>

<para>On a frontier, where land exists that has never had an owner, one
can acquire ownership by <emphasis>homesteading</emphasis>, mixing one's labor
with the unowned land, fencing it, and defending one's title.</para>

<para>ตามพื้นที่บริเวณชายขอบ ซึ่งมีที่ดินอยู่แต่ไม่เคยมีเจ้าของ
ใครก็ตามสามารถเข้าครอบครองได้ด้วยการ <emphasis>ปักหลัก</emphasis>
โดยออกแรงหักร้างถางพง กั้นรั้ว แล้วก็ร้องขอโฉนดของตน</para>

<para>The usual means of transfer in settled areas is <emphasis>transfer of
title</emphasis>&mdash;that is, receiving the deed from the previous owner.
In this theory, the concept of `chain of title' is important.
The ideal proof of ownership is a chain of deeds and transfers
extending back to when the land was originally homesteaded.</para>

<para>วิธีปกติในการถ่ายโอนที่ดินที่จับจองแล้ว ก็คือการ
<emphasis>ถ่ายโอนกรรมสิทธิ์</emphasis> กล่าวคือ รับโฉนดต่อจากเจ้าของเดิม
ตามทฤษฎีนี้ แนวคิดเรื่อง `ลำดับการถ่ายโอนกรรมสิทธิ์' จึงสำคัญ
สิ่งที่จะพิสูจน์สิทธิครอบครองที่ดินอย่างแท้จริง
ก็คือลำดับของโฉนดและการถ่ายโอนย้อนหลังกลับไปจนถึงตอนที่ที่ดินถูกปักหลักเป็นครั้งแรก
</para>

<para>Finally, the common-law theory recognizes that land title may be
lost or abandoned (for example, if the owner dies without heirs, or
the records needed to establish chain of title to vacant land are
gone).  A piece of land that has become derelict in this way may be
claimed by <emphasis>adverse possession</emphasis>&mdash;one moves in,
improves it, and defends title as if homesteading.</para>

<para>และท้ายที่สุด ทฤษฎีกฎหมายจารีตประเพณียอมรับว่า
โฉนดที่ดินอาจสูญหายหรือถูกทิ้งร้าง (ตัวอย่างเช่น
เมื่อเจ้าของตายลงโดยไร้ทายาท
หรือหลักฐานที่ใช้พิสูจน์ลำดับการถ่ายโอนกรรมสิทธิ์ย้อนไปจนถึงที่ดินว่างเปล่าสูญหายไป)
ผืนดินที่ถูกทอดทิ้งในลักษณะนี้ อาจมีการอ้างการถือครองโดย
<emphasis>การครอบครองปรปักษ์ (adverse possession)</emphasis> กล่าวคือ
ใครก็สามารถย้ายเข้าครอบครอง ปรับปรุงที่ดิน และร้องขอโฉนดได้
เหมือนกับการเริ่มปักหลักใหม่</para>

<para>This theory, like hacker customs, evolved organically in a context
where central authority was weak or nonexistent.  It developed over a
period of a thousand years from Norse and Germanic tribal law.
Because it was systematized and rationalized in the early modern era
by the English political philosopher John Locke, it is sometimes
referred to as the Lockean theory of property.</para>

<para>เช่นเดียวกับจารีตประเพณีของแฮ็กเกอร์
ทฤษฎีนี้ก็มีวิวัฒนาการตามธรรมชาติในบริบทที่การควบคุมจากส่วนกลางมีน้อยมากหรือไม่มีเลย
มันมีการพัฒนามาตลอดช่วงพันปีจากกฎชนเผ่านอร์สและเยอรมัน
แต่เนื่องจากทฤษฎีนี้ได้รับการจัดระบบและให้เหตุผลโดยนักปรัชญาการเมือง
จอห์น ล็อค (John Locke) บางครั้งจึงเรียกทฤษฎีนี้ว่า ทฤษฎีทรัพย์สินของล็อค
(Lockean theory of property)</para>

<para>Logically similar theories have tended to evolve wherever
property has high economic or survival value and no single authority
is powerful enough to force central allocation of scarce goods.  This
is true even in the hunter-gatherer cultures that are sometimes
romantically thought to have no concept of `property'.  For example,
in the traditions of the !Kung San bushmen of the Kgalagadi (formerly
`Kalahari') Desert, there is no ownership of hunting grounds.  But
there <emphasis>is</emphasis> ownership of waterholes and springs
under a theory recognizably akin to Locke's.</para>

<para>ทฤษฎีที่มีตรรกะคล้ายๆ กันนี้
มีแนวโน้มที่จะพัฒนาขึ้นในทุกที่ที่ทรัพย์สินมีคุณค่าทางเศรษฐกิจหรือต่อความอยู่รอด
โดยที่ไม่มีอำนาจใดที่แข็งแกร่งพอจะบังคับการจัดสรรทรัพย์สินที่ขาดแคลนแบบรวมศูนย์ได้
เรื่องนี้เกิดแม้แต่กับวัฒนธรรมนักล่าสัตว์หาอาหาร
ที่บางครั้งเชื่อกันแบบอุดมคติว่าไม่มีแนวคิดของ `ทรัพย์สมบัติ' ด้วย
ตัวอย่างเช่น ตามประเพณีของคนป่าเผ่า !Kung San แห่งทะเลทราย Kgalagadi
(เดิมคือ `Karahari') แล้ว จะไม่มีกรรมสิทธิ์ในบริเวณพื้นที่ล่าสัตว์ แต่
<emphasis>มี</emphasis> การถือครองบ่อน้ำและน้ำพุ
ภายใต้หลักการที่เทียบเคียงได้กับทฤษฎีของล็อค</para>

<para>The !Kung San example is instructive, because it shows that Lockean
property customs arise only where the expected return from the
resource exceeds the expected cost of defending it.  Hunting grounds
are not property because the return from hunting is highly
unpredictable and variable, and (although highly prized) not a
necessity for day-to-day survival.  Waterholes, on the other hand, are
vital to survival and small enough to defend.</para>

<para>ตัวอย่างของเผ่า !Kung San นับว่าให้บทเรียนบางอย่าง เพราะมันแสดงให้เห็นว่า
จารีตประเพณีทรัพย์สินของล็อคจะเกิดขึ้นก็ต่อเมื่อ
ผลตอบแทนที่คาดหวังจากทรัพยากรมีค่ามากกว่าต้นทุนที่ใช้ในการปกป้อง
บริเวณพื้นที่ล่าสัตว์ไม่ได้กลายเป็นทรัพย์สินก็เพราะผลตอบแทนจากการล่านั้นคาดเดาได้ยากมาก
และความแปรปรวนก็สูง และ (ถึงแม้จะให้ผลตอบแทนสูง)
ก็ไม่ได้จำเป็นต่อการอยู่รอดแบบวันต่อวัน
ในขณะที่บ่อน้ำมีความจำเป็นอย่างยิ่งต่อการอยู่รอด
และเล็กพอที่จะปกป้องกรรมสิทธิ์ได้</para>

<para>The `noosphere' of this essay's title is the territory of ideas, the
space of all possible thoughts <link linkend="N">[N]</link>.  What we see
implied in hacker ownership customs is a Lockean theory of property
rights in one subset of the noosphere, the space of all programs.
Hence `homesteading the noosphere', which is what every founder of a
new open-source project does.</para>

<para>คำว่า `noosphere' ในชื่อบทความนี้ หมายถึงอาณาเขตของความคิด
เป็นพื้นที่ของความนึกคิดที่เป็นไปได้ทั้งหมด <link linkend="N">[N]</link>
สิ่งที่เราเห็นได้ว่าแฝงอยู่ในจารีตประเพณีกรรมสิทธิ์ของแฮ็กเกอร์
ก็คือทฤษฎีทรัพย์สินของล็อคในชนิดย่อยชนิดหนึ่งของ noosphere
กล่าวคือพื้นที่ที่เป็นของโปรแกรมทั้งหลายนั่นเอง
ดังนั้น จึงเป็นที่มาของ `homesteading the noosphere' ซึ่งทุกๆ
คนที่ตั้งโครงการโอเพนซอร์สต่างกระทำ</para>

<para>Far&eacute; Rideau <email>fare@tunes.org</email> correctly
points out that hackers do not exactly operate in the territory of
pure ideas. He asserts that what hackers own is <emphasis>programming
projects</emphasis>&mdash;intensional focus points of material labor
(development, service, etc), to which are associated things like
reputation, trustworthiness, etc.  He therefore asserts that the space
spanned by hacker projects, is <emphasis>not</emphasis> the noosphere
but a sort of dual of it, the space of noosphere-exploring program
projects.  (With an apologetic nod to the astrophysicists out there,
it would be etymologically correct to call this dual space the
`ergosphere' or `sphere of work'.)</para>

<para>Far&eacute; Rideau <email>fare@tunes.org</email> ชี้ให้เห็นอย่างถูกต้อง
ว่าแฮ็กเกอร์ทั้งหลายไม่ได้ทำงานในอาณาเขตของความคิดล้วนๆ เขายืนยันว่า
สิ่งที่แฮ็กเกอร์เป็นเจ้าของคือ <emphasis>โครงการพัฒนาโปรแกรม</emphasis>
ซึ่งเป็นศูนย์รวมของแรงงานทางวัตถุ (การพัฒนา, การบริการ ฯลฯ)
โดยมีสิ่งอื่นเชื่อมโยงด้วยอย่างชื่อเสียง ความน่าเชื่อถือ ฯลฯ
เขาจึงยืนยันว่า พื้นที่ที่ครอบครองโดยโครงการของแฮ็กเกอร์นั้น
<emphasis>ไม่ใช่</emphasis> noosphere แต่เป็นคู่ของทั้งสองอย่าง
คือเป็นโครงการพัฒนาโปรแกรมที่ทำการสำรวจ noosphere ต่างหาก
(ต้องขออภัยต่อนักดาราฟิสิกส์ทั้งหลายที่จะกล่าวว่า
คำที่น่าจะถูกต้องตามรากศัพท์ที่ใช้เรียกพื้นที่ควบคู่นี้ น่าจะเป็นคำว่า
`ergosphere' หรือ `sphere of work')</para>

<para>In practice, the distinction between noosphere and ergosphere is
not important for the purposes of our present argument.  It is dubious whether
the `noosphere' in the pure sense on which Far&eacute; insists can be said
to exist in any meaningful way; one would almost have to be a
Platonic philosopher to believe in it.  And the distinction between
noosphere and ergosphere is only of <emphasis>practical</emphasis>
importance if one wishes to assert that ideas (the elements of the
noosphere) cannot be owned, but their instantiations as projects can.
This question leads to issues in the theory of intellectual property
which are beyond the scope of this essay (but see <link linkend="DF">
[DF]</link>).</para>

<para>ในทางปฏิบัติแล้ว ความแตกต่างระหว่าง noosphere กับ ergosphere
ไม่ได้มีความสำคัญต่อจุดมุ่งหมายของสิ่งที่เรากำลังอภิปราย และน่าสงสัยว่า
`noosphere' ในความหมายบริสุทธิ์ที่ Far&eacute; ยืนยันนั้น
พูดได้เต็มปากหรือไม่ว่ามีอยู่จริงในทางที่มีความหมาย
คนที่จะเชื่ออาจจะต้องเป็นนักปรัชญาในแนวของพลาโตกระมัง และความแตกต่างระหว่าง
noosphere กับ ergosphere จะมีความสำคัญ <emphasis>ในทางปฏิบัติ</emphasis>
ก็ต่อเมื่อคุณต้องการจะยืนยันว่าความคิดทั้งหลาย (ที่เป็นองค์ประกอบของ noosphere)
ไม่สามารถครอบครองได้ แต่การทำให้เป็นรูปธรรมในรูปโครงการนั้น สามารถครอบครองได้
คำถามนี้นำไปสู่ประเด็นเรื่องทฤษฎีของทรัพย์สินทางปัญญา
ซึ่งอยู่นอกเหนือขอบเขตของบทความนี้ (แต่กรุณาอ่าน <link linkend="DF">[DF]</link>)
</para>

<para>To avoid confusion, however, it is important to note that
neither the noosphere nor the ergosphere is the same as the totality
of virtual locations in electronic media that is sometimes (to the
disgust of most hackers) called `cyberspace'.  Property there is
regulated by completely different rules that are closer to those of
the material substratum&mdash;essentially, he who owns the media and
machines on which a part of `cyberspace' is hosted owns that piece of
cyberspace as a result.</para>

<para>อย่างไรก็ตาม เพื่อไม่ให้เกิดความสับสน จำเป็นต้องตั้งข้อสังเกตว่า ไม่ว่า
noosphere หรือ ergosphere
ก็ไม่ใช่สิ่งเดียวกับองค์รวมของสถานที่เสมือนในสื่ออิเล็กทรอนิกส์ที่บางครั้ง
(ท่ามกลางความไม่ชอบของแฮ็กเกอร์ส่วนใหญ่) เรียกกันว่า `ไซเบอร์สเปซ'
(cyberspace) ทรัพย์สินในโลกที่ว่านั้นอยู่ภายใต้กฎเกณฑ์อีกอย่างหนึ่ง
ที่ใกล้เคียงกับโลกของวัตถุมากกว่า กล่าวคือ
ใครที่เป็นเจ้าของสื่อหรือเครื่องที่ส่วนของ `ไซเบอร์สเปซ' หนึ่งๆ พักอาศัยอยู่
ก็เป็นเจ้าของไซเบอร์สเปซชิ้นนั้นทันที</para>

<para>The Lockean logic of custom suggests strongly that open-source
hackers observe the customs they do in order to defend some kind of
expected return from their effort.  The return must be more
significant than the effort of homesteading projects, the cost of
maintaining version histories that document `chain of title', and the
time cost of making public notifications and waiting before taking
adverse possession of an orphaned project.</para>

<para>ตรรกะของล็อคเกี่ยวกับจารีตประเพณีชี้ให้เห็นอย่างชัดเจนว่า
แฮ็กเกอร์โอเพนซอร์สได้สังเกตจารีตประเพณีที่ตนปฏิบัติ
เพื่อที่จะปกป้องผลตอบแทนบางอย่างจากความพยายามของตน ผลตอบแทนที่ว่านั้น
ต้องมีความหมายมากกว่าความพยายามที่ใช้ในการปักหลักโครงการ
มากกว่าต้นทุนของการดูแลประวัติของรุ่นต่างๆ ที่บันทึก `ลำดับการถ่ายโอนกรรมสิทธิ์'
และมากกว่าต้นทุนของการแจ้งแก่สาธารณชนและรอคอยก่อนจะถือครองโครงการที่ไร้ผู้ดูแล
</para>

<para>Furthermore, the `yield' from open source must be something more than
simply the use of the software, something else that would be
compromised or diluted by forking.  If use were the only issue, there
would be no taboo against forking, and open-source ownership would not
resemble land tenure at all.  In fact, this alternate world (where use
is the only yield, and forking is unproblematic) is the one implied by
existing open-source licenses.</para>

<para>นอกจากนี้ `ผลที่ได้'
จากโอเพนซอร์สจะต้องเป็นอะไรที่มากกว่าแค่ประโยชน์ใช้สอยของซอฟต์แวร์
แต่เป็นสิ่งอื่นที่จะถูกทำลายหรือเจือจางลงด้วยการฟอร์ก
ถ้าประโยชน์ใช้สอยเป็นประเด็นสำคัญเพียงอย่างเดียวแล้วล่ะก็
จะไม่มีจารีตที่ห้ามการฟอร์ก
และกรรมสิทธิ์ในโอเพนซอร์สก็จะไม่คล้ายกับสิทธิถือครองที่ดินแต่อย่างใดเลย
ในความเป็นจริงแล้ว โลกอีกใบที่ว่านี้
(ที่ซึ่งประโยชน์ใช้สอยเป็นสิ่งที่ได้เพียงอย่างเดียว
และการฟอร์กก็ไม่เป็นปัญหาแต่อย่างใด)
เป็นโลกที่สัญญาอนุญาตโอเพนซอร์สทั้งหลายที่มีอยู่ต่างบุ้ยใบ้ให้มีด้วยซ้ำ</para>

<para>We can eliminate some candidate kinds of yield right away.  Because
you can't coerce effectively over a network connection, seeking power
is right out.  Likewise, the open-source culture doesn't have anything
much resembling money or an internal scarcity economy, so hackers
cannot be pursuing anything very closely analogous to material wealth
(e.g. the accumulation of scarcity tokens).</para>

<para>เราสามารถตัดตัวเลือกบางตัวของชนิดของผลตอบแทนออกไปก่อน
เนื่องจากคุณไม่สามารถรวมตัวกันได้อย่างแท้จริงผ่านการติดต่อในระบบเครือข่าย
การแสวงหาอำนาจย่อมไม่ใช่คำตอบแน่นอน ในทำนองเดียวกัน
วัฒนธรรมโอเพนซอร์สก็ไม่มีอะไรที่คล้ายกับเงินตรา
หรือมีระบบเศรษฐศาสตร์ที่ขาดแคลนอะไร ดังนั้น
แฮ็กเกอร์ก็ไม่สามารถทำเพื่อสิ่งที่ใกล้เคียงกับความมั่งคั่งทางวัตถุใดๆ (เช่น
การสะสมแต้มความจน) ได้เช่นกัน</para>

<para>There is one way that open-source activity can help people become
wealthier, however&mdash;a way that provides a valuable clue to what
actually motivates it.  Occasionally, the reputation one gains in the
hacker culture can spill over into the real world in economically
significant ways.  It can get you a better job offer, or a consulting
contract, or a book deal.</para>

<para>แม้กระนั้น
ก็ยังมีหนทางหนึ่งที่กิจกรรมโอเพนซอร์สสามารถช่วยทำให้บุคคลมั่งคั่งขึ้นได้
ซึ่งเป็นหนทางที่ให้แนวคิดที่มีคุณค่าเกี่ยวกับแรงบันดาลใจเบื้องหลัง ในบางโอกาส
ชื่อเสียงที่บุคคลได้รับจากวัฒนธรรมแฮ็กเกอร์สามารถกระจายออกไปในโลกแห่งความเป็นจริงในทางที่มีผลทางเศรษฐกิจได้
มันสามารถทำให้คุณได้งานดีๆ หรือได้รับการทำสัญญาเป็นที่ปรึกษา
หรือได้เขียนตำราก็ได้</para>

<para>This kind of side effect, however, is at best rare and marginal for
most hackers; far too much so to make it convincing as a sole
explanation, even if we ignore the repeated protestations by hackers that
they're doing what they do not for money but out of idealism or love.</para>

<para>อย่างไรก็ดี ผลข้างเคียงชนิดนี้มีน้อยมาก
และแทบจะไม่มีเลยสำหรับแฮ็กเกอร์ส่วนใหญ่ จนไม่อาจจะเชื่อได้ว่าเป็นคำอธิบายทั้งหมด
ถึงแม้เราจะไม่สนใจคำประท้วงหลายต่อหลายครั้งของแฮ็กเกอร์
ว่าพวกเขาไม่ได้ทำเพื่อเงิน แต่มาจากอุดมคติหรือความรักก็ตาม</para>

<para>However, the way such economic side effects are mediated is worth
examination.  Next we'll see that an understanding of the dynamics of
reputation within the open-source culture <emphasis>itself</emphasis> has
considerable explanatory power.</para>

<para>แม้กระนั้น หนทางที่ผลข้างเคียงทางเศรษฐกิจที่ว่าจะมีผลก็น่าตรวจสอบ
ต่อจากนี้ เราจะพบว่า ความเข้าใจในพลวัตของชื่อเสียงภายในวัฒนธรรมโอเพนซอร์ส
<emphasis>โดยตัวของมันเอง</emphasis> ก็สามารถอธิบายอะไรๆ ได้ดีทีเดียว</para>

</sect1>
<!-- The Hacker Milieu as Gift Culture -->
<sect1><title>แวดวงแฮ็กเกอร์ในฐานะวัฒนธรรมการให้</title>

<para>To understand the role of reputation in the open-source culture, it is
helpful to move from history further into anthropology and economics,
and examine the difference between <emphasis>exchange cultures</emphasis> and
<emphasis>gift cultures</emphasis>.</para>

<para>เพื่อที่จะเข้าใจบทบาทของชื่อเสียงในวัฒนธรรมโอเพนซอร์ส
การย้ายจากเรื่องประวัติศาสตร์ออกไปสู่มานุษยวิทยาและเศรษฐศาสตร์
แล้วตรวจสอบความแตกต่างระหว่าง <emphasis>วัฒนธรรมการแลกเปลี่ยน (exchange
culture)</emphasis> กับ <emphasis>วัฒนธรรมการให้ (gift culture)</emphasis>
อาจจะช่วยได้ดี</para>

<para>Human beings have an innate drive to compete for social status; it's
wired in by our evolutionary history.  For the 90% of hominid history
that ran before the invention of agriculture, our ancestors lived in
small nomadic hunter-gatherer bands.  High-status individuals (those
most effective at informing coalitions and persuading others to
cooperate with them) got the healthiest mates and access to the best
food.  This drive for status expresses itself in different ways,
depending largely on the degree of scarcity of survival goods.</para>

<para>มนุษย์มีแรงขับโดยกำเนิดที่จะช่วงชิงสถานภาพทางสังคม
แรงขับนี้เกาะเกี่ยวแนบแน่นกับประวัติศาสตร์วิวัฒนาการของเรา
90% ของประวัติศาสตร์เผ่าพันธุ์มนุษย์ก่อนยุคเกษตรกรรมนั้น
บรรพบุรุษของเราอาศัยอยู่เป็นกลุ่มนักล่าสัตว์หาอาหารเร่ร่อน
ผู้ที่อยู่ในสถานภาพสูงๆ (คือคนที่มีความสามารถในการสร้างพันธมิตร
และโน้มน้าวผู้อื่นให้ร่วมมือ) จะได้คู่ที่แข็งแรงที่สุด
และได้ครอบครองอาหารที่ดีที่สุด แรงขับเพื่อสถานภาพนี้ แสดงตัวออกมาในหลายรูปแบบ
ขึ้นอยู่กับระดับความขาดแคลนของสิ่งยังชีพเป็นสำคัญ</para>

<para>Most ways humans have of organizing are adaptations to scarcity
and want.  Each way carries with it different ways of gaining social
status.</para>

<para>วิธีที่มนุษย์รวมกลุ่มกันเกือบทั้งหมด
เป็นการปรับตัวตามความขาดแคลนและตามความต้องการ
แต่ละวิธีก็จะมีวิธีการได้มาซึ่งสถานภาพทางสังคมที่ต่างกัน</para>

<para>The simplest way is the <emphasis>command hierarchy</emphasis>.
In command hierarchies, scarce goods are allocated by one central
authority and backed up by force.  Command hierarchies scale very
poorly <link linkend="Mal">[Mal]</link>; they become increasingly
brutal and inefficient as they get larger.  For this reason, command
hierarchies above the size of an extended family are almost always
parasites on a larger economy of a different type.  In command
hierarchies, social status is primarily determined by access to
coercive power.</para>

<para>วิธีที่ง่ายที่สุดคือ <emphasis>ระบบยศศักดิ์</emphasis>
ในระบบยศศักดิ์นี้ สิ่งที่ขาดแคลนจะถูกจัดสรรโดยอำนาจศูนย์กลาง
โดยมีการสนับสนุนด้วยกำลัง ระบบยศศักดิ์
เป็นวิธีที่ปรับตัวตามขนาดได้แย่มากๆ <link linkend="Mal">[Mal]</link>
จะเกิดความป่าเถื่อนและไร้ประสิทธิภาพเมื่อขนาดของกลุ่มโตขึ้น ด้วยเหตุนี้
ระบบยศศักดิ์ในกลุ่มที่ใหญ่กว่าครอบครัวใหญ่มักจะกลายเป็นภาระของเศรษฐกิจในระดับที่ใหญ่กว่าที่ต่างชนิดกันเสมอ
ในระบบยศศักดิ์ สถานภาพทางสังคมจะกำหนดโดยการเข้าถึงอำนาจเป็นปฐม</para>

<para>Our society is predominantly an <emphasis>exchange
economy</emphasis>.  This is a sophisticated adaptation to scarcity
that, unlike the command model, scales quite well.  Allocation of
scarce goods is done in a decentralized way through trade and
voluntary cooperation (and in fact, the dominating effect of
competitive desire is to produce cooperative behavior).  In an
exchange economy, social status is primarily determined by having
control of things (not necessarily material things) to use or
trade.</para>

<para>สังคมของเราเป็น <emphasis>เศรษฐกิจแลกเปลี่ยน (exchange economy)</emphasis>
เป็นส่วนใหญ่ ระบบนี้เป็นการปรับตัวอย่างซับซ้อนต่อภาวะขาดแคลน
ซึ่งปรับตัวตามขนาดได้ดี ต่างจากแบบยศศักดิ์
การจัดสรรสิ่งขาดแคลนจะกระทำในลักษณะกระจายอำนาจ ผ่านการค้าขายแลกเปลี่ยน
และความร่วมมือโดยสมัครใจ (และอันที่จริง ผลโดยรวมของความต้องการแข่งขัน
จะออกมาในรูปพฤติกรรมการสร้างความร่วมมือนั่นเอง) ในเศรษฐกิจแลกเปลี่ยน
สถานภาพทางสังคมจะกำหนดโดยการมีอำนาจควบคุมสิ่งต่างๆ
(ซึ่งไม่จำเป็นต้องเป็นวัตถุ) เพื่อใช้สอยหรือแลกเปลี่ยนเป็นปฐม</para>

<para>Most people have implicit mental models for both of the above, and how
they interact with each other.  Government, the military, and
organized crime (for example) are command hierarchies parasitic on the
broader exchange economy we call `the free market'.  There's a third
model, however, that is radically different from either and not
generally recognized except by anthropologists; the <emphasis>gift
culture</emphasis>.</para>

<para>ผู้คนส่วนใหญ่มีมโนภาพของทั้งสองแบบที่กล่าวข้างต้นแฝงอยู่
รวมทั้งปฏิกิริยาที่มีต่อกัน ตัวอย่างเช่น รัฐ กองทหาร และอาชญากรรมที่มีการจัดตั้ง
ก็คือระบบยศศักดิ์ที่เกาะกินเศรษฐกิจแลกเปลี่ยนในวงกว้างที่เรียกกันว่า
`ตลาดเสรี' อย่างไรก็ดี ยังมีรูปแบบที่สาม ที่แตกต่างโดยสิ้นเชิงจากทั้งสองแบบ
และมักไม่ได้มีการยอมรับกันนอกจากนักมานุษยวิทยา คือ
<emphasis>วัฒนธรรมการให้ (gift culture)</emphasis></para>

<para>Gift cultures are adaptations not to scarcity but to abundance.  
They arise in populations that do not have significant
material-scarcity problems with survival goods.  We can observe
gift cultures in action among aboriginal cultures living in
ecozones with mild climates and abundant food.  We can also
observe them in certain strata of our own society, especially
in show business and among the very wealthy.</para>

<para>วัฒนธรรมการให้ไม่ใช่การปรับตัวตามความขาดแคลน แต่ตามความเหลือเฟือ
วัฒนธรรมนี้จะเกิดกับประชากรที่ไม่ได้มีปัญหาความขาดแคลนทางวัตถุเกี่ยวกับสิ่งยังชีพมากมายอะไร
เราสามารถสังเกตเห็นวัฒนธรรมการให้จริงได้ในวัฒนธรรมอะบอริจินที่อาศัยในเขตที่สภาพอากาศเบาสบายและมีอาหารบริบูรณ์
และเรายังสามารถสังเกตเห็นวัฒนธรรมนี้ได้ในบางชนชั้นของสังคมเรา
โดยเฉพาะในธุรกิจการแสดงและในหมู่คนร่ำรวย</para>

<para>Abundance makes command relationships difficult to sustain
and exchange relationships an almost pointless game.  In gift
cultures, social status is determined not by what you control
but by <emphasis>what you give away</emphasis>.</para>

<para>ความเหลือเฟือทำให้ความสัมพันธ์แบบยศศักดิ์ดำรงอยู่ได้ยาก
และการแลกเปลี่ยนกลายเป็นเกมที่แทบจะไร้ความหมาย ในวัฒนธรรมการให้นี้
สถานภาพทางสังคมไม่ได้กำหนดโดยสิ่งที่คุณควบคุม แต่โดย
<emphasis>สิ่งที่คุณให้ไป</emphasis></para>

<para>Thus the Kwakiutl chieftain's potlach party.  Thus the
multi-millionaire's elaborate and usually public acts of philanthropy.
And thus the hacker's long hours of effort to produce high-quality
open-source code.</para>

<para>ดังนั้น จึงเป็นที่มาของงานฉลอง potlatch ของหัวหน้าเผ่าชาว Kwakiutl
เป็นที่มาของการแสดงออกอย่างถี่ถ้วนและมักปรากฏต่อสาธารณชนของเหล่าเศรษฐี
ถึงความรักที่มีต่อมวลมนุษย์
และเป็นที่มาของความพยายามอันยาวนานของแฮ็กเกอร์ที่จะสร้างโค้ดโอเพนซอร์สคุณภาพสูง
</para>

<para>For examined in this way, it is quite clear that the society of
open-source hackers is in fact a gift culture.  Within it, there is no
serious shortage of the `survival necessities'&mdash;disk space, network
bandwidth, computing power.  Software is freely shared.  This
abundance creates a situation in which the only available measure of
competitive success is reputation among one's peers.</para>

<para>ด้วยการตรวจสอบดังนี้ จึงเห็นได้ชัดว่า
สังคมของแฮ็กเกอร์โอเพนซอร์สแท้ที่จริงก็คือวัฒนธรรมการให้นั่นเอง ภายในสังคมนี้
ไม่มีความขาดแคลน `สิ่งจำเป็นสำหรับยังชีพ' กล่าวคือ เนื้อที่ดิสก์
ความเร็วของเครือข่าย และพลังของหน่วยประมวลผล อย่างรุนแรงอะไร
มีการแบ่งปันซอฟต์แวร์อย่างเสรี ความเหลือเฟือนี้
ทำให้เกิดสภาวการณ์ที่มาตรวัดความสำเร็จในการแข่งขันมีอยู่เพียงอย่างเดียว
คือชื่อเสียงในหมู่ชน</para>

<para>This observation is not in itself entirely sufficient to explain
the observed features of hacker culture, however.  The crackers and
warez d00dz have a gift culture that thrives in the same (electronic)
media as that of the hackers, but their behavior is very different.
The group mentality in their culture is much stronger and more
exclusive than among hackers.  They hoard secrets rather than sharing
them; one is much more likely to find cracker groups distributing
sourceless executables that crack software than tips that give away
how they did it.  (For an inside perspective on this behavior, see
<link linkend="lw" >[LW]</link>).</para>

<para>อย่างไรก็ดี ลำพังการสังเกตนี้เพียงอย่างเดียว
ยังไม่เพียงพอที่จะอธิบายลักษณะของวัฒนธรรมแฮ็กเกอร์ นักเจาะระบบและ warez d00dz
ก็มีวัฒนธรรมการให้ที่งอกงามในสื่อ (อิเล็กทรอนิกส์) เดียวกันกับของแฮ็กเกอร์
แต่พฤติกรรมของกลุ่มนี้จะแตกต่างอย่างมาก
บุคลิกกลุ่มในวัฒนธรรมนั้นจะรุนแรงและปิดตัวกว่าในกลุ่มแฮ็กเกอร์มาก
พวกเขาจะเก็บความลับไว้กับตัวมากกว่าจะแบ่งปัน
เราจะพบกลุ่มนักเจาะระบบที่แจกจ่ายโปรแกรมไร้ซอร์สที่เจาะซอฟต์แวร์อื่น
มากกว่าที่จะบอกเคล็ดลับว่าทำได้อย่างไร
(หากสนใจรายละเอียดเบื้องลึกของพฤติกรรมนี้ อ่าน
<link linkend="lw" >[LW]</link>)</para>

<para>What this shows, in case it wasn't obvious, is that there is
more than one way to run a gift culture.  History and values matter.
I have summarized the history of the hacker culture in <citetitle>A
Brief History of Hackerdom</citetitle><link linkend="HH">[HH]</link>;
the ways in which it shaped present behavior are not mysterious.
Hackers have defined their culture by a set of choices about the
<emphasis>form</emphasis> that their competition will take.  It is
that form that we will examine in the remainder of this essay.</para>

<para>ในกรณีที่คุณยังไม่ประจักษ์ การเปรียบเทียบนี้แสดงให้เห็นว่า
มีมากกว่าหนึ่งวิธีที่จะดำเนินวัฒนธรรมการให้ ประวัติศาสตร์และคุณค่าเป็นสิ่งสำคัญ
ผู้เขียนได้สรุปประวัติของวัฒนธรรมแฮ็กเกอร์ไว้ใน <citetitle>A Brief History of
Hackerdom</citetitle><link linkend="HH">[HH]</link>
วิธีที่วัฒนธรรมนี้ก่อร่างขึ้นมาได้ไม่ใช่สิ่งลึกลับอะไร
เหล่าแฮ็กเกอร์ได้กำหนดวัฒนธรรมของตนเองด้วยทางเลือกจำนวนหนึ่งเกี่ยวกับ
<emphasis>รูปแบบ</emphasis> ที่พวกเขาจะแข่งขันกัน และรูปแบบที่ว่านี้แหละ
ที่เราจะตรวจสอบกันต่อไปในส่วนที่เหลือของบทความนี้</para>

</sect1>
<!-- The Joy of Hacking -->
<sect1><title>ความหรรษาแห่งการแฮ็ก</title>

<para>In making this `reputation game' analysis, by the way, I do not mean to
devalue or ignore the pure artistic satisfaction of designing
beautiful software and making it work.  Hackers all experience this kind
of satisfaction and thrive on it.  People for whom it is not a
significant motivation never become hackers in the first place, just
as people who don't love music never become composers.</para>

<para>อนึ่ง ในการวิเคราะห์ `เกมแห่งชื่อเสียง' (reputation game) นี้
ผู้เขียนมิได้มีเจตนาที่จะละเลยความพึงใจทางศิลปะของการออกแบบซอฟต์แวร์ที่สวยงามและสร้างให้มันใช้งานได้
แฮ็กเกอร์ทุกคนต่างได้ผ่านประสบการณ์ความพึงใจนี้ และเติบโตมากับมัน
ใครที่ไม่เคยเห็นมันเป็นแรงจูงใจที่สลักสำคัญ ก็ไม่มีทางมาเป็นแฮ็กเกอร์แต่แรกแล้ว
ไม่ต่างอะไรกับการที่คนที่ไม่ได้รักดนตรีไม่มีทางเป็นนักประพันธ์เพลง</para>

<para>So perhaps we should consider another model of hacker behavior in
which the pure joy of craftsmanship is the primary motivation.
This `craftsmanship' model would have to explain hacker custom as a way
of maximizing both the opportunities for craftsmanship and the quality
of the results.  Does this conflict with or suggest different results
than the reputation game model?</para>  

<para>ดังนั้น บางทีเราควรจะพิจารณาการอธิบายพฤติกรรมแฮ็กเกอร์ในแบบที่ใช้ความหรรษาล้วนๆ
ของการเป็นช่างฝีมือเป็นแรงจูงใจหลักดูบ้าง การอธิบายด้วย `ความเป็นช่างฝีมือ' นี้
จะต้องอธิบายจารีตประเพณีแฮ็กเกอร์ว่าเป็นหนทางที่ทั้งให้โอกาสสูงสุดในการเป็นช่างฝีมือ
และให้คุณภาพของผลลัพธ์สูงสุดด้วย คำอธิบายนี้จะขัดแย้ง
หรือให้ผลลัพธ์ที่ต่างจากการอธิบายโดยใช้เกมแห่งชื่อเสียงหรือไม่?</para>

<para>Not really.  In examining the craftsmanship model, we come back
to the same problems that constrain hackerdom to operate like a gift
culture.  How can one maximize quality if there is no metric for
quality?  If scarcity economics doesn't operate, what metrics are
available besides peer evaluation?  It appears that any craftsmanship
culture ultimately must structure itself through a reputation
game&mdash;and, in fact, we can observe exactly this dynamic in many
historical craftsmanship cultures from the medieval guilds
onwards.</para>

<para>ก็ไม่เชิง ในการตรวจสอบคำอธิบายโดยใช้ความเป็นช่างฝีมือ
เราก็กลับมาที่ปัญหาเดิม
ที่บังคับความเป็นแฮ็กเกอร์ให้ดำเนินในแบบวัฒนธรรมการให้อยู่เช่นเดิม
คนคนหนึ่งจะทำงานให้มีคุณภาพสูงสุดได้อย่างไร ถ้าไม่มีมาตรวัดคุณภาพ?
และถ้าระบบเศรษฐศาสตร์ไร้ซึ่งความขาดแคลนแล้ว จะมีมาตรวัดใดอีก
นอกจากการประเมินผลของคนอื่น? ปรากฏว่า ท้ายที่สุดแล้ว
วัฒนธรรมช่างฝีมือก็ต้องจัดโครงสร้างตัวเองโดยอาศัยเกมแห่งชื่อเสียงอยู่ดี
และอันที่จริง
เราสามารถสังเกตความเปลี่ยนแปลงนี้ได้ในวัฒนธรรมช่างฝีมือในอดีตทั้งหลาย
ตั้งแต่สมาคมวิชาชีพในยุคกลางเป็นต้นมา</para>

<para>In one important respect, the craftsmanship model is weaker than the
`gift culture' model; by itself, it doesn't help explain the
contradiction we began this essay with.</para>

<para>ในด้านหนึ่งที่สำคัญ คำอธิบายโดยใช้ความเป็นช่างฝีมือนั้น อ่อนกว่าแบบ
`วัฒนธรรมการให้' อยู่ เพราะลำพังตัวมันเอง
ก็ไม่ได้ช่วยอธิบายความขัดแย้งในตัวเองที่ตั้งต้นบทความนี้เลย</para>

<para>Finally, the craftsmanship motivation itself may not be
psychologically as far removed from the reputation game as we might
like to assume.  Imagine your beautiful program locked up in a drawer
and never used again.  Now imagine it being used effectively and with
pleasure by many people.  Which dream gives you satisfaction?</para> 

<para>และท้ายที่สุด แรงจูงใจจากความเป็นช่างฝีมือเอง
ก็อาจไม่ได้ห่างไกลในทางจิตวิทยาจากเกมแห่งชื่อเสียงอย่างที่เราคิด
ลองนึกภาพโปรแกรมอันสวยงามของคุณถูกล็อกเก็บไว้ในลิ้นชัก และไม่เคยถูกใช้อีกเลย
แล้วลองนึกภาพที่มันถูกใช้งานจริงด้วยความพอใจของผู้คน แบบไหนที่คุณพึงใจ?</para>

<para>Nevertheless, we'll keep an eye on the craftsmanship model.  It is
intuitively appealing to many hackers, and explains some aspects of
individual behavior well enough <link linkend="HT">[HT]</link>.</para>

<para>แม้กระนั้น เราจะยังคงให้ความสนใจกับคำอธิบายที่ใช้ความช่างฝีมือต่อไป
เพราะมันเข้ากับสามัญสำนึกของแฮ็กเกอร์หลายคน
และยังอธิบายบางแง่มุมของพฤติกรรมของแต่ละบุคคลได้ดี
<link linkend="HT">[HT]</link></para>

<para>After I published the first version of this essay on the Internet, an
anonymous respondent commented: ``You may not work to get reputation,
but the reputation is a real payment with consequences if you do the
job well.''  This is a subtle and important point.  The reputation
incentives continue to operate whether or not a craftsman is aware of
them; thus, ultimately, whether or not a hacker understands his own
behavior as part of the reputation game, his behavior will be shaped
by that game.</para>

<para>หลังจากที่ผู้เขียนได้เผยแพร่รุ่นแรกของบทความนี้บนอินเทอร์เน็ต
มีผู้ขอสงวนนามท่านหนึ่งตอบกลับมา ให้ความเห็นว่า:
``คุณไม่อาจทำงานเพื่อให้ได้ชื่อเสียง แต่ชื่อเสียงจะเป็นสิ่งตอบแทน
พร้อมกับสิ่งอื่นๆ ถ้าคุณทำงานดีจริง'' นับเป็นประเด็นละเอียดอ่อนและสำคัญ
แรงจูงใจจากชื่อเสียงจะยังคงทำงานต่อไป ไม่ว่าช่างฝีมือจะรู้ตัวหรือไม่
ด้วยเหตุนี้ ท้ายที่สุดแล้ว
ไม่ว่าแฮ็กเกอร์จะเข้าใจพฤติกรรมของตัวเองว่าเป็นส่วนหนึ่งของเกมแห่งชื่อเสียงหรือไม่
แต่พฤติกรรมของเขาก็จะถูกเกมควบคุมอยู่ดี</para>

<para>Other respondents related peer-esteem rewards and the joy of
hacking to the levels above subsistence needs in Abraham Maslow's
well-known `hierarchy of values' model of human motivation <link
linkend="MH">[MH]</link>.  On this view, the joy of hacking fulfills a
self-actualization or transcendence need, which will not be
consistently expressed until lower-level needs (including those for
physical security and for `belongingness' or peer esteem) have been at
least minimally satisfied.  Thus, the reputation game may be critical
in providing a social context within which the joy of hacking can in
fact <emphasis>become</emphasis> the individual's primary
motive.</para>

<para>ผู้แสดงความเห็นท่านอื่นๆ ได้เชื่อมโยงรางวัล คือความเคารพจากบุคคลอื่น
และความหรรษาแห่งการแฮ็ก เข้ากับความต้องการเหนือระดับการเลี้ยงชีวิตรอด ตามทฤษฎี 
`ลำดับชั้นของคุณค่า' แห่งแรงจูงใจของมนุษย์อันมีชื่อเสียงของ อับราฮัม มาสโลว์
(Abraham Maslow) <link linkend="MH">[MH]</link> ตามทัศนะนี้
ความหรรษาแห่งการแฮ็กได้สนองความต้องการตระหนักในศักยภาพตน (self-actualization)
หรือความบรรลุขั้นสูง (transcendence) ซึ่งจะไม่มีทางแสดงออกอย่างมั่นคง
จนกว่าความต้องการในระดับต่ำลงไป (รวมถึงความปลอดภัยทางกายภาพ และ
`ความเป็นส่วนหนึ่งของสังคม' (belongingness) หรือความเคารพจากคนรอบข้าง)
จะได้รับการตอบสนองขั้นต่ำเป็นอย่างน้อย ดังนั้น
เกมแห่งชื่อเสียงจึงอาจสำคัญอย่างยิ่งยวด
ในการให้บริบททางสังคมที่ทำให้ความหรรษาแห่งการแฮ็กสามารถ
<emphasis>เปลี่ยน</emphasis> เป็นแรงกระตุ้นหลักของแต่ละบุคคล</para>

</sect1>
<!-- The Many Faces of Reputation -->
<sect1><title>ด้านต่างๆ อันหลากหลายของชื่อเสียง</title>

<para>There are reasons general to every gift culture why peer repute
(prestige) is worth playing for:</para>

<para>มีเหตุผลหลายข้อที่ปรากฏในทุกๆ วัฒนธรรมการให้ ที่ทำให้ชื่อเสียง
(เกียรติยศ) มีค่าควรแก่การได้มา:</para>

<para>First and most obviously, good reputation among one's peers is a
primary reward.  We're wired to experience it that way for
evolutionary reasons touched on earlier.  (Many people learn to
redirect their drive for prestige into various sublimations that
have no obvious connection to a visible peer group, such as ``honor'',
``ethical integrity'', ``piety'' etc.; this does not change the underlying
mechanism.)</para>

<para>ข้อแรก ซึ่งชัดเจนที่สุด
คือชื่อเสียงที่ดีในกลุ่มเป็นรางวัลที่สำคัญที่สุด
เราถูกกำหนดอย่างแยกไม่ออกให้ต้องประสบกับมันในแบบนี้
ตามเหตุแห่งวิวัฒนาการที่เราได้กล่าวมาแล้ว
(หลายคนเรียนรู้ที่จะหันเหแรงขับสู่เกียรติยศไปสู่สิ่งต่างๆ ที่สังคมยอมรับ
ซึ่งไม่มีส่วนเกี่ยวข้องกับกลุ่มที่มองเห็นได้ เช่น ``เกียรติ'',
``ความมั่นคงในคุณธรรม'', ``ความเคร่งในศีลธรรม'' ฯลฯ
แต่นี่ไม่ได้เปลี่ยนกลไกเบื้องหลังแต่อย่างใด)</para>

<para>Secondly, prestige is a good way (and in a pure gift economy,
the <emphasis>only</emphasis> way) to attract attention and
cooperation from others.  If one is well known for generosity,
intelligence, fair dealing, leadership ability, or other good
qualities, it becomes much easier to persuade other people that they
will gain by association with you.</para>

<para>ข้อสอง เกียรติยศเป็นทางที่ดี (และเป็น <emphasis>ทางเดียว</emphasis>
ในเศรษฐศาสตร์การให้) ที่จะดึงดูดความสนใจและความร่วมมือจากคนอื่น
ถ้าคุณเป็นที่รู้จักในความเอื้ออารี ความฉลาด ความไม่เอารัดเอาเปรียบ
ความเป็นผู้นำ หรือในลักษณะที่ดีอย่างอื่น
ก็เป็นการง่ายที่จะโน้มน้าวผู้อื่นให้เชื่อ ว่าเขาจะได้ประโยชน์ถ้าร่วมมือกับคุณ
</para>

<para>Thirdly, if your gift economy is in contact with or intertwined with
an exchange economy or a command hierarchy, your reputation may spill
over and earn you higher status there.</para>

<para>ข้อสาม ถ้าเศรษฐศาสตร์การให้ของคุณมีการติดต่อ
หรือเกี่ยวพันกับเศรษฐศาสตร์แลกเปลี่ยน หรือระบบยศศักดิ์
ชื่อเสียงของคุณก็อาจกระจายออกไปและพาคุณไปสู่สถานภาพที่สูงขึ้นในระบบเหล่านั้น
</para>

<para>Beyond these general reasons, the peculiar conditions of the hacker
culture make prestige even more valuable than it would be in a
`real world' gift culture.</para>

<para>นอกเหนือจากเหตุผลทั่วไปเหล่านี้
เงื่อนไขที่แปลกประหลาดของวัฒนธรรมแฮ็กเกอร์ยังทำให้เกียรติยศมีคุณค่ามากกว่าในวัฒนธรรมการให้
`ในโลกแห่งความเป็นจริง' ยิ่งขึ้นไปอีก</para>

<para>The main `peculiar condition' is that the artifacts one gives away
(or, interpreted another way, are the visible sign of one's gift of
energy and time) are very complex.  Their value is nowhere near as
obvious as that of material gifts or exchange-economy money.  It is
much harder to objectively distinguish a fine gift from a poor one.
Accordingly, the success of a giver's bid for status is delicately
dependent on the critical judgement of peers.</para>

<para>`เงื่อนไขแปลกประหลาด' หลักๆ ก็คือ สิ่งที่คนคนหนึ่งให้ออกไป
(หรือตีความอีกอย่าง คือสิ่งบ่งชี้ที่มองเห็นได้
ถึงแรงกายแรงใจและเวลาที่คนคนหนึ่งให้ไป) มีความซับซ้อนมากๆ
คุณค่าของมันไม่ได้มีอะไรชัดเจนใกล้เคียงกับคุณค่าในการให้วัตถุสิ่งของ
หรือเงินตราในเศรษฐศาสตร์แลกเปลี่ยนเลย
เป็นความยากลำบากกว่ามากที่จะแยกความแตกต่างระหว่างของขวัญที่ดีกับของขวัญที่แย่โดยไร้อคติ
ด้วยเหตุนี้ ความสำเร็จของข้อเสนอขอเลื่อนสภานภาพของผู้ให้
จึงขึ้นอยู่กับวิจารณญาณของผู้อื่นอย่างละเอียดอ่อน
</para>

<para>Another peculiarity is the relative purity of the open-source culture.
Most gift cultures are compromised&mdash;either by exchange-economy
relationships such as trade in luxury goods, or by command-economy
relationships such as family or clan groupings.  No significant
analogues of these exist in the open-source culture; thus, ways
of gaining status other than by peer repute are virtually absent.</para>

<para>ความแปลกประหลาดอีกประการหนึ่ง คือความบริสุทธิ์กว่าของวัฒนธรรมโอเพนซอร์ส
วัฒนธรรมการให้ส่วนใหญ่สามารถประนีประนอมได้
ไม่ว่าจะด้วยความสัมพันธ์แบบเศรษฐศาสตร์แลกเปลี่ยนอย่างการแลกด้วยสินค้าหรูหรา
หรือจะด้วยความสัมพันธ์แบบเศรษฐศาสตร์ยศศักดิ์อย่างเรื่องครอบครัวหรือหมู่ญาติ
ไม่ปรากฏว่ามีสิ่งที่คล้ายกันนี้อย่างเห็นได้ชัดในวัฒนธรรมโอเพนซอร์สเลย ดังนั้น
หนทางที่จะได้สถานภาพนอกจากชื่อเสียงในหมู่ชนแล้ว ก็ไม่มีอีกเลย</para>

</sect1>
<!-- Ownership Rights and Reputation Incentives -->
<sect1><title>สิทธิถือครองและแรงกระตุ้นจากชื่อเสียง</title>

<para>We are now in a position to pull together the previous analyses into a
coherent account of hacker ownership customs.  We understand the
yield from homesteading the noosphere now; it is peer repute in the
gift culture of hackers, with all the secondary gains and side effects
that implies.</para>

<para>เรากำลังมาถึงจุดที่จะนำเอาการวิเคราะห์ที่ผ่านมา
มารวมกันเป็นลักษณะที่สอดคล้องต้องกันของจารีตประเพณีการถือครองของแฮ็กเกอร์
เราได้เข้าใจผลที่ได้จากการปักหลัก noosphere มาแล้ว
มันคือชื่อเสียงในหมู่ชนในวัฒนธรรมการให้ของแฮ็กเกอร์
พร้อมทั้งกำไรทางอ้อมและผลข้างเคียงที่ตามมา</para>

<para>From this understanding, we can analyze the Lockean property
customs of hackerdom as a means of <emphasis>maximizing reputation
incentives</emphasis>; of ensuring that peer credit goes where it is
due and does not go where it is not due.</para>

<para>จากความเข้าใจตรงนี้
เราสามารถวิเคราะห์จารีตประเพณีทรัพย์สินของวัฒนธรรมแฮ็กเกอร์ตามทฤษฎีของล็อค
ว่าเป็นหนทางหนึ่งของ
<emphasis>การเพิ่มแรงกระตุ้นจากชื่อเสียงให้ถึงขีดสุด</emphasis>
เป็นหนทางแห่งการประกันการให้เครดิตต่อบุคคล ว่าได้ให้แก่ผู้ที่ควรให้
และไม่ให้แก่ผู้ที่ไม่ควรให้</para>

<para>The three taboos we observed above make perfect sense under this
analysis.  One's reputation can suffer unfairly if someone else
misappropriates or mangles one's work; these taboos (and related
customs) attempt to prevent this from happening.  (Or, to put it more
pragmatically, hackers generally refrain from forking or
rogue-patching others' projects in order to be able to deny legitimacy
to the same behavior practiced against themselves.)</para>

<para>ข้อห้ามสามข้อที่เราสังเกตมาข้างต้น เข้ากันได้ดีมากกับการวิเคราะห์นี้
ชื่อเสียงของบุคคลจะกระทบกระเทือนอย่างไม่เป็นธรรม
ถ้ามีผู้อื่นมาขโมยหรือปู้ยี่ปู้ยำงาน ข้อห้ามเหล่านี้
(และจารีตประเพณีที่เกี่ยวข้อง) พยายามที่จะป้องกันไม่ให้เกิดเหตุดังกล่าว
(หรือถ้าจะพูดให้ตรงแนวปฏิบัติกว่านั้นก็คือ แฮ็กเกอร์จะหลีกเลี่ยงการฟอร์ก
หรือการทำแพตช์เถื่อนกับโครงการของผู้อื่น
เพื่อที่จะสามารถปฏิเสธความชอบธรรมของพฤติกรรมเดียวกันที่เกิดกับตัวเองนั่นเอง)
</para>

<itemizedlist>
<listitem><para>
Forking projects is bad because it exposes pre-fork contributors to
a reputation risk they can only control by being active in both
child projects simultaneously after the fork.  (This would generally
be too confusing or difficult to be practical.)</para></listitem> 
<listitem><para>
การฟอร์กโครงการเป็นสิ่งที่เลว
เพราะถือเป็นการทำให้ผู้ที่มาร่วมก่อนการฟอร์กต้องเสี่ยงกับเรื่องชื่อเสียง
โดยที่สามารถทำได้เพียงแค่การเข้าร่วมทั้งสองโครงการย่อยพร้อมๆ กันหลังการฟอร์ก
(แต่การกระทำเช่นนี้ ออกจะชวนสับสน หรือยากเกินกว่าจะทำได้จริง)</para></listitem>
<listitem><para>
Distributing rogue patches (or, much worse, rogue binaries) exposes
the owners to an unfair reputation risk.  Even if the official code
is perfect, the owners will catch flak from bugs in the patches (but
see <link linkend="rp">[RP]</link>).</para></listitem>
<listitem><para>
การแจกจ่ายแพตช์เถื่อน (หรือที่แย่กว่านั้น คือไบนารีเถื่อน)
ทำให้เจ้าของต้องเผชิญความเสี่ยงเรื่องชื่อเสียงอย่างไม่เป็นธรรม
เพราะถึงแม้โค้ดที่เป็นทางการจะถูกต้องสมบูรณ์ทุกประการ
แต่เจ้าของก็ต้องมาตอบโต้คำวิพากษ์วิจารณ์กับบั๊กที่เกิดจากแพตช์เถื่อน
(แต่อ่าน <link linkend="rp">[RP]</link>)</para></listitem>
<listitem><para>
Surreptitiously filing someone's name off a project is, in cultural
context, one of the ultimate crimes.  Doing this steals the victim's gift
to be presented as the thief's own.</para></listitem>
<listitem><para>
การลักลอบคัดชื่อบางคนออกจากโครงการ ถือเป็นอาชญากรรมร้ายแรงในบริบทของวัฒนธรรม
การกระทำดังกล่าวเป็นการขโมยของขวัญของเหยื่อ แล้วมานำเสนอว่าเป็นของขวัญของโจรเอง
</para></listitem>
</itemizedlist>

<para>Of course, forking a project or distributing rogue patches for it also
directly attacks the reputation of the original developer's group.  If
I fork or rogue-patch your project, I am saying: "you made a wrong
decision by failing to take the project where I am taking it"; and
anyone who uses my forked variation is endorsing this challenge.  But this
in itself would be a fair challenge, albeit extreme; it's the sharpest end of
peer review.  It's therefore not sufficient in itself to account for
the taboos, though it doubtless contributes force to them.</para>

<para>แน่นอนว่าการฟอร์กโครงการหรือแจกจ่ายแพตช์เถื่อน
ยังเป็นการจู่โจมชื่อเสียงของกลุ่มนักพัฒนาแรกเริ่มอีกด้วย
ถ้าผู้เขียนฟอร์กหรือทำแพตช์เถื่อนกับโครงการของคุณ ก็เหมือนกับผู้เขียนพูดว่า:
``คุณตัดสินใจผิดพลาด โดยไม่สามารถนำพาโครงการไปยังจุดที่ฉันพาไปได้''
และใครก็ตามที่ใช้โปรแกรมชุดที่ผู้เขียนฟอร์ก
ก็เท่ากับรับรองการท้าทายของผู้เขียนไปด้วย แต่การท้าทายเช่นนี้
โดยตัวของมันเองก็อาจเป็นการท้าทายที่เป็นธรรม ถึงแม้จะรุนแรงไปหน่อย
มันคือความแหลมคมขั้นสุดยอดของการตรวจสอบโดยหมู่ชน ดังนั้น
มันจึงไม่เพียงพอในตัวเองที่จะนับเป็นข้อห้าม
ถึงแม้มันจะช่วยสนับสนุนข้อห้ามอย่างไม่ต้องสงสัย</para>

<para>All three taboo behaviors inflict global harm on the open-source
community as well as local harm on the victim(s).  Implicitly they
damage the entire community by decreasing each potential contributor's
perceived likelihood that gift/productive behavior will be
rewarded.</para>

<para>พฤติกรรมในข้อห้ามทั้งสามก่อความเสียหายโดยรวมต่อชุมชนโอเพนซอร์สไม่แพ้ความเสียหายโดยส่วนตัวต่อเหยื่อ
มันทำลายชุมชนทั้งหมด ด้วยการลดโอกาสความเป็นไปได้ในสายตาของผู้ที่จะเข้าร่วม
ที่การให้หรือทำงานใดๆ จะได้รับผลตอบแทนที่ดี</para>

<para>It's important to note that there are alternate candidate explanations
for two of these three taboos.</para>

<para>มีคำอธิบายแบบอื่นที่น่าตั้งข้อสังเกตไว้ ณ ที่นี้
เกี่ยวกับข้อห้ามสองในสามข้อดังกล่าว</para>

<para>First, hackers often explain their antipathy to forking projects
by bemoaning the wasteful duplication of work it would imply as the
child products evolve on more-or-less parallel courses into the
future. They may also observe that forking tends to split the
co-developer community, leaving both child projects with fewer brains
to use than the parent.</para>

<para>ข้อแรก แฮ็กเกอร์มักจะอธิบายความชิงชังการฟอร์กโครงการ
ด้วยการคร่ำครวญถึงการทำงานซ้ำซ้อนอันสิ้นเปลืองที่จะเกิดขึ้น
เมื่อโครงการลูกทั้งสองพัฒนาอย่างขนานกันไปในอนาคต และยังตั้งข้อสังเกตด้วยว่า
การฟอร์กมักจะแบ่งแยกชุมชนนักพัฒนาออกจากกัน
ทำให้โครงการลูกทั้งสองเหลือกำลังสมองน้อยลงกว่าโครงการเดิม</para>

<para>A respondent has pointed out that it is unusual for more than one 
offspring of a fork to survive with significant `market share' into
the long term.  This strengthens the incentives for all parties to
cooperate and avoid forking, because it's hard to know in advance
who will be on the losing side and see a lot of their work either
disappear entirely or languish in obscurity. </para>

<para>ผู้แสดงความเห็นท่านหนึ่งชี้ว่า
เป็นไปได้ยากมากที่โครงการลูกที่แยกตัวมากกว่าหนึ่งจะอยู่รอดได้ด้วย `ส่วนแบ่งตลาด'
ที่มากพอในระยะยาว เหตุผลนี้ ได้ช่วยเสริมแรงจูงใจของทุกฝ่ายที่จะร่วมมือกัน
และหลีกเลี่ยงการฟอร์ก เพราะยากที่จะคาดเดาล่วงหน้า ว่าใครจะเป็นฝ่ายพ่ายแพ้
และมองดูงานของตนเองหายไปต่อหน้าต่อตา หรือจ่อมจมอยู่ในซอกหลืบอันลี้ลับ</para>

<para>It has also been pointed out that the simple fact that forks are
likely to produce contention and dispute is enough to motivate social
pressure against them.  Contention and dispute disrupt the teamwork
that is necessary for each individual contributor to reach his or her
goals.</para>

<para>มีผู้ชี้ด้วยว่า เพียงข้อเท็จจริงง่ายๆ ที่ว่า
การฟอร์กมีแนวโน้มจะก่อความตึงเครียดและการทะเลาะวิวาท
ก็เพียงพอแล้วที่จะกระตุ้นแรงกดดันทางสังคมที่จะต้านมัน
ความตึงเครียดและการทะเลาะวิวาททำลายการทำงานเป็นทีม
อันเป็นสิ่งสำคัญสำหรับผู้เข้าร่วมแต่ละคนที่จะไปให้ถึงเป้าหมาย</para>

<para>Dislike of rogue patches is often explained by the objection
that they can create compatibility problems between the daughter 
versions, complicate bug-tracking enormously, and inflict work on
maintainers who have quite enough to do catching their
<emphasis>own</emphasis> mistakes.</para>

<para>ความไม่ชอบแพตช์เถื่อน ก็มักจะได้รับคำอธิบายด้วยการคัดค้าน
ว่ามันจะก่อให้เกิดปัญหาความเข้ากันได้ระหว่างรุ่นถัดๆ มา
ทำให้การติดตามบั๊กยุ่งยากอย่างสาหัส และเป็นการโยนภาระให้กับผู้ดูแล
ซึ่งมีงานมากพออยู่แล้วกับการไล่แก้ความผิดพลาด
<emphasis>ที่เกิดจากตัวเอง</emphasis></para>

<para>There is considerable truth to these explanations, and they certainly
do their bit to reinforce the Lockean logic of ownership.  But while
intellectually attractive, they fail to explain why so much emotion
and territoriality gets displayed on the infrequent occasions that the
taboos get bent or broken&mdash;not just by the injured parties, but by
bystanders and observers who often react quite harshly.  Cold-blooded
concerns about duplication of work and maintainance hassles simply do
not sufficiently explain the observed behavior.</para>

<para>คำอธิบายเหล่านี้มีส่วนจริงอยู่ไม่น้อย
และยังช่วยเสริมหลักการของล็อคเรื่องการถือครองอีกด้วย แต่ถึงแม้จะดูหลักแหลม
มันก็ยังไม่สามารถอธิบายได้ ว่าทำไมจึงมีการแสดงอารมณ์และการแบ่งฝ่ายอย่างมากมาย
เมื่อข้อห้ามถูกบิดเบือนหรือละเมิดในบางโอกาส ไม่เฉพาะจากฝ่ายที่เสียหาย
แต่ทั้งจากฝ่ายสนับสนุนและผู้สังเกตการณ์ที่มักแสดงปฏิกิริยาอย่างแข็งกร้าว
ความโหดเหี้ยมต่อการทำงานซ้ำซ้อนและต่อความน่ารำคาญของการดูแลโค้ด
ไม่น่าจะเพียงพอที่จะอธิบายพฤติกรรมที่เห็นได้</para>

<para>Then, too, there is the third taboo.  It's hard to see how anything
but the reputation-game analysis can explain this.  The fact that this
taboo is seldom analyzed much more deeply than ``It wouldn't be fair''
is revealing in its own way, as we shall see in the next section.</para>

<para>จากนั้น เรายังมีข้อห้ามที่สามอีกด้วย เป็นเรื่องยากที่จะเข้าใจ
ว่าจะมีอะไรนอกเหนือจากเกมแห่งชื่อเสียงอีก ที่จะอธิบายข้อนี้
เราจะได้เห็นกันต่อไป
ถึงการที่ข้อห้ามข้อนี้ไม่ได้ถูกวิเคราะห์เจาะลึกมากไปกว่าคำว่า
``ก็มันไม่ยุติธรรม'' ดังจะกล่าวถึงในหัวข้อถัดไป</para>

</sect1>
<!-- The Problem of Ego -->
<sect1><title>ปัญหาของอัตตา</title>

<para>At the beginning of this essay I mentioned that the unconscious
adaptive knowledge of a culture is often at odds with its conscious
ideology.  We've seen one major example of this already in the fact
that Lockean ownership customs have been widely followed despite the
fact that they violate the stated intent of the standard licenses.</para>

<para>ในตอนต้นของบทความนี้
ผู้เขียนได้กล่าวถึงการเรียนรู้ที่ปรับเปลี่ยนได้ของวัฒนธรรม
ว่ามักจะสวนทางกับอุดมการณ์ในจิตสำนึก เราได้เห็นตัวอย่างหลักๆ
ของเรื่องนี้มาแล้วจากเรื่องของจารีตประเพณีการถือครองตามทฤษฎีของล็อค
ที่มีการดำเนินตามอย่างกว้างขวาง
ถึงแม้จะเป็นการฝ่าฝืนเจตนารมณ์ที่ระบุไว้ในสัญญาอนุญาตมาตรฐานทั้งหลายก็ตาม</para>

<para>I have observed another interesting example of this phenomenon when
discussing the reputation-game analysis with hackers.  This is that
many hackers resisted the analysis and showed a strong reluctance to
admit that their behavior was motivated by a desire for peer repute
or, as I incautiously labeled it at the time, `ego satisfaction'.</para>

<para>ผู้เขียนยังได้สังเกตอีกตัวอย่างหนึ่งที่น่าสนใจของปรากฏการณ์นี้
เมื่อได้สนทนาถึงการวิเคราะห์เกมแห่งชื่อเสียงกับเหล่าแฮ็กเกอร์
คือการที่แฮ็กเกอร์หลายคนต่อต้านการวิเคราะห์นี้ และแสดงความลังเลอย่างเห็นได้ชัด
ที่จะยอมรับว่าพฤติกรรมของพวกเขาถูกกระตุ้นด้วยความกระหายชื่อเสียงในหมู่ชน
หรือที่ผู้เขียนขอเรียกอย่างไม่ได้พิจารณาถี่ถ้วนนักว่า `การสนองอัตตา'
(ego satisfaction) ไปก่อน</para>

<para>This illustrates an interesting point about the hacker culture.  It
consciously distrusts and despises egotism and ego-based motivations;
self-promotion tends to be mercilessly criticized, even when the
community might appear to have something to gain from it.  So much so,
in fact, that the culture's `big men' and tribal elders are required
to talk softly and humorously deprecate themselves at every turn in
order to maintain their status.  How this attitude meshes with an
incentive structure that apparently runs almost entirely on ego cries
out for explanation.</para>

<para>ตัวอย่างนี้แสดงให้เห็นถึงประเด็นหนึ่งที่สำคัญในวัฒนธรรมแฮ็กเกอร์
วัฒนธรรมนี้ไม่เชื่อถือและเหยียดหยามการใช้อัตตาและแรงกระตุ้นจากอัตตา
การโฆษณาตัวเองมีแนวโน้มที่จะถูกวิพากษ์วิจารณ์อย่างไร้ความปรานี
แม้จะเป็นกรณีที่ชุมชนอาจมีทีท่าที่จะได้ผลประโยชน์บางอย่างก็ตาม และอันที่จริง
ความเหยียดหยามนี้รุนแรงจนกระทั่ง `คนตำแหน่งใหญ่' และผู้อาวุโสของวัฒนธรรมนี้
จำเป็นต้องพูดจานุ่มนวลและถ่อมตัวอย่างมีอารมณ์ขันแทบทุกครั้ง
เพื่อรักษาสถานภาพของตัวเองไว้
การที่ทัศนคติแบบนี้สอดรับกันกับโครงสร้างของแรงจูงใจที่ดำเนินบนพื้นฐานของอัตตาเกือบทั้งหมดอย่างเห็นได้ชัดได้
จึงเป็นเรื่องที่ต้องการคำอธิบายเป็นอย่างมาก</para>

<para>A large part of it, certainly, stems from the generally negative
Europo-American attitude towards `ego'.  The cultural matrix of most
hackers teaches them that desiring ego satisfaction is a bad (or at
least immature) motivation; that ego is at best an eccentricity
tolerable only in prima donnas and often an actual sign of mental
pathology.  Only sublimated and disguised forms like ``peer repute'',
``self-esteem'', ``professionalism'' or ``pride of accomplishment'' are
generally acceptable.</para>

<para>แน่นอนว่าส่วนใหญ่ของเรื่องนี้มีที่มาจากทัศนคติแง่ลบของชาวยุโรปและอเมริกันที่มีต่อ
`อัตตา' ส่วนผสมของวัฒนธรรมของแฮ็กเกอร์ส่วนใหญ่สอนพวกเขาว่า
การปรารถนาการสนองอัตตาเป็นแรงกระตุ้นที่ผิด (หรืออย่างน้อยก็ไม่มีวุฒิภาวะ)
อัตตาเช่นนั้น อย่างดีที่สุดก็พอทนได้แบบอิหลักอิเหลื่อในหมู่พวกเอาแต่ใจตัวด้วยกันเท่านั้น
และมักจะแสดงถึงความป่วยทางจิต เฉพาะการแสดงออกอย่างเหมาะสมและการเปลี่ยนรูปแบบ
เช่น ``ชื่อเสียงในหมู่ชน'', ``ความเคารพตนเอง'', ``ความเป็นมืออาชีพ'' หรือ
``ความภาคภูมิในความสำเร็จ'' เท่านั้น ที่จะเป็นที่ยอมรับ</para>

<para>I could write an entire other essay on the unhealthy roots of this
part of our cultural inheritance, and the astonishing amount of
self-deceptive harm we do by believing (against all the evidence of
psychology and behavior) that we ever have truly `selfless' motives.
Perhaps I would, if Friedrich Wilhelm Nietzsche and Ayn Rand had not
already done an entirely competent job (whatever their other failings)
of deconstructing `altruism' into unacknowledged kinds of
self-interest.</para>

<para>ผู้เขียนสามารถเขียนบทความได้อีกเรื่องหนึ่งทีเดียว
เกี่ยวกับรากอันง่อนแง่นของมรดกทางวัฒนธรรมส่วนนี้
และภัยมากมายของการหลอกตัวเองของเรา โดยเชื่อ
(อย่างตรงข้ามกับหลักฐานทางจิตวิทยาและพฤติกรรมทั้งหมด) ว่าพวกเรามีแรงกระตุ้นที่
`ไร้อัตตา' อย่างแท้จริงจริงๆ บางทีผู้เขียนอาจจะเขียนไปแล้ว ถ้า Friedrich
Wilhelm Nietzsche และ Ayn Rand ไม่ได้เขียนงานอันยอดเยี่ยม
(ไม่ว่าพวกเขาจะล้มเหลวในงานอื่นเช่นไรก็ตาม) ในการทำลายภาพของ `ความรักผู้อื่น'
ลงเหลือเพียงความสนใจส่วนตัวชนิดที่ไม่รู้ตัวเท่านั้น</para>

<para>But I am not doing moral philosophy or psychology here, so I will
simply observe one minor kind of harm done by the belief that ego is
evil, which is this: it has made it emotionally difficult for many
hackers to consciously understand the social dynamics of their own
culture!</para>

<para>แต่ผู้เขียนไม่ได้มุ่งเขียนเกี่ยวกับปรัชญาหรือจิตวิทยาเกี่ยวกับจริยธรรมในที่นี้
ดังนั้น ผู้เขียนจะเพียงสังเกตชนิดเล็กๆ ของภัยของความเชื่อที่ว่าอัตตาเป็นสิ่งเลว
ซึ่งก็คือว่า: มันได้สร้างความยากลำบากทางอารมณ์ต่อแฮ็กเกอร์ทั้งหลาย
ที่จะทำความเข้าใจพลวัตทางสังคมของวัฒนธรรมของตนเองอย่างรู้ตัว!</para>

<para>But we are not quite done with this line of investigation.  The
surrounding culture's taboo against visibly ego-driven behavior is so
much intensified in the hacker (sub)culture that one must suspect it
of having some sort of special adaptive function for hackers.
Certainly the taboo is weaker (or nonexistent) among many other gift
cultures, such as the peer cultures of theater people or the very
wealthy.</para>

<para>แต่เรายังตรวจสอบเส้นทางนี้ไม่เรียบร้อยดีนัก
ข้อห้ามของวัฒนธรรมรอบข้างต่อพฤติกรรมที่ขับเคลื่อนด้วยอัตตา
ถูกเน้นในวัฒนธรรม (ย่อย)
ของแฮ็กเกอร์มากเสียจนน่าสงสัยว่ามีกลไกแบบแปรเปลี่ยนพิเศษบางอย่างสำหรับแฮ็กเกอร์
แน่นอนว่าข้อห้ามที่ว่านี้จะอ่อนกว่า (หรือไม่มีอยู่เลย) ในวัฒนธรรมการให้อื่น
เช่น วัฒนธรรมในหมู่นักแสดง หรือในหมู่มหาเศรษฐี</para>

</sect1>
<!-- The Value of Humility -->
<sect1><title>คุณค่าของความถ่อมตน</title>

<para>Having established that prestige is central to the hacker culture's
reward mechanisms, we now need to understand why it has seemed so
important that this fact remain semi-covert and largely unadmitted.</para>

<para>เมื่อได้ฟันธงลงไปแล้วว่าเกียรติยศคือศูนย์กลางของกลไกต่างๆ
ในการให้รางวัลในวัฒนธรรมแฮ็กเกอร์ เราก็จำเป็นต้องมาทำความเข้าใจกันต่อ
ว่าทำไมจึงดูสำคัญนักที่เรื่องนี้ยังมีความเห็นแตกต่าง
และไม่เป็นที่ยอมรับกันอย่างมาก</para>

<para>The contrast with the pirate culture is instructive.  In that culture,
status-seeking behavior is overt and even blatant.  These crackers
seek acclaim for releasing ``zero-day warez'' (cracked software
redistributed on the day of the original uncracked version's release)
but are closemouthed about how they do it. These magicians don't like
to give away their tricks.  And, as a result, the knowledge base of
the cracker culture as a whole increases only slowly.</para>

<para>ความต่างจากวัฒนธรรมการลักขโมยสามารถบอกอะไรเราได้ ในวัฒนธรรมนั้น
พฤติกรรมการแสวงหาชื่อเสียงจะโจ่งแจ้งหรือกระทั่งโอ้อวด
นักเจาะระบบเหล่านี้พยายามจะแสวงหาคำสรรเสริญที่สามารถปล่อย
``โปรแกรมปลดล็อกศูนย์วัน'' (zero-day warez) (ซอฟต์แวร์ที่เจาะแล้ว
และแจกจ่ายภายในวันเดียวกับวันประกาศตัวของซอฟต์แวร์ดั้งเดิมที่ยังไม่ถูกเจาะ)
แต่จะปิดปากสนิทเรื่องวิธีการที่ทำ
นักมายากลเหล่านี้ไม่ชอบที่จะบอกเคล็ดแก่ผู้อื่น ซึ่งผลก็คือ
องค์ความรู้ของวัฒนธรรมนักเจาะโดยรวมมีการเพิ่มพูนในอัตราที่ต่ำมาก</para>

<para>In the hacker community, by contrast, one's work is one's
statement.  There's a very strict meritocracy (the best craftsmanship
wins) and there's a strong ethos that quality should (indeed
<emphasis>must</emphasis>) be left to speak for itself.  The best brag
is code that ``just works'', and that any competent programmer can see
is good stuff.  Thus, the hacker culture's knowledge base increases
rapidly.</para>

<para>ในทางตรงกันข้าม ในชุมชนแฮ็กเกอร์นั้น สิ่งที่ทำคือสิ่งที่พูด
มีสังคมที่เชื่อมั่นในความสำเร็จด้วยตนเอง (meritocracy)
(ช่างฝีมือที่เก่งที่สุดเป็นผู้ชนะ) มีจิตวิญญาณที่เข้มแข็งที่เชื่อว่า
เรื่องของคุณภาพนั้นควร (อันที่จริงคือ <emphasis>ต้อง</emphasis>)
ปล่อยให้เนื้องานบอกเอง การอวดอ้างที่ดีที่สุดที่จะทำได้ คือการบอกว่าโค้ดนั้น
``แค่ทำงานได้'' (just works) และบอกว่า โปรแกรมเมอร์ที่มีฝีมือจะเห็นว่ามันดี
ด้วยเหตุนี้ องค์ความรู้ของวัฒนธรรมแฮ็กเกอร์จึงเพิ่มพูนอย่างรวดเร็ว</para>

<para>The taboo against ego-driven posturing therefore increases productivity.
But that's a second-order effect; what is being directly protected
here is the quality of the information in the community's
peer-evaluation system.  That is, boasting or self-importance is
suppressed because it behaves like noise tending to corrupt the vital
signals from experiments in creative and cooperative behavior.</para>

<para>ข้อห้ามต่อการเก๊กท่าโดยมีแรงขับจากอัตตาจึงช่วยเพิ่มผลิตผล
แต่นั่นก็เป็นเพียงผลทางอ้อม สิ่งที่ได้รับการปกป้องโดยตรงในที่นี้
คือคุณภาพของข้อมูลในระบบการประเมินผลโดยหมู่ชนในชุมชน กล่าวคือ
การโอ้อวดหรือสำคัญตนจะถูกเมิน เพราะถือเป็นพฤติกรรมที่เหมือนคลื่นรบกวน
อันจะทำลายสัญญาณที่มีคุณภาพที่มาจากการทดลองภายใต้พฤติกรรมแบบสร้างสรรค์และร่วมมือ
</para>

<para>For very similar reasons, attacking the author rather than the code is
not done.  There is an interesting subtlety here that reinforces the
point; hackers feel very free to flame each other over ideological and
personal differences, but it is unheard of for any hacker to publicly
attack another's competence at technical work (even private criticism
is unusual and tends to be muted in tone).  Bug-hunting and criticism
are always project-labeled, not person-labeled.</para>

<para>ด้วยเหตุผลที่คล้ายกัน การโจมตีผู้เขียนแทนที่จะเป็นโค้ดก็จะไม่เกิดเช่นกัน
ตรงนี้มีความละเอียดอ่อนที่น่าสนใจข้อหนึ่งที่ช่วยเสริมประเด็น
คือแฮ็กเกอร์รู้สึกอิสระที่จะโจมตีกันด้วยเรื่องอุดมการณ์และความแตกต่างระหว่างบุคคล
แต่จะไม่เคยได้ยินแฮ็กเกอร์คนไหนโจมตีความสามารถทางเทคนิคของคนอื่นในที่สาธารณะ
(แม้แต่การวิจารณ์เป็นการส่วนตัวก็ถือเป็นเรื่องไม่ปกติ และมักจะใช้น้ำเสียงที่เบา)
การล่าบั๊กหรือการวิจารณ์จะทำในนามของโครงการเสมอ ไม่ใช่ในนามของบุคคล</para>

<para>Furthermore, past bugs are not automatically held against a
developer; the fact that a bug has been fixed is generally considered
more important than the fact that one used to be there.  As one
respondent observed, one can gain status by fixing `Emacs bugs', but
not by fixing `Richard Stallman's bugs'&mdash;and it would be considered
extremely bad form to criticize Stallman for <emphasis>old</emphasis>
Emacs bugs that have since been fixed.</para>

<para>นอกจากนี้ บั๊กในอดีตก็จะไม่มีการนำมาหาความนักพัฒนา
การที่บั๊กได้รับการแก้ไขแล้ว เป็นข้อเท็จจริงที่ถือว่าสำคัญกว่าการที่มันเคยมีอยู่
มีผู้แสดงความเห็นท่านหนึ่งตั้งข้อสังเกตว่า คนคนหนึ่งสามารถได้สถานภาพมาด้วยการแก้
`บั๊กของ Emacs' ไม่ใช่ด้วยการแก้ `บั๊กของริชาร์ด สตอลแมน'
และถือเป็นการเสียมารยาทที่จะวิพากษ์วิจารณ์สตอลแมนเกี่ยวกับบั๊ก
<emphasis>เก่า</emphasis> ใน Emacs ที่ได้รับการแก้ไขไปแล้ว</para>

<para>This makes an interesting contrast with many parts of academia, in
which trashing putatively defective work by others is an important
mode of gaining reputation.  In the hacker culture, such behavior
is rather heavily tabooed&mdash;so heavily, in fact, that the
absence of such behavior did not present itself to me as a datum until
that one respondent with an unusual perspective pointed it out nearly
a full year after this essay was first published!</para>

<para>เรื่องนี้มีความแตกต่างที่น่าสนใจกับหลายๆ ส่วนของภาคการศึกษา
ที่ซึ่งการโละงานเก่าที่เห็นกันว่าบกพร่องของคนอื่นเป็นรูปแบบหนึ่งที่สำคัญของการเลื่อนสถานภาพ
ในวัฒนธรรมแฮ็กเกอร์ พฤติกรรมดังกล่าวค่อนข้างเป็นข้อห้ามที่หนักแน่น
หนักแน่นเสียจนการไม่มีอยู่ของมันไม่ได้แวบเข้ามาในข้อมูลดิบของผู้เขียนเลย
จนกระทั่งผู้แสดงความเห็นผู้มีทัศนะที่ไม่ธรรมดาท่านหนึ่งชี้ให้เห็น
หลังจากที่ประกาศบทความนี้ครั้งแรกถึงหนึ่งปีเต็ม!</para>

<para>The taboo against attacks on competence (not shared with academia) is
even more revealing than the (shared) taboo on posturing, because we
can relate it to a difference between academia and hackerdom in their
communications and support structures.</para>

<para>ข้อห้ามต่อการโจมตีความสามารถ (ที่ไม่ได้มีร่วมกับภาคการศึกษา) นี้
ชัดเจนเสียยิ่งกว่าข้อห้าม (ที่มีร่วมกัน) ต่อการเก๊กท่า
เพราะเราสามารถเชื่อมโยงข้อห้ามนี้กับความแตกต่างระหว่างภาคการศึกษากับแวดวงแฮ็กเกอร์เรื่องโครงสร้างของการสื่อสารและการสนับสนุน</para>

<para>The hacker culture's medium of gifting is intangible, its
communications channels are poor at expressing emotional nuance, and
face-to-face contact among its members is the exception rather than
the rule.  This gives it a lower tolerance of noise than most other
gift cultures, and goes a long way to explain both the taboo against
posturing and the taboo against attacks on competence.  Any
significant incidence of flames over hackers' competence would
intolerably disrupt the culture's reputation scoreboard.</para>

<para>สื่อกลางของวัฒนธรรมแฮ็กเกอร์เป็นสิ่งที่ไม่มีรูปร่างให้จับต้องได้
ช่องทางการสื่อสารของแฮกเกอร์ไม่อำนวยต่อการแสดงความละเอียดอ่อนทางอารมณ์
และการพบกันตัวเป็นๆ ของสมาชิกก็เป็นข้อยกเว้นมากกว่าเรื่องปกติ
จึงทำให้มีความอดทนต่อคลื่นรบกวนต่ำกว่าวัฒนธรรมการให้อื่นๆ
และเรื่องนี้ก็ช่วยอธิบายได้เป็นอย่างดี ทั้งเรื่องข้อห้ามต่อการเก๊กท่า
และข้อห้ามต่อการโจมตีความสามารถ การเกิดการปรามาสความสามารถของแฮ็กเกอร์บ่อยๆ
จะล้มตารางคะแนนเรื่องชื่อเสียงในชุมชน ซึ่งน่ารำคาญจนยอมรับไม่ได้</para>

<para>The same vulnerability to noise explains the model of public
humility required of the hacker community's tribal elders.  They must
be seen to be free of boast and posturing so the taboo against
dangerous noise will hold. <link linkend="dc">[DC]</link></para>

<para>ความเปราะบางต่อคลื่นรบกวนอย่างเดียวกันนี้
สามารถอธิบายความต้องการความถ่อมตนจากสมาชิกอาวุโสในชุมชนแฮ็กเกอร์ได้ด้วย
เขาเหล่านั้นจำเป็นต้องมีภาพที่ปราศจากการอวดตัวและการเก๊กท่า
เพื่อที่จะให้ข้อห้ามต่อคลื่นรบกวนนี้มีผลต่อไป <link linkend="dc">[DC]</link>
</para>

<para>Talking softly is also functional if one aspires to be a
maintainer of a successful project; one must convince the community
that one has good judgement, because most of the maintainer's job is
going to be judging other people's code.  Who would be inclined to
contribute work to someone who clearly can't judge the quality of
their own code, or whose behavior suggests they will attempt to
unfairly hog the reputation return from the project?  Potential
contributors want project leaders with enough humility and class to be
able to to say, when objectively appropriate, ``Yes, that does work
better than my version, I'll use it''&mdash;and to give credit where
credit is due.</para>

<para>การพูดอย่างนุ่มนวลก็เป็นอีกปัจจัยหนึ่งถ้าใครมุ่งหวังจะเป็นผู้ดูแลของโครงการที่ประสบความสำเร็จ
โดยต้องทำให้ชุมชนเชื่อว่าคุณมีวิจารณญาณที่ดี
เพราะงานส่วนใหญ่ของผู้ดูแลก็คือการตัดสินโค้ดของคนอื่น
จะมีใครอยากร่วมสมทบงานกับคนที่เห็นได้ชัดว่าไม่สามารถประเมินคุณภาพของโค้ดของพวกเขาได้
หรือกับคนที่มีพฤติกรรมบ่งชี้ว่าจะฮุบเอาชื่อเสียงที่มีต่อโครงการไว้เองอย่างไม่เป็นธรรม?
ผู้ร่วมสมทบงานต้องการผู้นำโครงการที่มีความถ่อมตนพอ
และเป็นชนิดที่สามารถจะพูดเมื่อสมควรพูดได้ด้วยว่า ``ถูกแล้วครับ
แบบนั้นดีกว่าแบบของผม ผมจะใช้อันนี้แหละ''
และสามารถให้เครดิตต่อผู้ที่สมควรได้รับด้วย</para>

<para>Yet another reason for humble behavior is that in the open source
world, you seldom want to give the impression that a project is
`done'.  This might lead a potential contributor not to feel needed.
The way to maximize your leverage is to be humble about the state of
the program. If one does one's bragging through the code, and then says
``Well shucks, it doesn't do x, y, and z, so it can't be that good'',
patches for x, y, and z will often swiftly follow.</para>

<para>อีกเหตุผลหนึ่งต่อพฤติกรรมถ่อมตนก็คือ ในโลกโอเพนซอร์สนั้น
คุณมักไม่อยากจะแสดงภาพของโครงการในลักษณะที่มัน `เสร็จสมบูรณ์แล้ว'
เพราะนั่นอาจทำให้ผู้ร่วมสมทบไม่รู้สึกว่าตนเป็นที่ต้องการ
วิธีที่จะบริหารงานอย่างได้ผลเต็มที่ก็คือ อ่อนน้อมถ่อมตนเกี่ยวกับสถานะของโปรแกรม
ถ้ามีใครอวดโค้ด แล้วจบด้วยการพูดว่า ``เฮ้อ! มันยังทำเรื่อง ก ข และ ค ไม่ได้เลย
มันก็เลยยังไม่ดีอย่างที่ว่า'' แล้วล่ะก็ แพตช์สำหรับ ก ข และ ค
จะตามมาอย่างรวดเร็ว</para>

<para>Finally, I have personally observed that the self-deprecating behavior
of some leading hackers reflects a real (and not unjustified) fear of
becoming the object of a personality cult.  Linus Torvalds and Larry
Wall both provide clear and numerous examples of such avoidance
behavior.  Once, on a dinner expedition with Larry Wall, I joked
``You're the alpha hacker here&mdash;you get to pick the restaurant''.
He flinched noticeably.  And rightly so; failing to distinguish their
shared values from the personalities of their leaders has ruined a
good many voluntary communities, a pattern of which Larry and Linus
cannot fail to be fully aware.  On the other hand, most hackers would
love to have Larry's problem, if they could but bring themselves to
admit it.</para>

<para>ท้ายที่สุดนี้ ผู้เขียนยังได้ลอบสังเกตเห็นว่า
พฤติกรรมการถ่อมตัวของแฮ็กเกอร์ชั้นนำหลายคน ยังสะท้อนถึงความกลัวอย่างแท้จริง
(ซึ่งไม่ใช่ว่าไร้เหตุผล) ต่อการกลายเป็นวัตถุของการบูชาตัวบุคคล
ทั้ง ไลนัส ทอร์วาลดส์ และ ลาร์รี วอลล์
ได้แสดงพฤติกรรมการหลีกเลี่ยงเช่นนั้นเป็นตัวอย่างที่ชัดเจนมาแล้วมากมาย ครั้งหนึ่ง
ในการเดินหาร้านอาหารเย็นกับ ลาร์รี วอลล์ ผู้เขียนหยอกว่า
``ในนี้ คุณเป็นแฮ็กเกอร์มือหนึ่ง คุณควรเป็นคนเลือกร้าน''
เขาสะดุ้งอย่างเห็นได้ชัด และอย่างที่เห็น
การไม่ตระหนักถึงความแตกต่างของความสำคัญของตนเอง เทียบกับบุคลิกภาพของผู้นำของตน
ได้ทำลายชุมชนอาสาสมัครดีๆ มาแล้วมากมาย ซึ่งลาร์รีและไลนัสไม่อาจไม่รับรู้
และในทางกลับกัน แฮ็กเกอร์ส่วนมากอยากจะมีปัญหาเดียวกับลาร์รี
ถ้าเพียงแต่พวกเขายอมรับสารภาพ</para>

</sect1>
<!-- Global Implications of the Reputation-Game Model -->
<sect1><title>นัยในภาพรวมของโมเดลเกมแห่งชื่อเสียง</title>

<para>The reputation-game analysis has some more implications that may not
be immediately obvious.  Many of these derive from the fact that one
gains more prestige from founding a successful project than from
cooperating in an existing one.  One also gains more from projects
that are strikingly innovative, as opposed to being `me, too'
incremental improvements on software that already exists.  On the
other hand, software that nobody but the author understands or has a
need for is a non-starter in the reputation game, and it's often
easier to attract good notice by contributing to an existing project
than it is to get people to notice a new one.  Finally, it's much
harder to compete with an already successful project than it is to
fill an empty niche.</para>

<para>การวิเคราะห์เกมแห่งชื่อเสียงมีนัยที่อาจไม่เห็นชัดในทันที
นัยเหล่านี้มาจากข้อเท็จจริงที่ว่า
การตั้งโครงการใหม่ได้สำเร็จทำให้ได้ชื่อเสียงมากกว่าการร่วมมือกับโครงการที่มีอยู่
และโครงการที่เป็นนวัตกรรมชั้นยอด
ก็ย่อมให้ชื่อเสียงมากกว่าการพัฒนาเพิ่มจากซอฟต์แวร์ที่มีอยู่ในลักษณะ `ด้วยคนสิ'
ในทางกลับกัน ซอฟต์แวร์ที่ไม่มีใครเข้าใจหรือต้องการใช้นอกจากผู้เขียน
ก็ไม่ใช่จุดเริ่มต้นที่ดีของการเล่นเกมแห่งชื่อเสียงเช่นกัน
และการดึงดูดความสนใจด้วยการเข้าร่วมในโครงการที่มีอยู่
ก็ง่ายกว่าการดึงดูดผู้คนมายังโครงการใหม่ และสุดท้าย
การแข่งขันกับโครงการที่ประสบความสำเร็จแล้วย่อมยากกว่าการเติมช่องว่างเล็กๆ มากนัก
</para>

<para>Thus, there's an optimum distance from one's neighbors (the most
similar competing projects).  Too close and one's product will be a
``me, too!'' of limited value, a poor gift (one would be better off
contributing to an existing project).  Too far away, and nobody will
be able to use, understand, or perceive the relevance of one's effort
(again, a poor gift).  This creates a pattern of homesteading in the
noosphere that rather resembles that of settlers spreading into a
physical frontier&mdash;not random, but like a diffusion-limited
fractal. Projects tend to get started to fill functional gaps near the
frontier (see <link linkend="no">[NO]</link> for further discussion of
the lure of novelty).</para>

<para>ด้วยเหตุนี้ จึงมีระยะห่างที่เหมาะสมกับเพื่อนบ้าน
(คือโครงการที่คล้ายกันและอาจแข่งกันอยู่) ถ้าใกล้เกินไป ก็กลายเป็นประเภท
``ด้วยคนสิ'' และไม่ค่อยมีคุณค่า เป็นของขวัญแย่ๆ
(ซึ่งการเข้าร่วมกับโครงการที่มีอยู่ อาจจะได้ประโยชน์มากกว่า) หรือถ้าไกลกันเกินไป
ก็ไม่มีใครใช้เป็น หรือเข้าใจ หรือมองเห็นความเกี่ยวโยงของงาน
(เป็นของขวัญแย่ๆ อีกเช่นกัน) เงื่อนไขนี้ ทำให้เกิดรูปแบบของการปักหลักใน
noosphere ที่คล้ายคลึงกับการตั้งหลักแหล่งของผู้คนในเขตแดนจริง คือไม่สุ่มเสี่ยง
แต่คล้ายกับแฟร็กทัลที่จำกัดการแพร่กระจาย โครงการต่างๆ
มีแนวโน้มจะเริ่มจากเติมช่องว่างใกล้กับบริเวณชายขอบ (ดู
<link linkend="no">[NO]</link>
สำหรับการอภิปรายเพิ่มเติมเรื่องแรงดึงดูดของนวัตกรรม)</para>

<para>Some very successful projects become `category killers'; nobody
wants to homestead anywhere near them because competing against the
established base for the attention of hackers would be too hard.
People who might otherwise found their own distinct efforts end up,
instead, adding extensions for these big, successful projects.
The classic `category killer' example is GNU Emacs; its variants fill the
ecological niche for a fully-programmable editor so completely that
no competitor has gotten much beyond the one-man project stage
since the early 1980s.  Instead, people write Emacs modes.</para>

<para>โครงการที่ประสบความสำเร็จอย่างสูงบางโครงการ ได้กลายเป็น `ผู้พิชิต'
(category killer) ไม่มีใครต้องการปักหลักใกล้
เพราะการแข่งขันกับฐานที่สร้างเสร็จแล้วในการดึงดูดความสนใจของแฮ็กเกอร์นั้นยากเกินไป
กลุ่มคนที่อาจจะคิดตั้งโครงการต่างหากหากปราศจากโครงการดังกล่าว
ก็จะลงเอยด้วยการเพิ่มส่วนขยายให้กับโครงการใหญ่ที่สำเร็จเหล่านี้แทน
ตัวอย่างอมตะของ `ผู้พิชิต' ก็คือ GNU Emacs โดยที่ชนิดต่างๆ
ของมันได้เติมช่องว่างอย่างสมบูรณ์ในส่วนของโปรแกรมบรรณาธิกรณ์ที่โปรแกรมได้
สมบูรณ์เสียจนไม่มีคู่แข่งรายใดสามารถก้าวผ่านขั้นของโครงการบินเดี่ยวได้มากนักมาตั้งแต่ต้นทศวรรษ
1980 โดยสิ่งที่เกิดขึ้นแทนก็คือ ผู้คนหันมาเขียนโหมด Emacs กัน</para>

<para>Globally, these two tendencies (gap-filling and category-killers) 
have driven a broadly predictable trend in project starts over time.
In the 1970s most of the open source that existed was toys and demos.
In the 1980s the push was in development and Internet tools.  In
the 1990s the action shifted to operating systems.  In each case, 
a new and more difficult level of problems was attacked when the
possibilities of the previous one had been nearly exhausted.</para>

<para>ในภาพรวมแล้ว แนวโน้มทั้งสอง (การเติมช่องว่าง และผู้พิชิต)
ได้ขับดันแนวโน้มที่คาดการณ์ได้กว้างๆ ของการเริ่มโครงการในช่วงเวลาต่างๆ
ในทศวรรษ 1970 โอเพนซอร์สส่วนใหญ่ที่มีอยู่เป็นแค่ของเล่นหรือเดโม ในทศวรรษ 1980
แรงผลักดันคือการพัฒนาซอฟต์แวร์และเครื่องมืออินเทอร์เน็ต ในทศวรรษ 1990
กิจกรรมได้ข้ามมาเป็นระบบปฏิบัติการ ในแต่ละกรณี
ปัญหาที่แก้เป็นระดับใหม่และยากขึ้น เมื่อความเป็นไปได้ต่างๆ
ของปัญหาเดิมได้ถูกแก้จนเกือบหมดแล้ว</para>

<para>This trend has interesting implications for the near future.  In early
1998, Linux looks very much like a category-killer for the niche
`open-source operating systems'&mdash;people who might otherwise write
competing operating systems are now writing Linux device drivers and
extensions instead.  And most of the lower-level tools the culture
ever imagined having as open source already exist.  What's left?</para>

<para>แนวโน้มนี้มีนัยที่น่าสนใจสำหรับอนาคตอันใกล้ ในช่วงต้นปี 1998
ลินุกซ์ดูคล้ายกับจะเป็นผู้พิชิตเอามากๆ ในช่องว่างของ `ระบบปฏิบัติการโอเพนซอร์ส'
กล่าวคือ ผู้คนที่อาจจะคิดเขียนระบบปฏิบัติการแข่งไปแล้ว
ก็ได้หันมาเขียนตัวขับอุปกรณ์และส่วนขยายสำหรับลินุกซ์แทน
และเครื่องมือระดับล่างเกือบทั้งหมดที่วัฒนธรรมจะสามารถคิดได้ว่าน่าจะมีเป็นโอเพนซอร์สก็มีแล้ว
แล้วยังจะเหลืออะไรอีก?</para>

<para>Applications.  As the third millenium begins, it seems safe to
predict that open-source development effort will increasingly shift
towards the last virgin territory&mdash;programs for non-techies.  A
clear early indicator was the development of <ulink
url="http://www.gimp.org">GIMP</ulink>, the Photoshop-like image
workshop that is open source's first major application with the kind
of end-user&ndash;friendly GUI interface considered <emphasis>de
rigueur</emphasis> in commercial applications for the last decade.
Another is the amount of buzz surrounding application-toolkit projects
like <ulink url="http://www.kde.org">KDE</ulink> and <ulink
url="http://www.gnome.org">GNOME</ulink>.</para>

<para>คำตอบคือโปรแกรมประยุกต์ เมื่อเริ่มสหัสวรรษที่สาม
ดูเหมือนจะปลอดภัยที่จะทำนายว่า การพัฒนาโอเพนซอร์สจะค่อยๆ
ย้ายไปสู่ดินแดนสุดท้ายที่ยังบริสุทธิ์ผุดผ่อง
คือโปรแกรมสำหรับผู้ที่ไม่ใช่นักเทคนิค จุดบ่งชี้แรกๆ ที่ชัดเจนก็คือการพัฒนาของ
<ulink url="http://www.gimp.org">GIMP</ulink> โปรแกรมแต่งภาพที่คล้ายกับ
Photoshop
ซึ่งนับเป็นโปรแกรมประยุกต์ที่สำคัญโปรแกรมแรกของโอเพนซอร์สสำหรับผู้ใช้ปลายทาง
คือใช้ GUI ที่เป็นมิตรที่ถือว่า <emphasis>เป็นสิ่งจำเป็น</emphasis>
ในโปรแกรมเชิงพาณิชย์ในทศวรรษที่แล้ว อีกตัวอย่างหนึ่งคือปริมาณของเสียงอื้ออึงรอบๆ
โครงการทูลคิทสำหรับโปรแกรมประยุกต์อย่าง
<ulink url="http://www.kde.org">KDE</ulink> และ <ulink
url="http://www.gnome.org">GNOME</ulink></para>

<para>A respondent to this essay has pointed out that the homesteading
analogy also explains why hackers react with such visceral anger to
Microsoft's ``embrace and extend'' policy of complexifying and then
closing up Internet protocols.  The hacker culture can coexist with
most closed software; the existence of Adobe Photoshop, for example,
does not make the territory near GIMP (its open-source equivalent)
significantly less attractive.  But when Microsoft succeeds at
de-commoditizing <link linkend="HD">[HD]</link> a protocol so that
only Microsoft's own programmers can write software for it, they do
not merely harm customers by extending their monopoly; they also
reduce the amount and quality of noosphere available for hackers to
homestead and cultivate.  No wonder hackers often refer to Microsoft's
strategy as ``protocol pollution''; they are reacting exactly like
farmers watching someone poison the river they water their crops
with!</para>

<para>ผู้แสดงความเห็นท่านหนึ่งต่อบทความนี้ได้ชี้ว่า
การอุปมาอุปไมยเรื่องการปักหลักยังสามารถอธิบายได้
ถึงการที่แฮ็กเกอร์โต้ตอบด้วยความโกรธที่อัดแน่นต่อนโยบาย ``เขมือบแล้วขยาย''
(embrace and extend) ของไมโครซอฟท์ ที่มาสร้างความซับซ้อน
แล้วก็ปิดโปรโตคอลอินเทอร์เน็ต
วัฒนธรรมแฮ็กเกอร์สามารถอยู่ร่วมกับซอฟต์แวร์ปิดได้แทบทุกเจ้า ตัวอย่างเช่น
การมีอยู่ของ Adobe Photoshop ก็ไม่ได้ทำให้เขตแดนข้างเคียงของ GIMP
(โปรแกรมเทียบเท่าที่เป็นโอเพนซอร์ส) ดูน่าสนใจน้อยลงไป
แต่เมื่อไมโครซอฟท์ประสบความสำเร็จในการทำลายตลาด <link linkend="HD">[HD]</link>
โปรโตคอล
เพื่อที่จะมีเพียงโปรแกรมเมอร์ของไมโครซอฟท์เท่านั้นที่สามารถเขียนซอฟต์แวร์สนับสนุนได้นั้น
มันไม่ได้เป็นแค่การทำร้ายผู้บริโภคด้วยการขยายการครอบงำตลาด
แต่ยังลดปริมาณและคุณภาพของ noosphere
ที่เหลือสำหรับให้แฮ็กเกอร์ปักหลักและพัฒนาอีกด้วย จึงไม่น่าแปลก
ที่แฮ็กเกอร์มักจะเรียกกลยุทธ์ของไมโครซอฟท์ว่า ``มลภาวะของโปรโตคอล''
แฮ็กเกอร์ตอบโต้เรื่องนี้เหมือนกับชาวนาที่จ้องมองคนที่ทำลายน้ำในแม่น้ำที่พวกเขาใช้ทำนาไม่มีผิด!
</para>

<para>Finally, the reputation-game analysis explains the oft-cited
dictum that you do not become a hacker by calling yourself a
hacker&mdash;you become a hacker when <emphasis>other
hackers</emphasis> call you a hacker <link linkend="KN">[KN]</link>.
A `hacker', considered in this light, is somebody who has shown (by
contributing gifts) that he or she both has technical ability and
understands how the reputation game works.  This judgement is mostly
one of awareness and acculturation, and can be delivered only by those
already well inside the culture.</para>

<para>และท้ายที่สุด การวิเคราะห์เกมแห่งชื่อเสียงยังอธิบายคติพจน์ที่มักอ้างกันบ่อยๆ
ด้วยว่า คุณไม่สามารถเป็นแฮ็กเกอร์ด้วยการเรียกตัวเองว่าแฮ็กเกอร์
แต่คุณเป็นแฮ็กเกอร์เมื่อ <emphasis>แฮ็กเกอร์คนอื่น</emphasis>
เรียกคุณว่าแฮ็กเกอร์ <link linkend="KN">[KN]</link>
`แฮ็กเกอร์' เมื่อพิจารณาตามแนวนี้ จึงหมายถึงผู้ที่ได้แสดงให้เห็น
(ด้วยการร่วมสมทบของขวัญ) ว่าเขาหรือเธอมีทั้งความสามารถทางเทคนิค
และความเข้าใจในการทำงานของเกมแห่งชื่อเสียง การพิพากษานี้
ส่วนมากเป็นเรื่องของการรับรู้หรือการรับเอาวัฒนธรรมมาใช้
ซึ่งสามารถให้ได้โดยผู้ที่อยู่ในวัฒนธรรมเป็นอย่างดีแล้วเท่านั้น</para>

</sect1>
<!-- How Fine a Gift? -->
<sect1><title>ของขวัญนั้นดีแค่ไหน?</title>

<para>There are consistent patterns in the way the hacker culture values
contributions and returns peer esteem for them.  It's not hard to
observe the following rules:</para>

<para>มีรูปแบบตายตัวที่วัฒนธรรมแฮ็กเกอร์จะให้คุณค่าแก่การร่วมสมทบงาน
และให้ความเคารพกลับคืนแก่เจ้าของผลงาน กฎต่อไปนี้สังเกตได้ไม่ยากเลย:</para>

<blockquote><para>1. If it doesn't work as well as I have been led
to expect it will, it's no good&mdash;no matter how clever and original
it is.</para></blockquote>

<blockquote><para>1. ถ้ามันทำไม่ได้อย่างที่ชี้นำให้คาดหวัง ก็ถือว่าใช้ไม่ได้
ไม่ว่ามันจะดูฉลาดหรือใหม่เอี่ยมขนาดไหนก็ตาม</para></blockquote>

<para>Note the phrase `led to expect'.  This rule is not a demand for
perfection; beta and experimental software is allowed to have bugs.
It's a demand that the user be able to accurately estimate risks from
the stage of the project and the developers' representations about
it.</para>

<para>โปรดสังเกตวลี `ชี้นำให้คาดหวัง' กฎนี้ไม่ใช่ว่าต้องการความสมบูรณ์แบบ
ซอฟต์แวร์ทดสอบและทดลองนั้นมีบั๊กได้ แต่เป็นความจำเป็นอย่างหนึ่ง
ที่ต้องให้ผู้ใช้สามารถประเมินความเสี่ยงจากสถานะของโครงการ
และการนำเสนอของนักพัฒนาได้</para>

<para>This rule underlies the fact that open-source software tends to stay
in beta for a long time, and not get even a 1.0 version number until
the developers are very sure it will not hand out a lot of nasty
surprises.  In the closed-source world, Version 1.0 means ``Don't
touch this if you're prudent.''; in the open-source world it reads
something more like ``The developers are willing to bet their
reputations on this.''</para>

<para>กฎนี้อยู่เบื้องหลังข้อเท็จจริงที่ว่า
ซอฟต์แวร์โอเพนซอร์สมักจะอยู่ในขั้นทดสอบเป็นเวลานาน และจะไม่ถึงรุ่น 1.0 เสียที
จนกว่านักพัฒนาจะมั่นใจมากๆ ว่ามันจะไม่ทำให้ผู้คนตกใจร้องยี้
ในโลกซอร์สปิดนั้น รุ่น 1.0 หมายความว่า ``อย่าเพิ่งแตะต้อง ถ้าคุณยังไม่แน่ใจ''
แต่ในโลกโอเพนซอร์สนั้น มันมีความหมายคล้ายกับ
``นักพัฒนาเต็มใจที่จะเดิมพันมันด้วยชื่อเสียงของพวกเขาเอง'' มากกว่า</para>

<blockquote><para>2. Work that extends the noosphere is better than
work that duplicates an existing piece of functional
territory.</para></blockquote>

<blockquote><para>2. งานที่ขยายขอบเขตของ noosphere
ถือว่าดีกว่างานที่ซ้ำกับงานในขอบเขตเดิมที่ทำได้ดีอยู่แล้ว</para></blockquote>

<para>The naive way to put this would have been: <emphasis>Original
work is better than mere duplication of the functions of existing
software.</emphasis> But it's not actually quite that simple.
Duplicating the functions of existing <emphasis>closed</emphasis>
software counts as highly as original work if by doing so you break
open a closed protocol or format and make that territory newly
available.</para>

<para>พูดง่ายๆ ก็คือ:
<emphasis>งานใหม่ย่อมดีกว่างานที่ซ้ำกับหน้าที่ของซอฟต์แวร์เดิมที่มีอยู่</emphasis>
แต่ความเป็นจริงอาจไม่ง่ายอย่างนั้น การซ้ำซ้อนกับหน้าที่ของซอฟต์แวร์
<emphasis>ปิด</emphasis> เดิมที่มีอยู่
ก็ถือว่ามีความใหม่เทียบเท่ากับงานที่คิดขึ้นใหม่จริงๆ ได้
ถ้างานนั้นเป็นการแกะโปรโตคอลหรือฟอร์แมตปิด และทำให้ใช้งานได้เป็นครั้งแรก</para>

<para>Thus, for example, one of the highest-prestige projects in the present
open-source world is Samba&mdash;the code that allows Unix machines to
act as clients or servers for Microsoft's proprietary SMB file-sharing
protocol.  There is very little creative work to be done here; it's
mostly an issue of getting the reverse-engineered details right.
Nevertheless, the members of the Samba group are perceived as heroes
because they neutralize a Microsoft effort to lock in whole user
populations and cordon off a big section of the noosphere.</para>

<para>ด้วยเหตุนี้ โครงการหนึ่งที่ได้รับเกียรติยศสูงสุดในโลกโอเพนซอร์สก็คือ
แซมบา (Samba)
ซึ่งช่วยให้เครื่องยูนิกซ์สามารถเป็นเครื่องลูกข่ายหรือสถานีบริการสำหรับโปรโตคอล
SMB ซึ่งเป็นโปรโตคอลปิดสำหรับใช้ไฟล์ร่วมกันของไมโครซอฟท์ได้ งานในโครงการนี้
มีความสร้างสรรค์น้อยมาก ส่วนมากเป็นเรื่องของการทำวิศวกรรมย้อนรอยให้ถูกต้อง
แม้กระนั้น สมาชิกกลุ่มแซมบาก็ได้รับการยอมรับให้เป็นวีรบุรุษ
เพราะเป็นการสลายพลังหนึ่งของไมโครซอฟท์ที่จะกักขังกลุ่มผู้ใช้ทั้งหมด
และปิดล้อมภาคที่ใหญ่มากๆ ภาคหนึ่งของ noosphere</para>

<blockquote><para>3. Work that makes it into a major distribution
is better than work that doesn't.  Work carried in all major
distributions is most prestigious.</para></blockquote>

<blockquote><para>3. งานที่สามารถเข้าไปอยู่ในดิสทริบิวชันหลักได้
ย่อมดีกว่างานที่ไม่ได้เข้า งานที่รวมอยู่ในดิสทริบิวชันหลักทุกเจ้า
ถือว่าได้รับเกียรติยศสูงสุด</para></blockquote>

<para>The major distributions include not just the big Linux distributions
like Red Hat, Debian, Caldera, and SuSE., but other collections
that are understood to have reputations of their own to maintain and
thus implicitly certify quality &mdash;like BSD distributions or the Free
Software Foundation source collection.</para>

<para>ดิสทริบิวชันหลักไม่ได้หมายถึงแค่ดิสทริบิวชันลินุกซ์ใหญ่ๆ อย่าง Red Hat,
Debian, Caldera และ SuSE เท่านั้น
แต่รวมไปถึงการรวบรวมอื่นที่เป็นที่เข้าใจกันว่ามีชื่อเสียงที่ต้องรักษา
ซึ่งหมายความถึงการรับรองคุณภาพในตัวเอง อย่างเช่น ดิสทริบิวชันต่างๆ ของ BSD
หรือแหล่งรวบรวมซอฟต์แวร์ของมูลนิธิซอฟต์แวร์เสรี</para>

<blockquote><para>4. Utilization is the sincerest form of
flattery&mdash;and category killers are better than
also-rans.</para></blockquote>

<blockquote><para>4. การใช้งานจริง คือวิธียกย่องที่จริงใจที่สุด
และผู้พิชิตย่อมดีกว่างานที่ทำคล้ายกัน</para></blockquote>

<para>Trusting the judgment of others is basic to the peer-review
process.  It's necessary because nobody has time to review all
possible alternatives.  So work used by lots of people is considered
better than work used by a few,</para>

<para>การเชื่อมั่นในวิจารณญาณของผู้อื่น
คือพื้นฐานของกระบวนการตรวจสอบโดยหมู่ชน ความเชื่อมั่นดังกล่าวมีความสำคัญ
เพราะไม่มีใครมีเวลาตรวจสอบทางเลือกทุกทาง ดังนั้น
งานที่มีผู้ใช้จำนวนมากจึงถือว่าดีกว่างานที่มีผู้ใช้ไม่กี่คน</para>

<para>To have done work so good that nobody cares to use the alternatives
any more is therefore to have earned huge prestige.  The most possible
peer esteem comes from having done widely popular, category-killing
original work that is carried by all major distributions.  People who
have pulled this off more than once are half-seriously referred to as
`demigods'.</para>

<para>การทำงานที่ดีเสียจนไม่มีใครสนใจใช้ตัวเลือกอื่นอีกต่อไป
จึงถือเป็นการได้รับเกียรติยศอันยิ่งใหญ่
ความเคารพอันสูงสุดจากหมู่ชนที่จะพึงมีได้
จึงมาจากการได้ทำงานที่เป็นที่นิยมอย่างกว้างขวาง
เป็นงานใหม่เอี่ยมที่พิชิตใจผู้ใช้ และถูกรวมอยู่ในดิสทริบิวชันหลักทุกเจ้า
ผู้ใดก็ตามที่สามารถทำเรื่องแบบนี้ได้มากกว่าหนึ่งครั้ง
จะถูกขนานนามแบบทีเล่นทีจริงว่า `กึ่งเทพเจ้า'</para>

<blockquote><para>5. Continued devotion to hard, boring work (like
debugging, or writing documentation) is more praiseworthy than
cherrypicking the fun and easy hacks.</para></blockquote>

<blockquote><para>5. การอุทิศตนอย่างต่อเนี่องกับงานที่หนักและน่าเบื่อ
(เช่น การดีบั๊ก หรือการเขียนเอกสาร)
ถือว่าน่ายกย่องกว่าการเด็ดชิมเฉพาะงานแฮ็กที่สนุกและง่ายดาย</para></blockquote>

<para>This norm is how the community rewards necessary tasks that hackers
would not naturally incline towards.  It is to some extent
contradicted by:</para>

<para>บรรทัดฐานนี้
คือวิธีที่ชุมชนให้รางวัลแก่งานที่จำเป็นที่แฮ็กเกอร์มักไม่อยากเข้าใกล้
แต่บางทีก็ขัดแย้งกับเรื่องต่อไปนี้พอสมควร:</para>

<blockquote><para>6. Nontrivial extensions of function are better
than low-level patches and debugging.</para></blockquote>

<blockquote><para>6. การขยายความสามารถที่เด่นๆ
ถือว่าดีกว่าการแก้ไขและดีบั๊กในระดับล่าง</para></blockquote>

<para>The way this seems to work is that on a one-shot basis, adding a
feature is likely to get more reward than fixing a bug&mdash;unless
the bug is exceptionally nasty or obscure, such that nailing it is
itself a demonstration of unusual skill and cleverness.  But when these 
behaviors are extended over time, a person with a long history of
paying attention to and nailing even ordinary bugs may well out-rank
someone who has spent a similar amount of effort adding easy features.</para>

<para>การทำงานของข้อนี้ดูจะเป็นในลักษณะที่ว่า ในเฉพาะเบื้องหน้านั้น
การเพิ่มความสามารถมีแนวโน้มจะได้รางวัลมากกว่าการแก้บั๊ก
นอกเสียจากบั๊กนั้นจะเลวร้ายหรือลึกลับมากๆ
จนทำให้แค่การซ่อมแซมก็ถือเป็นการแสดงความเชี่ยวชาญและเชาวน์ปัญญาที่ไม่ธรรมดา
แต่เมื่อพฤติกรรมทั้งสองผ่านไปตามกาลเวลา
บุคคลที่มีประวัติยาวนานในการทุ่มเทและซ่อมแซมแม้บั๊กธรรมดา
ก็สามารถจะแซงหน้าคนที่ใช้แรงพอๆ กัน ในการเพิ่มความสามารถง่ายๆ ได้</para>

<para>A respondent has pointed out that these rules interact in
interesting ways and do not necessarily reward highest possible
utility all the time.  Ask a hacker whether he's likely to become
better known for a brand new tool of his own or for extensions to
someone else's and the answer ``new tool'' will not be in doubt.  But
ask about (a) a brand new tool which is only used a few times a day
invisibly by the OS but which rapidly becomes a category killer,
versus (b) several extensions to an existing tool which are neither
especially novel nor category-killers, but are daily used and daily
visible to a huge number of users</para>

<para>ผู้แสดงความเห็นท่านหนึ่งชี้ว่า กฎเหล่านี้มีผลต่อกันอย่างน่าสนใจ
และไม่จำเป็นต้องให้รางวัลต่ออรรถประโยชน์สูงสุดเสมอไป ลองถามแฮ็กเกอร์สักคนดูสิ
ว่าเขามีแนวโน้มจะเป็นที่รู้จักจากเครื่องมือใหม่ล่าสุดที่ทำเอง
หรือจากการเพิ่มขยายงานของคนอื่นมากกว่ากัน ไม่ต้องสงสัยว่าคำคอบคือ
``เครื่องมือใหม่'' แน่ๆ แต่ลองถามว่าระหว่าง (ก) เครื่องมือใหม่เอี่ยมที่ถูก OS
เรียกใช้แค่วันละสองสามครั้งอย่างเงียบๆ แต่กลายเป็นผู้พิชิตอย่างรวดเร็ว กับ
(ข) ส่วนขยายหลายๆ ชิ้นต่อเครื่องมือที่มีอยู่แล้ว
ซึ่งไม่ได้เป็นนวัตกรรมหรือเป็นผู้พิชิตแต่อย่างใด
แต่มีผู้ใช้จำนวนมากเรียกใช้ทุกวัน มองเห็นทุกวัน อย่างไหนจะดังกว่า</para>

<para>and you are likely to get some hesitation before the hacker settles on
(a).  These alternatives are about evenly stacked.</para>

<para>แล้วคุณก็น่าจะได้เห็นความลังเลนิดหน่อย
ก่อนที่แฮ็กเกอร์คนนั้นจะมาลงเอยที่ (ก)
ทางเลือกเหล่านี้ดูจะซ้อนกันมาอย่างเท่าเทียม</para>

<para>Said respondent gave this question point for me by adding ``Case
(a) is fetchmail; case (b) is your many Emacs extensions, like
<filename>vc.el</filename> and <filename>gud.el</filename>.''  And
indeed he is correct; I am more likely to be tagged ``the author of
fetchmail'' than ``author of a boatload of Emacs modes'', even though the
latter probably have had higher total utility over time.</para>

<para>ผู้แสดงความเห็นท่านนี้แสดงเจตนาที่จะถามคำถามนี้กับตัวผู้เขียนเอง
ด้วยการเสริมว่า ``กรณี (ก) คือ fetchmail ส่วนกรณี (ข) คือส่วนขยาย Emacs
ทั้งหลายของคุณเอง อย่างเช่น <filename>vc.el</filename> และ
<filename>gud.el</filename>'' และเขาก็พูดถูกจริงๆ ผู้เขียนมักจะถูกติดป้ายว่าเป็น
``คนเขียน fetchmail'' มากกว่า ``คนเขียนโหมด Emacs กองพะเนิน''
แม้ว่าอย่างหลังน่าจะถูกเรียกใช้มากกว่า</para>

<para>What may be going on here is simply that work with a novel `brand
identity' gets more notice than work aggregated to an existing
`brand'.  Elucidation of these rules, and what they tell us about the
hacker culture's scoreboarding system, would make a good topic for
further investigation.</para>

<para>สิ่งที่อาจสรุปได้ตรงนี้ก็แค่ง่ายๆ ว่างานที่มี `เอกลักษณ์ยี่ห้อ' ใหม่
จะเป็นที่สังเกตมากกว่างานที่ถูกรวมเข้าไปใน `ยี่ห้อ' ที่มีอยู่แล้ว
การอธิบายกฎเหล่านี้อย่างละเอียด
พร้อมทั้งสิ่งบ่งชี้เกี่ยวกับระบบการให้คะแนนของวัฒนธรรมแฮ็กเกอร์
จะเป็นหัวข้อที่ดีที่จะวินิจฉัยกันต่อไป</para>

</sect1>
<!-- Noospheric Property and the Ethology of Territory -->
<sect1><title>ทรัพย์สินใน Noosphere กับพฤติกรรมการประกาศถิ่น</title>

<para>To understand the causes and consequences of Lockean property customs,
it will help us to look at them from yet another angle; that of animal
ethology, specifically the ethology of territory.</para>

<para>เพื่อที่จะทำความเข้าใจในเหตุและผลของจารีตประเพณีทรัพย์สินของล็อค
เราลองมามองจากอีกมุมหนึ่งซึ่งช่วยทำความเข้าใจได้ คือจากพฤติกรรมสัตว์
โดยมุ่งเฉพาะพฤติกรรมเรื่องการประกาศถิ่น</para>

<para>Property is an abstraction of animal territoriality, which evolved as
a way of reducing intraspecies violence.  By marking his bounds, and
respecting the bounds of others, a wolf diminishes his chances of
being in a fight that could weaken or kill him and make him less
reproductively successful.  Similarly, the function of property in
human societies is to prevent inter-human conflict by setting bounds
that clearly separate peaceful behavior from aggression.</para>

<para>ทรัพย์สินก็คือการสร้างนามธรรมของการประกาศถิ่นของสัตว์
ซึ่งพัฒนาขึ้นในฐานะของเครื่องมือลดความรุนแรงภายในเผ่าพันธุ์
การทำเครื่องหมายเขตแดน และเคารพเขตแดนของตัวอื่น
ช่วยให้หมาป่าลดโอกาสที่จะต้องต่อสู้กัน อันอาจทำให้แต่ละตัวต้องอ่อนล้าหรือตายลง
และทำให้การสืบพันธุ์ไม่ประสบความสำเร็จ ด้วยลักษณะคล้ายกัน
หน้าที่ของทรัพย์สินในสังคมมนุษย์ก็คือ ป้องกันข้อขัดแย้งระหว่างมนุษย์
ด้วยการขีดเส้นแบ่งแยกพฤติกรรมสันติกับก้าวร้าวออกจากกันอย่างชัดเจน</para>

<para>It is fashionable in some circles to describe human property as an
arbitrary social convention, but this is dead wrong.  Anybody who has
ever owned a dog who barked when strangers came near its owner's
property has experienced the essential continuity between animal
territoriality and human property.  Our domesticated cousins of the
wolf know, instinctively, that property is no mere social convention
or game, but a critically important evolved mechanism for the
avoidance of violence.  (This makes them smarter than a good many human
political theorists.)</para>

<para>อาจฟังดูหรูในบางวงการที่จะบรรยายทรัพย์สินมนุษย์ว่าเป็นข้อตกลงทางสังคมแบบอำเภอใจ
แต่นั่นเป็นความคิดที่ผิดอย่างจัง
ใครก็ตามที่เคยมีสุนัขที่เห่าคนแปลกหน้าที่เข้าใกล้ทรัพย์สินของเจ้าของ
จะรู้สึกได้ถึงความต่อเนื่องที่สำคัญ
ระหว่างการประกาศถิ่นของสัตว์กับทรัพย์สินของมนุษย์
ญาติหมาป่าที่มาอยู่บ้านของเรารู้โดยสัญชาตญาณ
ว่าทรัพย์สินไม่ได้เป็นเพียงข้อตกลงทางสังคมหรือว่าเกมใดๆ
แต่เป็นกลไกที่สำคัญอย่างยิ่งยวดที่ได้พัฒนาขึ้นเพื่อหลีกเลี่ยงความรุนแรง
(ความรู้นี้ทำให้สุนัขเหล่านี้ฉลาดกว่านักทฤษฎีการเมืองที่เป็นมนุษย์หลายคนนัก)
</para>

<para>Claiming property (like marking territory) is a performative act, a
way of declaring what boundaries will be defended.  Community support
of property claims is a way to minimize friction and maximize
cooperative behavior.  These things remain true even when the
``property claim'' is much more abstract than a fence or a dog's bark,
even when it's just the statement of the project maintainer's name in
a README file.  It's still an abstraction of territoriality, and (like
other forms of property) based in territorial instincts evolved to
assist conflict resolution.</para>

<para>การอ้างความเป็นเจ้าของทรัพย์สิน (ซึ่งเหมือนกับการทำเครื่องหมายเขตแดน)
เป็นการกระทำที่มีผลตามคำพูด คือเป็นวิธีประกาศเขตแดนที่จะปกป้อง
การสนับสนุนการอ้างโดยชุมชน ก็เป็นวิธีลดแรงต้านให้น้อยที่สุด
และเพิ่มพฤติกรรมการร่วมมือให้มากที่สุด สิ่งเหล่านี้เป็นจริงแม้ในกรณีที่
``การอ้างความเป็นเจ้าของทรัพย์สิน'' เป็นนามธรรมกว่ารั้วหรือการเห่าของสุนัข
หรือแม้ในกรณีที่เป็นแค่ถ้อยแถลงประกาศชื่อของผู้ดูแลโครงการในไฟล์ README
ทั้งหมดยังคงเป็นนามธรรมของการประกาศเขตแดน และ (เหมือนกับทรัพย์สินรูปแบบอื่น)
อยู่บนพื้นฐานของสัญชาตญาณการประกาศถิ่นที่พัฒนาขึ้นเพื่อช่วยยุติข้อขัดแย้ง</para>

<para>This ethological analysis may at first seem very abstract and
difficult to relate to actual hacker behavior.  But it has some
important consequences. One is in explaining the popularity of World
Wide Web sites, and especially why open-source projects with websites
seem so much more `real' and substantial than those without
them.</para>

<para>การวิเคราะห์พฤติกรรมประกาศถิ่นนี้ แรกๆ อาจจะดูเป็นนามธรรม
และยากจะเกี่ยวโยงกับพฤติกรรมจริงของแฮ็กเกอร์ แต่มันก็ให้ผลลัพธ์ที่สำคัญ
หนึ่งในนั้นคือการอธิบายความเป็นที่นิยมของเว็บไซต์ต่างๆ
และโดยเฉพาะการที่โครงการโอเพนซอร์สที่มีเว็บไซต์ดูเป็น `ของจริง'
และมีหลักฐานกว่าโครงการที่ไม่มี</para>

<para>Considered objectively, this seems hard to explain.  Compared to the
effort involved in originating and maintaining even a small program,
a web page is easy, so it's hard to consider a web page evidence
of substance or unusual effort.</para>

<para>เมื่อพิจารณาอย่างเป็นกลาง เรื่องนี้ดูจะอธิบายยาก
เพราะเมื่อเทียบกับความพยายามที่ใช้ในการตั้งและดูแลแม้โครงการเล็กๆ แล้ว
การดูแลเว็บนั้นง่ายกว่ามาก
จึงยากที่จะถือว่าเว็บเป็นหลักฐานของความพยายามที่หนักหรือไม่ธรรมดา</para>

<para>Nor are the functional characteristics of the Web itself sufficient
explanation.  The communication functions of a web page can be as well
or better served by a combination of an FTP site, a mailing list, and
Usenet postings.  In fact it's quite unusual for a project's routine
communications to be done over the Web rather than via a mailing list
or newsgroup.  Why, then, the popularity of websites as project
homes?</para>

<para>หรือแม้แต่ลักษณะหน้าที่ของเว็บเอง ก็ไม่ใช่คำอธิบายที่เพียงพอ
การสื่อสารต่างๆ ของหน้าเว็บก็สามารถให้บริการผ่านการทำงานร่วมกันของ FTP,
เมลลิงลิสต์ และกลุ่มข่าว Usenet ได้เหมือนกัน ซึ่งในความเป็นจริง
ออกจะดูผิดปกติด้วยซ้ำสำหรับการติดต่อสื่อสารประจำวันของโครงการ
ที่จะทำผ่านเว็บแทนเมลลิงลิสต์หรือกลุ่มข่าว เช่นนั้นแล้ว ทำไมล่ะ
จึงยังมีความนิยมให้เว็บไซต์แทนที่อยู่ของโครงการ?</para>

<para>The metaphor implicit in the term `home page' provides an important
clue.  While founding an open-source project is a territorial claim
in the noosphere (and customarily recognized as such) it is not a
terribly compelling one on the psychological level.  Software, after
all, has no natural location and is instantly reduplicable.  It's
assimilable to our instinctive notions of `territory' and `property',
but only after some effort.</para>

<para>อุปมาอุปมัยที่แฝงอยู่ในคำว่า `โฮมเพจ' (home page) นั่นเอง
ที่บอกใบ้ถึงคำตอบ ในขณะที่การก่อตั้งโครงการโอเพนซอร์สเป็นการอ้างเขตแดนใน
noosphere (โดยได้รับการยอมรับตามจารีตประเพณี)
แต่ก็ไม่ใช่เขตแดนชนิดที่เด่นชัดในระดับจิตวิทยา เพราะในที่สุด
ซอฟต์แวร์ก็ไม่มีที่อยู่โดยธรรมชาติของมันเอง และสามารถทำซ้ำได้ทันทีที่ต้องการ
เรื่องนี้เราอาจเข้าใจได้ด้วยสามัญสำนึกในรูปของ `เขตแดน' และ `ทรัพย์สิน'
แต่ก็ต้องออกแรงกันสักหน่อย</para>

<para>A project home page concretizes an abstract homesteading in the space
of possible programs by expressing it as `home' territory in the more
spatially-organized realm of the World Wide Web.  Descending from the
noosphere to `cyberspace' doesn't get us all the way to the real world
of fences and barking dogs yet, but it does hook the abstract property
claim more securely to our instinctive wiring about territory.  And
this is why projects with web pages seem more `real'.</para>

<para>โฮมเพจของโครงการทำให้การปักหลักแบบนามธรรมในโลกของโปรแกรมเป็นรูปเป็นร่างขึ้นมา
ด้วยการประกาศตัวเองว่าเป็นเขต `บ้าน' (home)
ในโลกของเวิร์ลด์ไวด์เว็บที่มีการจัดที่อยู่เป็นหลักแหล่งกว่า การลงจาก
noosphere มาสู่ `ไซเบอร์สเปซ'
ยังไม่ได้นำเราไปถึงโลกแห่งความเป็นจริงที่มีรั้วและสุนัขเห่าทั้งหมดก็จริง
แต่ก็ได้ยึดการกล่าวอ้างทรัพย์สินแบบนามธรรมเข้ากับสามัญสำนึกเกี่ยวกับเขตแดนของเราไว้แน่นหนากว่า
และนี่จึงเป็นเหตุผลที่โครงการที่มีเว็บดูเป็น `ของจริง' กว่า</para>

<para>This point is much strengthened by hyperlinks and the existence of
good search engines.  A project with a web page is much more
likely to be noticed by somebody exploring its neighborhood in the
noosphere; others will link to it, searches will find it.  A web page
is therefore a better advertisement, a more effective performative
act, a stronger claim on territory.</para>

<para>ประเด็นนี้ได้รับการเสริมแรงอีกมาก
ด้วยไฮเพอร์ลิงก์และการมีเครื่องมือค้นหาที่ดี
โครงการที่มีหน้าเว็บสามารถเป็นที่สังเกตของคนที่กำลังสำรวจเพื่อนบ้านใน
nooshpere ได้มากกว่า เพราะหน้าอื่นก็เชื่อมโยงมา และการค้นหาก็จะพบ
หน้าเว็บจึงเป็นการโฆษณาที่ดีกว่า เป็นการกระทำที่มีผลตามคำพูดที่ได้ผลกว่า
และเป็นการกล่าวอ้างเขตแดนที่หนักแน่นกว่า</para>

<para>This ethological analysis also encourages us to look more closely
at mechanisms for handling conflict in the open-source culture. It
leads us to expect that, in addition to maximizing reputation
incentives, ownership customs should also have a role in preventing
and resolving conflicts.</para>

<para>การวิเคราะห์พฤติกรรมการประกาศถิ่นนี้
ยังได้ชวนให้พิจารณากลไกการจัดการข้อขัดแย้งในวัฒนธรรมโอเพนซอร์สให้ละเอียดขึ้นอีก
โดยได้ชี้นำให้คาดหวังว่า นอกจากการเพิ่มแรงกระตุ้นจากชื่อเสียงให้สูงสุดแล้ว
จารีตประเพณีการถือครองก็ควรมีบทบาทในการป้องกันและยุติข้อขัดแย้งด้วยเช่นกัน
</para>

</sect1>
<!-- Causes of Conflict -->
<sect1><title>สาเหตุของข้อขัดแย้ง</title>

<para>In conflicts over open-source software we can identify four
major issues:</para>

<para>ในบรรดาข้อขัดแย้งในซอฟต์แวร์โอเพนซอร์ส เราสามารถระบุเรื่องหลักๆ
ได้สี่เรื่อง:</para>

<itemizedlist>
<listitem><para> Who gets to make binding decisions about a
project?</para></listitem>
<listitem><para> ใครคือผู้ตัดสินใจเกี่ยวกับพันธกรณีของโครงการ?</para></listitem>

<listitem><para> Who gets credit or blame for what?</para></listitem>
<listitem><para> ใครได้เครดิตหรือคำตำหนิเรื่องอะไร?</para></listitem>

<listitem><para> How to reduce duplication of effort and prevent rogue
       versions from complicating bug tracking?</para></listitem>
<listitem><para> จะลดการทำงานซ้ำซ้อน
       และป้องกันเวอร์ชันเถื่อนไม่ให้มารบกวนการติดตามบั๊กได้อย่างไร?
       </para></listitem>

<listitem><para> What is the Right Thing, technically
speaking?</para></listitem>
<listitem><para> อะไรคือสิ่งที่ถูกต้องในทางเทคนิค?</para></listitem>
</itemizedlist>

<para>If we take a second look at the ``What is the Right Thing'' issue,
however, it tends to vanish.  For any such question, either there is
an objective way to decide it accepted by all parties or there isn't.
If there is, game over and everybody wins.  If there isn't, it reduces
to ``Who decides?''.</para>

<para>อย่างไรก็ดี ถ้าเรากลับไปพิจารณาเรื่อง ``อะไรคือสิ่งที่ถูกต้อง'' อีกครั้ง
เรื่องนี้ก็อาจจะหายไป เพราะสำหรับคำถามเช่นนี้
จะมีวิธีตัดสินที่เป็นกลางและเป็นที่ยอมรับของทุกฝ่าย หรือไม่ก็ไม่มีเลย
ซึ่งถ้ามี เรื่องก็จบ ทุกคนได้ประโยชน์ แต่ถ้าไม่มี เรื่องก็กลายมาเป็น
``ใครคือผู้ตัดสิน?'' นั่นเอง</para>

<para>Accordingly, the three problems a conflict-resolution theory has to
resolve about a project are (a) where the buck stops on design
decisions, (b) how to decide which contributors are credited and how,
and (c) how to keep a project group and product from fissioning into
multiple branches.</para>

<para>เมื่อเป็นเช่นนี้ ปัญหาสามข้อที่ทฤษฎีการยุติข้อขัดแย้งต้องแก้ในโครงการก็คือ
(ก) ความรับผิดชอบในการตัดสินใจเรื่องการออกแบบตกอยู่ที่ใคร
(ข) จะตัดสินอย่างไรว่าผู้ร่วมสมทบคนไหนได้เครดิตอย่างไร และ
(ค) จะป้องกันกลุ่มโครงการไม่ให้เกิดการแยกตัวออกไปหลายแขนงอย่างไร</para>

<para>The role of ownership customs in resolving issues (a) and (c) is
clear.  Custom affirms that the owners of the project make the binding
decisions.  We have previously observed that custom also exerts heavy
pressure against dilution of ownership by forking.</para>

<para>บทบาทของจารีตประเพณีเรื่องการถือครองในการยุติกรณี (ก) และ (ค) นั้นชัดเจน
เพราะจารีตประเพณีให้การรับรองเจ้าของโครงการให้เป็นผู้ตัดสินใจเกี่ยวกับพันธกรณี
เราได้สังเกตมาก่อนแล้วว่า
จารีตประเพณียังได้ให้แรงกดดันต้านการสลายตัวจากการฟอร์กอีกด้วย</para>

<para>It's instructive to notice that these customs make sense even if one
forgets the reputation game and examines them from within a pure
`craftmanship' model of the hacker culture.  In this view these
customs have less to do with the dilution of reputation incentives
than with protecting a craftsman's right to execute his vision in his
chosen way.</para>

<para>เรายังเรียนรู้ได้อีกจากการสังเกตว่าจารีตประเพณีเหล่านี้ยังใช้ได้
แม้จะละเลยผลของเกมแห่งชื่อเสียงแล้วตรวจสอบจากมุมมองแบบ `ช่างฝีมือ' ล้วนๆ
เกี่ยวกับวัฒนธรรมแฮ็กเกอร์ ในมุมมองนี้
จารีตประเพณีให้แรงจูงใจต่อการแยกตัวน้อยกว่าการปกป้องสิทธิของช่างฝีมือที่จะทำตามวิสัยทัศน์ของตนในวิธีที่ตนเลือก</para>

<para>The craftsmanship model is not, however, sufficient to explain
hacker customs about issue (b), who gets credit for what&mdash;because a
pure craftsman, one unconcerned with the reputation game, would have
no motive to care.  To analyze these, we need to take the Lockean
theory one step further and examine conflicts and the operation of
property rights <emphasis>within</emphasis> projects as well as
<emphasis>between</emphasis> them.</para>

<para>อย่างไรก็ดี
คำอธิบายแบบช่างฝีมือก็ยังไม่เพียงพอที่จะอธิบายวัฒนธรรมแฮ็กเกอร์เกี่ยวกับข้อ (ข)
ใครได้เครดิตในเรื่องไหน เพราะช่างฝีมือบริสุทธิ์ผู้ไม่สนใจเกมแห่งชื่อเสียง
จะไม่มีแรงกระตุ้นให้มาสนใจเรื่องเครดิต การวิเคราะห์เรื่องนี้
จึงต้องคิดต่อจากทฤษฎีของล็อคไปอีกขั้น แล้วตรวจสอบข้อขัดแย้ง
กับการทำงานของสิทธิในทรัพย์สิน <emphasis>ภายใน</emphasis> โครงการ และ
<emphasis>ระหว่าง</emphasis> โครงการต่างๆ</para>

</sect1>
<!-- Project Structures and Ownership -->
<sect1><title>โครงสร้างของโครงการและการถือครอง</title>

<para>The trivial case is that in which the project has a single
owner/maintainer.  In that case there is no possible conflict.  The
owner makes all decisions and collects all credit and blame.  The only
possible conflicts are over succession issues&mdash;who gets to be the
new owner if the old one disappears or loses interest.  The community
also has an interest, under issue (c), in preventing forking.  These
interests are expressed by a cultural norm that an owner/maintainer
should publicly hand title to someone if he or she can no longer
maintain the project.</para>

<para>กรณีที่เล็กน้อยก็คือกรณีที่โครงการมีเจ้าของเพียงคนเดียว ในกรณีดังกล่าว
ย่อมไม่มีข้อขัดแย้ง เจ้าของโครงการเป็นผู้ตัดสินใจและรับทั้งผิดและชอบทุกอย่าง
ข้อขัดแย้งที่เป็นไปได้เพียงอย่างเดียวคือเรื่องการสืบทอดโครงการ
คือคำถามว่าใครจะเป็นเจ้าของคนใหม่ ถ้าเจ้าของคนเดิมหายตัวไป หรือเลิกสนใจทำ
นอกจากนี้ ชุมชนยังมีความสนใจตามข้อ (ค) เรื่องการป้องกันการฟอร์ก ความสนใจเหล่านี้
แสดงออกมาในรูปบรรทัดฐานของวัฒนธรรมที่ว่า
เจ้าของหรือผู้ดูแลโครงการควรส่งทอดกรรมสิทธิ์ให้กับผู้อื่นอย่างเปิดเผย
เมื่อไม่สามารถดูแลโครงการต่ออีกแล้ว</para>

<para>The simplest non-trivial case is when a project has multiple
co-maintainers working under a single `benevolent dictator' who owns
the project.  Custom favors this mode for group projects; it has been
shown to work on projects as large as the Linux kernel or Emacs, and
solves the ``who decides'' problem in a way that is not obviously worse
than any of the alternatives.</para>

<para>กรณีสำคัญที่ง่ายที่สุดคือ เมื่อโครงการมีผู้ร่วมดูแลหลายคนทำงานภายใต้
`เผด็จการใจดี' คนเดียว ซึ่งเป็นเจ้าของโครงการ
จารีตประเพณีนิยมใช้รูปแบบนี้กับโครงการกลุ่ม
และก็ปรากฏว่าสามารถทำงานได้ดีกับโครงการใหญ่ๆ ขนาดเคอร์เนลลินุกซ์ หรือ Emacs
และสามารถแก้ปัญหา ``ใครเป็นผู้ตัดสิน'' ได้ด้วยหนทางที่ไม่ได้ด้อยกว่าวิธีอื่นเลย
</para>

<para>Typically, a benevolent-dictator organization evolves from an
owner-maintainer organization as the founder attracts contributors.
Even if the owner stays dictator, it introduces a new level of possible
disputes over who gets credited for what parts of the project.</para>

<para>โดยปกติแล้ว โครงสร้างแบบเผด็จการใจดีนี้ จะพัฒนามาจากแบบเจ้าของเป็นผู้ดูแล
หลังจากที่ผู้ก่อตั้งได้ผู้ร่วมสมทบมากขึ้น
แม้เจ้าของโครงการจะยังคงเป็นเผด็จการอยู่
แต่โครงสร้างแบบนี้ก็ได้เพิ่มระดับใหม่ของกรณีพิพาทที่อาจเกิดขึ้นได้
ว่าใครจะได้เครดิตสำหรับส่วนไหนของโครงการ</para>

<para>In this situation, custom places an obligation on the owner/dictator
to credit contributors fairly (through, for example, appropriate
mentions in README or history files).  In terms of the Lockean property
model, this means that by contributing to a project you earn
part of its reputation return (positive or negative).</para>

<para>ภายใต้เงื่อนไขเช่นนี้ จารีตประเพณีได้มอบหน้าที่แก่เจ้าของ/เผด็จการ
ที่จะให้เครดิตต่อผู้ร่วมสมทบอย่างยุติธรรม (เช่น ด้วยการอ้างถึงในไฟล์ README
หรือไฟล์ประวัติโครงการอย่างเหมาะสม) ตามแบบจำลองทรัพย์สินของล็อคแล้ว
การให้เครดิตดังกล่าวก็หมายความว่า
การร่วมสมทบในโครงการจะทำให้คุณได้ส่วนแบ่งของชื่อเสียงที่มีต่อโครงการด้วย
(ไม่ว่าแง่บวกหรือแง่ลบ)</para>

<para>Pursuing this logic, we see that a `benevolent dictator' does not in
fact own his entire project absolutely.  Though he has the right
to make binding decisions, he in effect trades away shares of the
total reputation return in exchange for others' work.  The analogy with
sharecropping on a farm is almost irresistible, except that a
contributor's name stays in the credits and continues to `earn' to
some degree even after that contributor is no longer active.</para>

<para>ตามตรรกะนี้ เราจะเห็นว่า `เผด็จการใจดี' แท้ที่จริงแล้ว
ก็ไม่ได้เป็นเจ้าของโครงการทั้งหมดอย่างเบ็ดเสร็จ
แม้เขาจะมีสิทธิ์ที่จะตัดสินใจเกี่ยวกับพันธกรณี แต่ผลก็คือ
เขาก็ให้ส่วนแบ่งในชื่อเสียงออกไปเพื่อแลกกับงานของผู้อื่นเหมือนกัน
จึงทำให้อดนึกถึงการเปรียบเทียบกับการลงแขกเกี่ยวข้าวไม่ได้ เว้นก็แต่ว่า
ชื่อของผู้ร่วมสมทบจะคงอยู่ในเครดิต และยังคงได้รับอยู่ในระดับหนึ่ง
แม้หลังจากที่ผู้ร่วมสมทบคนนั้นไม่ได้ร่วมทำงานอีกต่อไปแล้ว</para>

<para>As benevolent-dictator projects add more participants, they tend to
develop two tiers of contributors; ordinary contributors and
co-developers.  A typical path to becoming a co-developer is taking
responsibility for a major subsystem of the project.  Another is to
take the role of `lord high fixer', characterizing and fixing many
bugs.  In this way or others, co-developers are the contributors who 
make a substantial and continuing investment of time in the project.</para>

<para>เมื่อโครงการที่นำโดยเผด็จการใจดีมีผู้เข้าร่วมมากขึ้น
ก็มีแนวโน้มจะสร้างชั้นของผู้สมทบขึ้นสองชั้น คือผู้ร่วมสมทบปกติ กับนักพัฒนาร่วม
หนทางปกติที่จะนำไปสู่การเป็นนักพัฒนาร่วม ก็คือการรับผิดชอบในองค์ประกอบใหญ่ๆ
ของโครงการ และอีกทางหนึ่งคือ การรับบท `เซียนนักซ่อม'
คือเป็นผู้ชี้สาเหตุและแก้บั๊กจำนวนมาก ด้วยวิธีนี้หรือวิธีใดก็ตาม
นักพัฒนาร่วมก็คือ
ผู้ร่วมสมทบที่ได้อุทิศเวลาจำนวนมากอย่างต่อเนื่องให้กับโครงการนั่นเอง</para>

<para>The subsystem-owner role is particularly important for our analysis
and deserves further examination.  Hackers like to say that `authority
follows responsibility'. A co-developer who accepts maintainance
responsibility for a given subsystem generally gets to control both
the implementation of that subsystem and its interfaces with the rest
of the project, subject only to correction by the project leader
(acting as architect). We observe that this rule effectively creates
enclosed properties on the Lockean model within a project, and has
exactly the same conflict-prevention role as other property
boundaries.</para>

<para>บทบาทของการเป็นเจ้าขององค์ประกอบย่อย
มีความสำคัญโดยเฉพาะต่อการวิเคราะห์ของเรา และสมควรจะพิจารณาต่อ
แฮ็กเกอร์มักจะชอบพูดว่า `อำนาจมาตามความรับผิดชอบ' โดยทั่วไปแล้ว 
นักพัฒนาร่วมที่รับผิดชอบดูแลองค์ประกอบที่ได้รับมอบหมาย
ก็จะต้องควบคุมทั้งการทำงานภายในองค์ประกอบนั้น
และการเชื่อมต่อกับส่วนที่เหลือของโครงการ
ซึ่งเป็นเรื่องที่มีเพียงหัวหน้าโครงการเท่านั้นที่จะวิจารณ์แก้ไขได้
(ในฐานะสถาปนิก) เรายังสังเกตอีกว่า
กฎนี้มีผลในการสร้างทรัพย์สินตามแบบจำลองของล็อคซ้อนภายในโครงการ
และมีบทบาทในการป้องกันข้อขัดแย้งเหมือนกับขอบเขตของทรัพย์สินอื่นทุกประการ</para>

<para>By custom, the `dictator' or project leader in a project with
co-developers is expected to consult with those co-developers on key
decisions.  This is especially so if the decision concerns a subsystem
that a co-developer `owns' (that is, has invested time in and taken
responsibility for).  A wise leader, recognizing the function of the
project's internal property boundaries, will not lightly interfere
with or reverse decisions made by subsystem owners.</para>

<para>โดยจารีตประเพณีแล้ว `เผด็จการ'
หรือหัวหน้าโครงการในโครงการที่มีนักพัฒนาร่วม
จะถูกคาดหวังให้ปรึกษานักพัฒนาร่วมก่อนตัดสินใจครั้งสำคัญๆ เสมอ
โดยเฉพาะถ้าการตัดสินใจนั้นเกี่ยวข้องกับองค์ประกอบที่นักพัฒนาร่วม `เป็นเจ้าของ'
(คือใช้เวลาและรับผิดชอบดูแล) อยู่
หัวหน้าที่ฉลาดและเข้าใจหน้าที่ของเขตแดนทรัพย์สินภายในของโครงการ
จะไม่ก้าวก่ายหรือล้มเลิกการตัดสินใจที่กระทำโดยเจ้าขององค์ประกอบแม้แต่น้อย</para>

<para>Some very large projects discard the `benevolent dictator' model
entirely. One way to do this is turn the co-developers into a voting
committee (as with Apache).  Another is rotating dictatorship, in
which control is occasionally passed from one member to another within
a circle of senior co-developers; the Perl developers organize
themselves this way.</para>

<para>โครงการที่ใหญ่มากบางโครงการไม่สนใจรูปแบบ `เผด็จการใจดี' โดยสิ้นเชิง
วิธีหนึ่งก็คือ เปลี่ยนนักพัฒนาร่วมทั้งหลายให้เป็นคณะกรรมการลงคะแนนเสียง
(เช่นใน Apache) อีกวิธีหนึ่งคือหมุนเวียนกันเป็นเผด็จการ
ซึ่งอำนาจควบคุมจะถูกส่งต่อจากสมาชิกคนหนึ่งไปยังอีกคนหนึ่งภายในวงนักพัฒนาร่วมอาวุโส
นักพัฒนา Perl จัดโครงสร้างด้วยวิธีนี้</para>

<para>Such complicated arrangements are widely considered unstable and
difficult.  Clearly this perceived difficulty is largely a function of
the known hazards of design-by-committee, and of committees
themselves; these are problems the hacker culture consciously
understands.  However, I think some of the visceral discomfort hackers
feel about committee or rotating-chair organizations is that
they're hard to fit into the unconscious Lockean model hackers use for
reasoning about the simpler cases.  It's problematic, in these complex
organizations, to do an accounting of either ownership in the sense of
control or ownership of reputation returns.  It's hard to see where
the internal boundaries are, and thus hard to avoid conflict unless
the group enjoys an exceptionally high level of harmony and trust.</para>

<para>การจัดการที่ซับซ้อนเช่นนี้ ถือกันทั่วไปว่าไม่มีเสถียรภาพ และจัดการยาก
ความยุ่งยากที่เห็นได้ชัดเจนก็คือ เรื่องของความวุ่นวายที่รู้จักกันในนามของ
`การออกแบบโดยคณะกรรมการ' และความวุ่นวายของคณะกรรมการเอง
ปัญหาเหล่านี้เป็นที่เข้าใจกันดีในวัฒนธรรมแฮ็กเกอร์ อย่างไรก็ดี ผู้เขียนคิดว่า
ความไม่สบายใจที่แฮ็กเกอร์รู้สึกต่อการใช้คณะกรรมการหรือการหมุนเวียนเก้าอี้ก็คือ
มันเข้ากันได้ยากกับรูปแบบของล็อคในจิตใต้สำนึกที่แฮ็กเกอร์ใช้ในการให้เหตุผลต่อกรณีที่ง่ายกว่า
จึงเป็นปัญหาในองค์กรที่ซับซ้อนเหล่านี้ที่จะรับรองการถือครอง
ไม่ว่าในแง่ของการมีอำนาจควบคุมหรือการได้รับชื่อเสียง
เป็นการยากที่จะเห็นการแบ่งเขตภายใน ซึ่งทำให้ยากที่จะหลีกเลี่ยงข้อขัดแย้ง
นอกเสียจากว่า
กลุ่มจะอยู่ในสภาพที่กลมเกลียวกันและเชื่อใจกันในระดับสูงเป็นพิเศษ</para>

</sect1>
<!-- Conflict and Conflict Resolution -->
<sect1><title>ข้อขัดแย้งและวิธียุติข้อขัดแย้ง</title>

<para>We've seen that within projects, an increasing complexity of roles is
expressed by a distribution of design authority and partial property
rights.  While this is an efficient way to distribute incentives, it
also dilutes the authority of the project leader&mdash;most importantly,
it dilutes the leader's authority to squash potential conflicts.</para>

<para>เราได้เห็นแล้วว่าในโครงการต่างๆ นั้น ความซับซ้อนที่เพิ่มขึ้นของบทบาทต่างๆ
ถูกแสดงออกมาด้วยการกระจายอำนาจการออกแบบและสิทธิในทรัพย์สินบางส่วน
ในขณะที่การกระจายนี้ถือเป็นการกระจายแรงจูงใจที่ได้ผล
แต่ก็เป็นการลดทอนอำนาจของหัวหน้าโครงการไปด้วย และที่สำคัญที่สุด
คือลดทอนอำนาจของหัวหน้าที่จะขจัดข้อขัดแย้งที่อาจเกิดขึ้น</para>

<para>While technical arguments over design might seem the most obvious risk
for internecine conflict, they are seldom a serious cause of strife.
These are usually relatively easily resolved by the territorial rule
that authority follows responsibility.</para>

<para>ในขณะที่การถกเถียงในทางเทคนิคเกี่ยวกับการออกแบบอาจดูเป็นความเสี่ยงที่ชัดเจนต่อความขัดแย้งภายใน
แต่ก็มีน้อยมากที่จะกลายเป็นสาเหตุที่ร้ายแรงของความไม่ลงรอยกัน
เรื่องนี้มักจะยุติโดยง่ายด้วยกฎของเขตแดนที่ว่าอำนาจมาตามความรับผิดชอบ</para>

<para>Another way of resolving conflicts is by seniority&mdash;if two
contributors or groups of contributors have a dispute, and the dispute
cannot be resolved objectively, and neither owns the territory of the
dispute, the side that has put the most work into the project as a
whole (that is, the side with the most property rights in the whole
project) wins.</para>

<para>อีกทางหนึ่งของการยุติข้อขัดแย้งคืออาศัยความมีอาวุโส
ถ้าผู้ร่วมสมทบสองคนหรือสองกลุ่มทะเลาะกัน
และการทะเลาะนั้นไม่อาจยุติอย่างเป็นกลางได้
และไม่มีฝ่ายใดเป็นเจ้าของเขตแดนที่กำลังทะเลาะกันเลย
ฝ่ายที่ได้ช่วยงานในโครงการโดยรวมมามากที่สุด (กล่าวคือ
ฝ่ายที่มีสิทธิในทรัพย์สินในโครงการโดยรวมมากที่สุด) ควรเป็นฝ่ายชนะ</para>

<para>(Equivalently, the side with the least invested loses.  Interestingly
this happens to be the same heuristic that many relational database
engines use to resolve deadlocks.  When two threads are deadlocked over
resources, the side with the least invested in the current transaction
is selected as the deadlock victim and is terminated.  This usually
selects the longest running transaction, or the more senior, as the
victor.)</para>

<para>(พูดอีกอย่างก็คือ ฝ่ายที่ได้ลงแรงมาน้อยที่สุดจะพ่ายแพ้
ซึ่งน่าสนใจที่กฎนี้บังเอิญเป็นเคล็ดเดียวกับที่ระบบฐานข้อมูลเชิงสัมพันธ์หลายระบบใช้ในการแก้ไขการติดตาย
เมื่อสายงานสองสายติดตายกันในการใช้ทรัพยากร
ฝ่ายที่มีการลงทุนในรายการเปลี่ยนแปลงปัจจุบันน้อยที่สุดจะถูกเลือกเป็นผู้ต้องหาที่ทำให้เกิดการติดตาย
และจะถูกจบ วิธีนี้จึงเลือกรายการเปลี่ยนแปลงที่ทำงานมานานที่สุด
หรือมีอาวุโสที่สุด ให้เป็นผู้ชนะเสมอ)</para>

<para>These rules generally suffice to resolve most project disputes.  When
they do not, fiat of the project leader usually suffices.  Disputes
that survive both these filters are rare.</para>

<para>กฎเหล่านี้โดยทั่วไปก็เพียงพอต่อการยุติกรณีพิพาทเกือบทั้งหมดในโครงการ
เมื่อไรที่มันยุติไม่ได้ ประกาศิตของหัวหน้าโครงการก็มักจะเพียงพอ
หาได้ยากที่จะมีกรณีพิพาทที่สามารถผ่านด่านเหล่านี้มาได้</para>

<para>Conflicts do not, as a rule, become serious unless these two criteria
("authority follows responsibility" and "seniority wins") point in
different directions, <emphasis>and</emphasis> the authority of the project
leader is weak or absent.  The most obvious case in which this may
occur is a succession dispute following the disappearance of the
project lead.  I have been in one fight of this kind.  It was ugly,
painful, protracted, only resolved when all parties became exhausted
enough to hand control to an outside person, and I devoutly hope I am
never anywhere near anything of the kind again.</para>

<para>ตามหลักแล้ว ข้อขัดแย้งจะไม่ร้ายแรงขึ้นมานอกเสียจากเกณฑ์ทั้งสอง
("อำนาจมาตามความรับผิดชอบ" และ "ผู้มีอาวุโสชนะ") จะชี้ไปคนละทาง
<emphasis>และ</emphasis> อำนาจของหัวหน้าโครงการมีน้อยหรือไม่มี
กรณีที่ชัดเจนที่สุดที่เงื่อนไขนี้อาจเกิดได้ ก็คือการทะเลาะเรื่องการสืบทอด
หลังจากที่หัวหน้าโครงการหายตัวไป ผู้เขียนเคยอยู่ในเหตุการณ์แบบนี้ครั้งหนึ่ง
เป็นเหตุการณ์ที่น่าเกลียด เจ็บปวด ยืดเยื้อ
และยุติได้ก็ต่อเมื่อทุกฝ่ายเหนื่อยหน่ายจนต้องส่งการควบคุมไปให้กับคนนอก
และผู้เขียนหวังเป็นอย่างยิ่งว่าตัวเองจะไม่กรายใกล้กับเรื่องแบบนี้อีกเลย</para>

<para>Ultimately, all of these conflict-resolution mechanisms rest on the
entire hacker community's willingness to enforce them.  The only available
enforcement mechanisms are flaming and shunning&mdash;public condemnation
of those who break custom, and refusal to cooperate with them after
they have done so.</para>

<para>ที่สุดแล้ว กลไกการยุติข้อขัดแย้งเหล่านี้
ก็อาศัยความพยายามของชุมชนแฮ็กเกอร์ทั้งหมดที่จะบังคับใช้
กลไกบังคับที่มีอยู่มีเพียงการด่าและหมางเมิน
ซึ่งเป็นการประนามของสาธารณชนต่อผู้ที่ฝ่าฝืนจารีตประเพณี
และการปฏิเสธที่จะร่วมสังฆกรรมหลังการฝ่าฝืนเท่านั้น</para>

</sect1>
<!-- Acculturation Mechanisms and the Link to Academia -->
<sect1><title>กลไกการถ่ายทอดวัฒนธรรมและความเชื่อมโยงกับวงการการศึกษา</title>

<para>An early version of this essay posed the following research question:
how does the community inform and instruct its members as to its
customs?  Are the customs self-evident or self-organizing at a
semi-conscious level?  Are they taught by example?  Are they taught by
explicit instruction?</para>

<para>รุ่นแรกๆ ของบทความนี้ได้ตั้งคำถามสำหรับค้นคว้าเพิ่มเติมว่า
ชุมชนได้บอกกล่าวและชี้แนะสมาชิกเกี่ยวกับจารีตประเพณีอย่างไร?
จารีตประเพณีปรากฏชัดเจนในตัวหรือว่าก่อรูปเองในระดับที่ไม่ได้เจตนาเต็มที่?
หรือว่าใช้การสอนด้วยการทำให้ดูเป็นตัวอย่าง? หรือว่าใช้คำชี้แนะอย่างโจ่งแจ้ง?
</para>

<para>Teaching by explicit instruction is clearly rare, if only
because few explicit descriptions of the culture's norms have existed
for instructional use up to now.</para>

<para>แน่นอนว่าการชี้แนะอย่างโจ่งแจ้งนั้นไม่ค่อยมีให้เห็น
เพราะมีคำบรรยายอย่างชัดเจนของบรรทัดฐานของวัฒนธรรมไว้ใช้ชี้แนะน้อยเกินไปนั่นเอง
</para>

<para>Many norms are taught by example.  To cite one very simple case, there
is a norm that every software distribution should have a file called
README or READ.ME that contains first-look instructions for browsing
the distribution.  This convention has been well established since at
least the early 1980s; it has even, occasionally, been written down.
But one normally derives it from looking at many distributions.</para>

<para>บรรทัดฐานหลายอย่างจะถูกสอนด้วยตัวอย่าง
ยกตัวอย่างกรณีที่ง่ายมากกรณีหนึ่งคือ
เป็นธรรมเนียมที่ชุดแจกจ่ายซอฟต์แวร์ทุกชุดจะต้องมีไฟล์ชื่อ README หรือ READ.ME
ที่ให้คำชี้แนะเบื้องต้นสำหรับการสำรวจส่วนต่างๆ ของชุดซอฟต์แวร์
ธรรมเนียมนี้ฝังรากเป็นอย่างดีมาตั้งแต่ต้นทศวรรษ 1980 เป็นอย่างน้อย
และมีการเขียนบัญญัติไว้เป็นบางโอกาสด้วย
แต่นักพัฒนาโดยทั่วไปจะทำตามแบบอย่างที่เห็นในชุดซอฟต์แวร์ทั้งหลายมากกว่า</para>

<para>On the other hand, some hacker customs are self-organizing once one has
acquired a basic (perhaps unconscious) understanding of the reputation
game.  Most hackers never have to be taught the three taboos I listed
earlier in this essay, or at least would claim if asked that they are
self-evident rather than transmitted.  This phenomenon invites
closer analysis&mdash;and perhaps we can find its explanation in the
process by which hackers acquire knowledge about the culture.</para>

<para>ในทางตรงกันข้าม จารีตประเพณีบางอย่างของแฮ็กเกอร์
ก็ก่อร่างขึ้นเองเมื่อแต่ละคนได้เกิดความเข้าใจพื้นฐาน (และอาจจะโดยไม่รู้ตัว)
เกี่ยวกับเกมแห่งชื่อเสียง แฮ็กเกอร์ส่วนใหญ่ไม่จำเป็นต้องมีใครสอนเลย
ถึงเรื่องข้อห้ามสามข้อที่ผู้เขียนได้แสดงมาก่อนแล้วในบทความนี้ หรืออย่างน้อย
ถ้าถูกถามก็จะตอบว่ามันชัดเจนในตัวเองอยู่แล้ว มากกว่าจะได้รับการถ่ายทอดจากคนอื่น
ปรากฏการณ์นี้ชวนให้วิเคราะห์เจาะลึกลงไปอีก
และบางทีเราอาจพบคำอธิบายจากกระบวนการที่แฮ็กเกอร์ได้เรียนรู้เกี่ยวกับจารีตประเพณีก็เป็นได้
</para>

<para>Many cultures use hidden clues (more precisely `mysteries' in the
religio/mystical sense) as an acculturation mechanism.  These are
secrets that are not revealed to outsiders, but are expected to be
discovered or deduced by the aspiring newbie.  To be accepted inside,
one must demonstrate that one both understands the mystery and has
learned it in a culturally sanctioned way.</para>

<para>หลายวัฒนธรรมใช้เคล็ดลับที่ปกปิด (หรือที่ถูกต้องกว่า คือ `ความลึกลับ'
ในแง่ความเชื่อและศาสนา) เป็นกลไกถ่ายทอดวัฒนธรรม
เคล็ดลับเหล่านี้เป็นความลับที่ไม่เปิดเผยต่อคนนอก
แต่คาดหวังให้ผู้เริ่มต้นที่ศรัทธาได้ค้นพบหรืออนุมานเอาเอง
และเพื่อที่จะได้รับการยอมรับเข้าในกลุ่ม บุคคลจะต้องแสดงให้เห็น
ว่าตนนั้นทั้งเข้าใจความลึกลับนั้น
และได้เรียนรู้มันด้วยวิธีที่ถูกต้องตามครรลองของวัฒนธรรม
</para>

<para>The hacker culture makes unusually conscious and extensive use of such
clues or tests.  We can see this process operating at at least three
levels:</para>

<para>วัฒนธรรมแฮ็กเกอร์ใช้เคล็ดลับหรือการทดสอบประเภทนี้อย่างหนักและจงใจอย่างไม่ธรรมดา
เราสามารถเห็นกระบวนการนี้ทำงานในสามระดับเป็นอย่างน้อย:</para>

<itemizedlist> 
<listitem><para>
Password-like specific mysteries. As one example, there is a Usenet
newsgroup called alt.sysadmin.recovery that has a very explicit such
secret; you cannot post without knowing it, and knowing it is
considered evidence you are fit to post.  The regulars have a strong
taboo against revealing this secret.</para></listitem>
<listitem><para>
ความลึกลับบางชนิดที่คล้ายรหัสผ่าน ตัวอย่างหนึ่งก็คือ มีกลุ่มข่าว Usenet ชื่อ
alt.sysadmin.recovery ที่มีความลับชนิดนี้อย่างชัดเจน
คุณจะไม่สามารถโพสต์ได้ถ้าไม่รู้ความลับนั้น และการรู้ความลับนั้น
ก็ถือเป็นหลักฐานแสดงว่าคุณมีความเหมาะสมพอที่จะโพสต์
ขาประจำจะมีกฎเหล็กห้ามเปิดเผยความลับนี้อย่างเด็ดขาด</para></listitem>

<listitem><para>
The requirement of initiation into certain technical mysteries. One
must absorb a good deal of technical knowledge before one can give
valued gifts (e.g. one must know at least one of the major computer
languages).  This requirement functions in the large in the way hidden
clues do in the small, as a filter for qualities (such as capability
for abstract thinking, persistence, and mental flexibility) that are
necessary to function in the culture.</para></listitem>
<listitem><para>
เงื่อนไขพื้นฐานของการเริ่มต้นเข้าสู่ความลึกลับทางเทคนิค
บุคคลต้องซึมซับความรู้ทางเทคนิคพอประมาณ ก่อนที่จะสามารถให้ของขวัญที่มีค่าได้
(ตัวอย่างเช่น ต้องรู้ภาษาคอมพิวเตอร์หลักๆ อย่างน้อยหนึ่งภาษา)
เงื่อนไขนี้ทำหน้าที่ต่อสังคมใหญ่ในลักษณะเดียวกับที่เคล็ดลับทำกับสังคมเล็ก
โดยเป็นตัวกลั่นกรองคุณภาพต่างๆ (เช่น ความสามารถในการคิดเชิงนามธรรม ความมุ่งมั่น
และความยืดหยุ่นทางอารมณ์) ที่มีความสำคัญต่อการทำงานภายในวัฒนธรรม
</para></listitem>

<listitem><para>
Social-context mysteries.  One becomes involved in the culture through
attaching oneself to specific projects.  Each project is a live social
context of hackers that the would-be contributor has to investigate
and understand socially as well as technically in order to
function. (Concretely, a common way one does this is by reading the
project's web pages and/or email archives.) It is through these project
groups that newbies experience the behavioral example of experienced
hackers.</para></listitem>
<listitem><para>
ความลึกลับเกี่ยวกับบริบทของสังคม
บุคคลจะเข้ามามีส่วนร่วมในวัฒนธรรมด้วยการผูกพันตัวเองกับโครงการบางโครงการ
แต่ละโครงการก็คือบริบททางสังคมสดๆ ของแฮ็กเกอร์
ที่ผู้ที่จะมาร่วมสมทบจะต้องติดตามวิเคราะห์และทำความเข้าใจในแง่สังคมพอๆ
กับในแง่เทคนิคเพื่อที่จะเริ่มทำตัวให้เป็นประโยชน์ได้ (พูดให้เป็นรูปธรรมก็คือ
ทางหนึ่งที่จะเรียนรู้ ก็ด้วยการอ่านหน้าเว็บ และ/หรือ บันทึกเมลของโครงการ)
ด้วยกลุ่มโครงการเหล่านี้นี่เอง
ที่ผู้เริ่มต้นจะเรียนรู้ตัวอย่างพฤติกรรมของแฮ็กเกอร์ที่มีประสบการณ์
</para></listitem>
</itemizedlist>

<para>In the process of acquiring these mysteries, the would-be hacker
picks up contextual knowledge that (after a while) does make the
three taboos and other customs seem `self-evident'.</para>

<para>ในกระบวนการเรียนรู้ความลึกลับเหล่านี้
ผู้ที่จะเป็นแฮ็กเกอร์จะเก็บเกี่ยวความรู้ที่ (หลังจากเรียนรู้มาระยะหนึ่ง)
ทำให้ข้อห้ามสามข้อและจารีตประเพณีอื่นๆ ดู `ชัดเจนในตัวเอง'</para>

<para>One might, incidentally, argue that the structure of the hacker gift
culture itself is its own central mystery.  One is not considered
acculturated (concretely: no one will call you a hacker) until one
demonstrates a gut-level understanding of the reputation game and its
implied customs, taboos, and usages.  But this is trivial; all
cultures demand such understanding from would-be joiners.  Furthermore
the hacker culture evinces no desire to have its internal logic and
folkways kept secret&mdash;or, at least, nobody has ever flamed me
for revealing them!</para>

<para>อย่างไรก็ดี บางคนอาจแย้งว่า
ตัวโครงสร้างของวัฒนธรรมการให้ของแฮ็กเกอร์เองนั่นแหละ
ที่เป็นความลึกลับที่สำคัญที่สุด คุณจะไม่ถูกนับว่าได้เข้าร่วมวัฒนธรรม
(พูดให้เป็นรูปธรรมก็คือ จะไม่มีใครเรียกคุณว่าแฮ็กเกอร์)
จนกว่าคุณจะแสดงให้เห็นถึงความเข้าใจอย่างถึงกึ๋น เกี่ยวกับเกมแห่งชื่อเสียง
พร้อมทั้งนัยเกี่ยวกับจารีตประเพณี ข้อห้าม และการปฏิบัติ
แต่ประเด็นนี้ไม่ได้เป็นเรื่องใหญ่อะไร
ทุกวัฒนธรรมต่างก็ต้องการความเข้าใจเช่นว่าจากผู้ที่จะเข้าร่วมอยู่แล้ว
นอกจากนี้ วัฒนธรรมแฮ็กเกอร์ก็ยังไม่แสดงความปรารถนาที่จะเก็บความคิดและครรลองของมันไว้เป็นความลับแต่อย่างใด
หรืออย่างน้อยที่สุด ก็ยังไม่มีใครด่าผู้เขียนที่ได้เปิดเผยเรื่องเหล่านี้เลย!
</para>

<para>Respondents to this essay too numerous to list have pointed out that
hacker ownership customs seem intimately related to (and may derive
directly from) the practices of the academic world, especially the
scientific research commmunity.  This research community has similar
problems in mining a territory of potentially productive ideas, and
exhibits very similar adaptive solutions to those problems in the ways
it uses peer review and reputation.</para>

<para>ผู้แสดงความเห็นต่อบทความนี้จำนวนมากจนสาธยายไม่หมด ได้ชี้ว่า
จารีตประเพณีเรื่องการถือครองของแฮ็กเกอร์ดูจะเกี่ยวข้องอย่างใกล้ชิดกับ
(และอาจได้โดยตรงมาจาก) ธรรมเนียมปฏิบัติของวงการการศึกษา
โดยเฉพาะแวดวงวิจัยทางวิทยาศาสตร์
แวดวงวิจัยนี้มีปัญหาที่คล้ายกันในการวินิจฉัยความคิดต่างๆ ที่อาจให้ผลิตผลสูง
และได้แสดงคำตอบแบบยืดหยุ่นที่คล้ายกันต่อปัญหาที่ว่า
ด้วยวิธีที่ใช้การประเมินผลโดยหมู่ชนและชื่อเสียง</para>

<para>Since many hackers have had formative exposure to academia (it's
common to learn how to hack while in college) the extent to which
academia shares adaptive patterns with the hacker culture is of more
than casual interest in understanding how these customs are
applied.</para>

<para>เนื่องจากแฮ็กเกอร์หลายคนผ่านการบ่มเพาะมาจากโลกการศึกษา
(เป็นเรื่องปกติที่จะฝึกแฮ็กตั้งแต่ขณะเรียนในโรงเรียน)
ระดับที่การศึกษามีรูปแบบร่วมกันกับวัฒนธรรมแฮ็กเกอร์จึงน่าสนใจไม่น้อย
ในการทำความเข้าใจการประยุกต์จารีตประเพณีเหล่านี้</para>

<para>Obvious parallels with the hacker `gift culture' as I have
characterized it abound in academia.  Once a researcher achieves
tenure, there is no need to worry about survival issues. (Indeed, the
concept of tenure can probably be traced back to an earlier gift
culture in which ``natural philosophers'' were primarily wealthy
gentlemen with time on their hands to devote to research.)  In the
absence of survival issues, reputation enhancement becomes the driving
goal, which encourages sharing of new ideas and research through
journals and other media. This makes objective functional sense
because scientific research, like the hacker culture, relies heavily
on the idea of `standing upon the shoulders of giants', and not having
to rediscover basic principles over and over again.</para>

<para>ความคล้ายคลึงกันที่ชัดเจนกับ `วัฒนธรรมการให้'
ของแฮ็กเกอร์เท่าที่ผู้เขียนสังเกตได้ มีอยู่มากมายในวงการการศึกษา
เมื่อนักวิจัยได้ตำแหน่งงานแล้ว ก็ไม่จำเป็นต้องกังวลเรื่องความอยู่รอดอีก
(อันที่จริงแล้ว แนวคิดเรื่องตำแหน่งงานนี้
อาจสืบย้อนกลับไปในวัฒนธรรมการให้ระยะแรกๆ ที่ ``นักปรัชญาธรรมชาติ'' ทั้งหลาย
โดยมากก็เป็นพวกผู้ดีมีฐานะที่มีเวลาพอที่จะอุทิศให้กับงานวิจัยได้)
เมื่อไม่มีห่วงเรื่องความอยู่รอด การสร้างชื่อเสียงจึงกลายเป็นเป้าหมายขับดัน
ซึ่งกระตุ้นให้เกิดการแบ่งปันความคิดใหม่ๆ และงานวิจัย
ผ่านวารสารวิชาการและสื่ออื่นๆ เรื่องนี้น่าเชื่อถืออย่างเป็นกลางได้
เพราะงานวิจัยทางวิทยาศาสตร์ซึ่งเหมือนกับวัฒนธรรมแฮ็กเกอร์นั้น อาศัยแนวคิด
`ยืนบนไหล่ยักษ์' และไม่ต้องค้นคว้าเรื่องพื้นฐานซ้ำแล้วซ้ำเล่าเป็นหลักนั่นเอง
</para>

<para>Some have gone so far as to suggest that hacker customs are merely a
reflection of the research community's folkways and have actually (in
most cases) been acquired there by individual hackers.  This probably
overstates the case, if only because hacker custom seems to be readily
acquired by intelligent high-schoolers!</para>

<para>บางท่านไปไกลถึงขนาดชี้แนะว่า
จารีตประเพณีของแฮ็กเกอร์เป็นแค่ภาพสะท้อนหนึ่งของครรลองของแวดวงวิจัยเท่านั้น
และ (โดยส่วนใหญ่) ได้ถูกนำไปใช้โดยแฮ็กเกอร์แต่ละคน
ความเห็นนี้อาจจะเกินเลยไปหน่อย เพราะเด็กมัธยมเก่งๆ
หลายคนก็ดูเหมือนจะรับเอาจารีตประเพณีของแฮ็กเกอร์ไปใช้เรียบร้อยแล้ว!</para>

</sect1>
<!-- Gift Outcompetes Exchange -->
<sect1><title>การให้ดีกว่าการแลกเปลี่ยน</title>

<para>There is a more interesting possibility here.  I suspect
academia and the hacker culture share adaptive patterns not because
they're genetically related, but because they've both evolved the one
most optimal social organization for what they're trying to do, given
the laws of nature and the instinctive wiring of human beings.
The verdict of history seems to be that free-market capitalism is the
globally optimal way to cooperate for economic efficiency; perhaps, in
a similar way, the reputation-game gift culture is the globally
optimal way to cooperate for generating (and checking!) high-quality
creative work.</para>

<para>ตรงจุดนี้มีเรื่องเป็นไปได้ที่น่าสนใจกว่านั้นอยู่ ผู้เขียนตั้งข้อสงสัยว่า
การที่วงการการศึกษากับวัฒนธรรมแฮ็กเกอร์มีรูปแบบร่วมกัน
ไม่น่าจะเป็นเพราะมีความเกี่ยวพันกันโดยกำเนิด
แต่น่าจะเป็นเพราะทั้งสองวงการต่างพัฒนาโครงสร้างทางสังคมที่เหมาะสมที่สุดสำหรับสิ่งที่มุ่งจะทำ
ภายใต้กฎแห่งธรรมชาติ และการเชื่อมโยงอย่างแนบแน่นกับสัญชาตญาณของมนุษย์
คำตัดสินของประวัติศาสตร์ดูเหมือนจะบอกว่า
ทุนนิยมแบบตลาดเสรีเป็นวิธีที่ดีที่สุดในการร่วมมือเพื่อให้เกิดประสิทธิภาพทางเศรษฐกิจ
และบางที ด้วยวิธีที่คล้ายกัน
วัฒนธรรมการให้ที่อาศัยเกมแห่งชื่อเสียงก็อาจเป็นวิธีที่ดีที่สุดในการร่วมมือเพื่อสร้าง
(และตรวจสอบ!) งานสร้างสรรค์ที่มีคุณภาพสูงเช่นกัน</para>

<para>Support for this theory becomes from a large body of
psychological studies on the interaction between art and reward <link
linkend="GNU">[GNU]</link>.  These studies have received less
attention than they should, in part perhaps because their popularizers
have shown a tendency to overinterpret them into general attacks
against the free market and intellectual property.  Nevertheless,
their results do suggest that some kinds of scarcity-economics rewards
actually decrease the productivity of creative workers such as
programmers.</para>

<para>สิ่งที่สนับสนุนแนวคิดนี้ มาจากการศึกษาทางจิตวิทยาจำนวนมาก
เกี่ยวกับการส่งผลระหว่างงานศิลปะกับรางวัล <link linkend="GNU">[GNU]</link>
การศึกษาเหล่านี้ได้รับความสนใจน้อยกว่าที่ควร
ส่วนหนึ่งอาจเป็นเพราะผู้เผยแพร่ได้แสดงเจตนาที่จะตีความเกินจริง
จนกลายเป็นการโจมตีต่อตลาดเสรีและทรัพย์สินทางปัญญา อย่างไรก็ดี
ผลการศึกษาเหล่านี้ได้บ่งชี้ว่า การให้รางวัลตามแบบเศรษฐศาสตร์ที่ขาดแคลนนั้น
แท้ที่จริงแล้วได้ลดผลิตภาพของคนทำงานสร้างสรรค์อย่างโปรแกรมเมอร์ลง</para>

<para>Psychologist Theresa Amabile of Brandeis University, cautiously
summarizing the results of a 1984 study of motivation and reward,
observed ``It may be that commissioned work will, in general, be less
creative than work that is done out of pure interest.''.  Amabile goes
on to observe that ``The more complex the activity, the more it's hurt
by extrinsic reward.''  Interestingly, the studies suggest that
flat salaries don't demotivate, but piecework rates and bonuses do.</para>

<para>Theresa Amabile นักจิตวิทยาของมหาวิทยาลัย Brandeis
ได้สรุปไว้อย่างรัดกุมเกี่ยวกับผลของการศึกษาในปี 1984 เรื่องแรงกระตุ้นกับรางวัล
โดยตั้งข้อสังเกตว่า
``เป็นไปได้ที่งานที่ให้ส่วนแบ่งค่าตอบแทนโดยทั่วไปจะสร้างสรรค์น้อยกว่างานที่มาจากความสนใจล้วนๆ''
Amabile สังเกตต่อไปว่า ``ยิ่งกิจกรรมซับซ้อนเท่าใด
ก็จะถูกบั่นทอนด้วยรางวัลภายนอกได้มากเท่านั้น''
ซึ่งน่าสนใจว่าการศึกษานี้บ่งชี้ว่าการจ่ายเงินเดือนระดับเดียว
ไม่ได้ลดแรงกระตุ้นลงเลย
แต่การจ่ายเป็นรายชิ้นและโบนัสสามารถลดแรงกระตุ้นได้</para>

<para>Thus, it may be economically smart to give performance bonuses to
people who flip burgers or dug ditches, but it's probably smarter to
decouple salary from performance in a programming shop and let
people choose their own projects (both trends that the open-source
world takes to their logical conclusions).  Indeed, these results
suggest that the only time it is a good idea to reward performance
in programming is when the programmer is so motivated that he
or she would have worked without the reward!</para>

<para>ดังนั้น จึงอาจเป็นความฉลาดทางเศรษฐกิจที่จะให้โบนัสตอบแทนประสิทธิภาพกับพนักงานปิ้งเบอร์เกอร์หรือขุดท้องร่อง
แต่อาจฉลาดกว่าถ้าจะแยกเงินเดือนออกจากประสิทธิภาพในแผนกเขียนโปรแกรม
แล้วให้พนักงานเลือกโครงการเอง
(เป็นแนวโน้มสองอย่างที่โลกโอเพนซอร์สได้ข้อสรุปตามเหตุผล) อันที่จริงแล้ว
ผลการศึกษาเหล่านี้ยังบอกด้วยว่า
เวลาเดียวที่สมควรจะให้รางวัลประสิทธิภาพดีในงานเขียนโปรแกรม
ก็คือตอนที่โปรแกรมเมอร์มีความกระตือรือร้นมากเสียจนสามารถทำงานได้โดยไม่ต้องมีรางวัล!
</para>

<para>Other researchers in the field are willing to point a finger
straight at the issues of autonomy and creative control that so
preoccupy hackers. ``To the extent one's experience of being
self-determined is limited,'' said Richard Ryan, associate
psychology professor at the University of Rochester, ``one's
creativity will be reduced as well.''</para>

<para>นักวิจัยคนอื่นในสาขาเดียวกันพร้อมจะชี้ตรงไปที่ประเด็นที่เกาะกุมจิตใจของแฮ็กเกอร์มากๆ
เกี่ยวกับความเป็นเอกเทศและการควบคุมความคิดสร้างสรรค์
``ยิ่งแฮ็กเกอร์รู้สึกว่าสามารถตัดสินใจด้วยตัวเองได้จำกัดเท่าไร'' Richard Ryan
ผู้ช่วยศาสตราจารย์สาขาจิตวิทยาของมหาวิทยาลัยโรเชสเตอร์กล่าว
``ความคิดสร้างสรรค์ของเขาก็จะลดลงมากเท่านั้น''</para>

<para>In general, presenting any task as a means rather than an end in
itself seems to demotivate.  Even winning a competition with others or
gaining peer esteem can be demotivating in this way if the victory is
experienced as work for reward (which may explain why hackers are
culturally prohibited from explicitly seeking or claiming that
esteem).</para>

<para>โดยทั่วไปแล้ว การทำให้เห็นว่างานใดก็ตามเป็นเพียงหนทาง
แทนที่จะเป็นเป้าหมายในตัวเอง จะทำให้ขาดแรงกระตุ้น
แม้แต่การชนะการแข่งขันกับผู้อื่น หรือการได้ความเคารพจากผู้อื่น
ก็สามารถลดแรงกระตุ้นในทำนองเดียวกันนี้ได้
ถ้ามีความรู้สึกว่าชัยชนะเป็นการทำงานเพื่อรางวัล (ซึ่งอาจใช้อธิบายได้ว่า
ทำไมวัฒนธรรมจึงห้ามแฮ็กเกอร์แสวงหาหรือกล่าวตู่ความเคารพจากคนอื่น)</para>

<para>To complicate the management problem further, controlling verbal
feedback seems to be just as demotivating as piecework payment.  Ryan
found that corporate employees who were told, ``Good, you're doing as
you <emphasis>should</emphasis>'' were ``significantly less intrinsically
motivated than those who received feedback informationally.''</para>

<para>ความซับซ้อนในงานบริหารยังไม่จบแค่นั้น การควบคุมการตอบกลับด้วยคำพูด
ก็ดูจะทำลายแรงกระตุ้นพอๆ กับการจ่ายค่าตอบแทนเป็นชิ้นงาน Ryan พบว่า
พนักงานบริษัทที่หัวหน้าบอกว่า ``ดีแล้ว คุณทำในสิ่งที่
<emphasis>สมควร</emphasis> แล้ว'' นั้น
``ให้แรงจูงใจภายในน้อยกว่าคนที่ได้รับคำตอบที่มีข้อมูลมากนัก''</para>

<para>It may still be intelligent to offer incentives, but they have to come
without attachments to avoid gumming up the works.  There is a critical
difference (Ryan observes) between saying, ``I'm giving you this
reward because I recognize the value of your work'', and ``You're
getting this reward because you've lived up to my standards.'' The
first does not demotivate; the second does.</para>

<para>การให้แรงจูงใจก็ยังเป็นสิ่งที่ฉลาด
แต่จะต้องไม่มีอะไรพ่วงท้ายอันจะทำให้มันไม่ได้ผล มีความแตกต่างอย่างมาก
(Ryan ตั้งข้อสังเกต) ระหว่างการพูดว่า ``ผมให้รางวัลนี้แก่คุณ
เพราะผมเห็นคุณค่าในงานของคุณ'' กับ ``คุณได้รับรางวัลนี้
เพราะคุณสามารถทำได้ตามมาตรฐานที่ตั้งไว้'' อย่างแรกนั้นไม่ทำลายแรงกระตุ้น
แต่อย่างหลังนั้นทำลายแน่นอน</para>

<para>In these psychological observations we can ground a case that an
open-source development group will be substantially more productive
(especially over the long term, in which creativity becomes more
critical as a productivity multiplier) than an equivalently sized and
skilled group of closed-source programmers (de)motivated by scarcity
rewards.</para>

<para>ด้วยการสังเกตการณ์ทางจิตวิทยาเหล่านี้
เราสามารถระบุกรณีที่กลุ่มพัฒนาโอเพนซอร์สจะมีผลิตผลมากกว่า (โดยเฉพาะในระยะยาว
ซึ่งความคิดสร้างสรรค์จะมีความสำคัญมากขึ้นๆ ในฐานะปัจจัยเพิ่มผลิตผล)
กลุ่มโปรแกรมเมอร์ซอร์สปิดที่มีขนาดและความเชี่ยวชาญเท่าๆ กัน ที่ได้รับ
(การบั่นทอน) แรงกระตุ้นจากรางวัลภายใต้ข้อสมมุติของความขาดแคลน</para>

<para>This suggests from a slightly different angle one of the
speculations in <citetitle>The Cathedral And The Bazaar</citetitle>;
that, ultimately, the industrial/factory mode of software production
was doomed to be outcompeted from the moment capitalism began to
create enough of a wealth surplus that many programmers could live in
a post-scarcity gift culture.</para>

<para>ข้อสังเกตนี้มองจากมุมมองที่ต่างกันเล็กน้อยจากการคาดเดาใน 
<citetitle>The Cathedral And The Bazaar</citetitle> ชี้ว่า ในที่สุดแล้ว
วิธีการสร้างซอฟต์แวร์แบบโรงงานอุตสาหกรรมนั้น ถูกกำหนดไว้แล้วให้พ่ายแพ้
โดยเริ่มตั้งแต่จุดที่ทุนนิยมเริ่มสร้างความมั่งคั่งมากพอที่โปรแกรมเมอร์จะสามารถอยู่ได้ในวัฒนธรรมการให้ในยุคหลังความขาดแคลน</para>

<para>Indeed, it seems the prescription for highest software
productivity is almost a Zen paradox; if you want the most efficient
production, you must give up trying to <emphasis>make</emphasis>
programmers produce.  Handle their subsistence, give them their heads,
and forget about deadlines.  To a conventional manager this sounds
crazily indulgent and doomed&mdash;but it is <emphasis>exactly</emphasis>
the recipe with which the open-source culture is now clobbering its
competition.</para>

<para>อันที่จริงแล้ว ดูเหมือนว่าสูตรแห่งผลิตภาพสูงสุดของการสร้างซอฟต์แวร์นี้
แทบจะเป็นปริศนาเซ็นทีเดียว ถ้าคุณต้องการจะทำการผลิตอย่างมีประสิทธิภาพสูงสุด
คุณต้องเลิกพยายามที่จะ <emphasis>ทำ</emphasis> ให้โปรแกรมเมอร์ทำการผลิต
จัดการกับความพออยู่พอกินของพวกเขา ให้พวกเขาได้ใช้สมองเต็มที่
แล้วก็ลืมเรื่องเส้นตายไปเสีย สำหรับผู้จัดการปกติ
เรื่องนี้ดูจะเป็นความเคยตัวที่บ้าบอ และจะต้องล่มจมในที่สุด แต่ก็
<emphasis>เป็น</emphasis>
สูตรที่วัฒนธรรมโอเพนซอร์สกำลังใช้เพื่อเอาชนะการแข่งขันอยู่ทุกวันนี้</para>

</sect1>
<!-- Conclusion: From Custom to Customary Law -->
<sect1><title>ข้อสรุป: จากจารีตประเพณีสู่กฎจารีต</title>

<para>We have examined the customs which regulate the ownership and control
of open-source software.  We have seen how they imply an underlying
theory of property rights homologous to the Lockean theory of land
tenure.  We have related that to an analysis of the hacker culture
as a `gift culture' in which participants compete for prestige
by giving time, energy, and creativity away.  We have examined the
implications of this analysis for conflict resolution in the culture.</para>

<para>เราได้ตรวจสอบจารีตประเพณีต่างๆ
ที่คอยกำหนดกฎเกณฑ์การถือครองและการควบคุมโครงการซอฟต์แวร์โอเพนซอร์สมาแล้ว
เราได้เห็นว่าจารีตประเพณีเหล่านี้แฝงนัยของทฤษฎีทรัพย์สินเบื้องหลังที่คล้ายกับทฤษฎีของล็อคว่าด้วยกรรมสิทธิ์ที่ดิน
เราได้เชื่อมโยงเรื่องนี้ไปสู่การวิเคราะห์วัฒนธรรมแฮ็กเกอร์ว่าเป็น
`วัฒนธรรมการให้' ที่ผู้เข้าร่วมจะแข่งขันเพื่อเกียรติยศ ด้วยการอุทิศเวลา
แรงกายแรงใจ และความคิดสร้างสรรค์ให้
เราได้ตรวจสอบนัยของการวิเคราะห์นี้ต่อการยุติข้อขัดแย้งในวัฒนธรรมด้วย</para>

<para>The next logical question to ask is "Why does this matter?"  Hackers
developed these customs without conscious analysis and (up to now)
have followed them without conscious analysis.  It's not immediately
clear that conscious analysis has gained us anything practical&mdash;unless,
perhaps, we can move from description to prescription and deduce ways
to improve the functioning of these customs.</para>

<para>คำถามที่ตามมาก็คือ "ทำไมเรื่องนี้จึงสำคัญ?"
แฮ็กเกอร์ได้พัฒนาจารีตประเพณีเหล่านี้โดยปราศจากการวิเคราะห์โดยเจตนา
และ (จวบจนปัจจุบัน) ได้ประพฤติตามโดยปราศจากการวิเคราะห์โดยเจตนาเช่นกัน
จึงยังไม่เป็นที่กระจ่างทันทีทันใดว่าการวิเคราะห์โดยเจตนาได้ให้ประโยชน์อะไรในทางปฏิบัติ
นอกจากเราจะสามารถเคลื่อนจากการสาธยายมาเป็นบทบัญญัติ
และสรุปหนทางที่จะเพิ่มบทบาทหน้าที่ของจารีตประเพณีเหล่านี้</para>

<para>We have found a close logical analogy for hacker customs in the theory
of land tenure under the Anglo-American common-law tradition.
Historically <link linkend="miller">[Miller]</link>, the European tribal
cultures that invented this tradition improved their
dispute-resolution systems by moving from a system of unarticulated,
semi-conscious custom to a body of explicit customary law memorized by
tribal wisemen&mdash;and eventually, written down.</para>

<para>เราได้เห็นอุปมาอุปมัยที่ใกล้เคียงของจารีตประเพณีของแฮ็กเกอร์ในทฤษฎีกรรมสิทธิ์ที่ดิน
ภายใต้ธรรมเนียมกฎหมายจารีตประเพณีของแองโกล-อเมริกันมาแล้ว ตามประวัติศาสตร์แล้ว
<link linkend="miller">[Miller]</link>
วัฒนธรรมชนเผ่าของชาวยุโรปที่ได้สร้างธรรมเนียมนี้ขึ้นมา
ได้พัฒนาระบบตัดสินข้อพิพาทต่อไปอีก
ด้วยการเคลื่อนจากระบบของจารีตประเพณีที่ไม่มีการบอกกล่าว ไม่บังคับโดยเจตนา
มาเป็นกฎจารีตที่ชัดเจนที่ท่องจำโดยนักปราชญ์ของชนเผ่า
และจดบันทึกเป็นลายลักษณ์อักษรในที่สุด</para>

<para>Perhaps, as our population rises and acculturation of all new members
becomes more difficult, it is time for the hacker culture to do
something analogous&mdash;to develop written codes of good practice for
resolving the various sorts of disputes that can arise in connection
with open-source projects, and a tradition of arbitration in which
senior members of the community may be asked to mediate disputes.</para>

<para>จากการที่ประชากรของวัฒนธรรมเราเพิ่มมากขึ้น
และการถ่ายทอดวัฒนธรรมให้กับสมาชิกใหม่ก็ยากขึ้น บางทีอาจถึงเวลาแล้ว
ที่วัฒนธรรมแฮ็กเกอร์จะทำสิ่งที่คล้ายกัน
คือการร่างบทบัญญัติของวิธีปฏิบัติที่ดี สำหรับการติดสินข้อพิพาทชนิดต่างๆ 
ที่อาจมีขึ้นโดยเกี่ยวข้องกับโครงการโอเพนซอร์ส และประเพณีของการไกล่เกลี่ย
ซึ่งสมาชิกอาวุโสของชุมชนอาจถูกขอร้องให้เป็นคนกลางไกล่เกลี่ยข้อพิพาท</para>

<para>The analysis in this essay suggests the outlines of what such a code
might look like, making explicit that which was previously implicit.
No such codes could be imposed from above; they would have to be
voluntarily adopted by the founders or owners of individual projects.
Nor could they be completely rigid, as the pressures on the culture
are likely to change over time.  Finally, for enforcement of such
codes to work, they would have to reflect a broad consensus of the
hacker tribe.</para>

<para>การวิเคราะห์ในบทความนี้ได้แนะแนวทางต่อเค้าโครงของบทบัญญัติดังกล่าว
และได้ตีแผ่สิ่งที่เคยแฝงตัวอยู่ให้ปรากฏชัดเจน เราไม่สามารถจะเขียนบทบัญญัติใดๆ
จากการวิเคราะห์ที่ผ่านมา
แต่จะต้องอาศัยความสมัครใจของผู้ก่อตั้งหรือเจ้าของโครงการต่างๆ
ที่จะนำไปใช้เอง และทั้งหมดก็ไม่ใช่เป็นกฎตายตัว
เพราะแรงกดดันต่อวัฒนธรรมก็มีแนวโน้มจะเปลี่ยนไปตามกาลเวลา
และท้ายที่สุด เพื่อที่จะให้การบังคับใช้ของบทบัญญัติดังกล่าวมีผล
ก็จำเป็นต้องสะท้อนประชามติในวงกว้างของชนเผ่าแฮ็กเกอร์ด้วย</para>

<!-- %%BEGIN STANDALONE%% -->
<para>I have begun work on such a code, tentatively titled the "Malvern
Protocol" after the little town where I live.  If the general analysis
in this paper becomes sufficiently widely accepted, I will make the Malvern
Protocol publicly available as a model code for dispute resolution.
Parties interested in critiquing and developing this code, or just
offering feedback on whether they think it's a good idea or not, are
invited to <ulink url="mailto:esr@thyrsus.com">contact me by
email</ulink>.</para>
<para>ผู้เขียนได้เริ่มร่างบทบัญญัติดังกลาวแล้ว โดยอาจจะใช้ชื่อว่า
"ระเบียบพิธีมาลเวิร์น" (Malvern Protocol) ตามชื่อเมืองเล็กๆ ที่ผู้เขียนอาศัยอยู่
ถ้าการวิเคราะห์ทั่วไปในบทความนี้ได้รับการยอมรับมากพอ
ผู้เขียนอาจปล่อยระเบียบวิธีมาลเวิร์นสู่สาธารณะ
เพื่อเป็นบทบัญญัติตุ๊กตาสำหรับการตัดสินข้อพิพาท
ผู้ที่สนใจที่จะวิจารณ์และร่วมปรับปรุงบทบัญญัตินี้
หรือเพียงให้ข้อเสนอแนะว่าควรทำหรือไม่ ก็ขอเชิญ
<ulink url="mailto:esr@thyrsus.com">ติดต่อผู้เขียนทางอี-เมล</ulink> ได้</para>
<!-- %%END STANDALONE%% -->

</sect1>
<!-- Questions for Further Research -->
<sect1><title>คำถามเพื่อการค้นคว้าเพิ่มเติม</title>

<para>The culture's (and my own) understanding of large projects that don't
follow a benevolent-dictator model is weak.  Most such projects fail.
A few become spectacularly successful and important (Perl, Apache,
KDE).  Nobody really understands where the difference lies.  There's
a vague sense abroad that each such project is <emphasis>sui generis</emphasis>
and stands or falls on the group dynamic of its particular members,
but is this true or are there replicable strategies that a group can
follow?</para>

<para>ความเข้าใจของตัววัฒนธรรม (และของผู้เขียนเอง)
เกี่ยวกับโครงการขนาดใหญ่ที่ไม่ได้ใช้การจัดการแบบเผด็จการใจดี ยังไม่ค่อยชัดเจนนัก
โครงการส่วนใหญ่จะล้มเหลว แต่ก็มีโครงการจำนวนหนึ่งประสบความสำเร็จอย่างงดงาม
และกลายเป็นโครงการที่สำคัญ (Perl, Apache, KDE) ยังไม่มีใครเข้าใจอย่างแท้จริง
ว่าความแตกต่างอยู่ที่ไหน มีเพียงความรู้สึกเลือนๆ โดยทั่วไปว่า
โครงการเหล่านี้ต่าง <emphasis>มีเอกลักษณ์เฉพาะตัว</emphasis>
ซึ่งจะตั้งอยู่หรือล้มไปก็แล้วแต่ความเปลี่ยนแปลงในกลุ่มของสมาชิกแต่ละคน
แต่เรื่องนี้เป็นความจริงหรือ?
หรือว่ายังมีกุศโลบายแบบอย่างที่กลุ่มอื่นสามารถดำเนินตามได้อีก?</para>

</sect1>

<!-- %%BEGIN ENDNOTES -->
<!-- Notes -->
<sect1><title>เชิงอรรถ</title>

<para><anchor id="_N"/><emphasis>[N]</emphasis> The term `noosphere' is
an obscure term of art in philosophy.  It is pronounced KNOW-uh-sfeer
(two o-sounds, one long and stressed, one short and unstressed tending
towards schwa). If one is being excruciatingly correct about one's
orthography, the term is properly spelled with a diaeresis over the
second `o' to mark it as a separate vowel.</para>

<para><anchor id="N"/><emphasis>[N]</emphasis> คำว่า `noosphere'
เป็นศัพท์ชั้นสูงของศิลปวิทยาการในสาขาปรัชญา คำนี้ออกเสียงว่า โน-โอ-สเฟียร์
(เสียงโอสองพยางค์ พยางค์แรกยาวและเน้น พยางค์ที่สองสั้นและไม่เน้น คล้ายเสียง
schwa) ถ้าคุณเคร่งครัดเรื่องการเขียนมากๆ คำนี้ก็อาจจะสะกดโดยใช้ diaresis
บน `o' ตัวที่สอง เพื่อกำกับการแยกพยางค์</para>

<para>In more detail; this term for ``the sphere of human thought''
derives from the Greek `noos' meaning `mind', `intelligence', or `perception'.
It was invented by E. LeRoy in <emphasis>Les origines humaines et
l'evolution de l'intelligence</emphasis> (Paris 1928).  It was
popularized first by the Russian biologist and pioneering ecologist
Vladimir Ivanovich Vernadsky, (1863&ndash;1945), then by the Jesuit
paleontologist/philosopher Pierre Teilhard de Chardin
(1881&ndash;1955).  It is with Teilhard de Chardin's theory of future human
evolution to a form of pure mind culminating in union with the Godhead
that the term is now primarily associated.</para>

<para>ในรายละเอียดแล้ว คำซึ่งแทน ``โลกแห่งความคิดของมนุษย์'' คำนี้
มาจากรากศัพท์กรีก `noos' ซึ่งหมายถึง `ความคิด' (mind), `ความฉลาด'
(intelligence), หรือ `โลกทัศน์' (perception) คิดขึ้นโดย E. LeRoy ใน
<emphasis>Les origines humaines et l'evolution de l'intelligence</emphasis>
(Paris 1928)
และเผยแพร่ให้เป็นที่รู้จักโดยนักชีววิทยาและนักนิเวศวิทยารุ่นบุกเบิกชาวรัสเซีย
ชื่อ Vladimir Ivanovich Vernadsky, (1863&ndash;1945)
และจากนั้นก็โดยนักบรรพชีวินวิทยาและนักปรัชญาเยซูอิด ชื่อ Pierre Teilhard de
Chardin (1881&ndash;1955) ซึ่งก็ด้วยทฤษฎีของ Teilhard de Chardin 
เกี่ยวกับวิวัฒนาการในอนาคตของมนุษย์ไปสู่รูปแบบของการพัฒนาทางจิตใจขั้นสุดยอดร่วมกับพระผู้เป็นเจ้านี่เอง
ที่ทำให้ศัพท์คำนี้มีความเชื่อมโยงอย่างมากในปัจจุบัน</para>

<para><anchor id="_DF"/><emphasis>[DF]</emphasis>
David Friedman, one of the most lucid and accessible thinkers in
contemporary economics, has written an excellent 
<ulink url="http://www.best.com/~ddfr/Academic/Course_Pages/L_and_E_LS_98/Why_Is_Law/Why_Is_Law_Chapter_11.html">outline</ulink>
of the
history and logic of intellectual-property law.  I recommend it as a
starting point to anyone interested in these issues.</para>

<para><anchor id="DF"/><emphasis>[DF]</emphasis>
David Friedman นักคิดที่แจ่มชัดและเข้าใจง่ายที่สุดคนหนึ่งในแวดวงเศรษฐศาสตร์ปัจจุบัน
ได้เขียน
<ulink url="http://www.best.com/~ddfr/Academic/Course_Pages/L_and_E_LS_98/Why_Is_Law/Why_Is_Law_Chapter_11.html">เค้าโครง</ulink>
อันยอดเยี่ยมของประวัติศาสตร์และตรรกะของกฎหมายทรัพย์สินทางปัญญา
ผู้เขียนขอแนะนำบทความนี้ สำหรับเป็นจุดเริ่มต้นของผู้ที่สนใจในหัวข้อดังกล่าว
</para>

<para><anchor id="_BSD"/><emphasis>[BSD]</emphasis>
One interesting difference between the Linux and BSD worlds is that
the Linux kernel (and associated OS core utilities) have never forked,
but BSD's has, at least three times.  What makes this interesting is
that the social structure of the BSD groups is centralized in a way
intended to define clear lines of authority and to prevent forking, while
the decentralized and amorphous Linux community takes no such
measures.  It appears that the projects which open up development
the most actually have the <emphasis>least</emphasis> tendency to fork!</para>

<para><anchor id="BSD"/><emphasis>[BSD]</emphasis>
ความแตกต่างหนึ่งที่น่าสนใจระหว่างโลกของลินุกซ์และ BSD ก็คือ เคอร์เนลลินุกซ์
(และโปรแกรมอรรถประโยชน์ข้างเคียง) ไม่เคยมีการฟอร์ก แต่ BSD
นั้นฟอร์กมาแล้วอย่างน้อยสามครั้ง สิ่งที่ทำให้ความแตกต่างนี้น่าสนใจก็คือว่า
โครงสร้างทางสังคมของกลุ่ม BSD ทั้งหลายนั้น
รวมศูนย์โดยมีเจตนาที่จะกำหนดสายอำนาจหน้าที่ที่ชัดเจน และเพื่อป้องกันการฟอร์ก
ในขณะที่ชุมชนลินุกซ์ซึ่งกระจายอำนาจและรวมกันแบบหลวมๆ นั้น
ไม่มีมาตรการเหล่านั้นเลย กลายเป็นว่า โครงการที่เปิดกว้างด้านการพัฒนาที่สุด
ในความเป็นจริงกลับมีแนวโน้ม <emphasis>น้อยที่สุด</emphasis>
ที่จะเกิดการฟอร์ก!</para>

<para>Henry Spencer <email>henry@spsystems.net</email> suggests that, in general, the
stability of a political system is inversely proportional to the
height of the entry barriers to its political process.  His analysis
is worth quoting here:</para>

<para>Henry Spencer <email>henry@spsystems.net</email> ชี้แนะว่า โดยทั่วไปแล้ว
เสถียรภาพของระบบการเมืองจะแปรผกผันกับความสูงของกำแพงที่ขวางกั้นกระบวนการทางการเมือง
การวิเคราะห์ของเขาสมควรจะนำมากล่าวอ้างในที่นี้:</para>

<blockquote>
<para>One major strength of a relatively open democracy is that most potential 
revolutionaries find it easier to make progress toward their objectives by
working via the system rather by attacking it.  This strength is easily
undermined if established parties act together to `raise the bar', making
it more difficult for small dissatisfied groups to see <emphasis>some</emphasis> progress
made toward their goals.</para>

<para>จุดแข็งที่สำคัญจุดหนึ่งของประชาธิปไตยที่เปิดก็คือ กลุ่มต่างๆ
ที่มีแนวโน้มที่จะปฏิวัติ จะพบว่าการดำเนินการเพื่อบรรลุจุดประสงค์โดยผ่านระบบนั้น
ง่ายกว่าการโจมตีระบบ จุดแข็งนี้จะถูกทำลายลงอย่างง่ายดาย
ถ้ามีกลุ่มบุคคลตั้งตัวกระทำการร่วมกันที่จะ `ก่อกำแพง' และทำให้กลุ่มเล็กๆ
บางกลุ่มมองเห็นความคืบหน้า <emphasis>บางอย่าง</emphasis>
ที่นำไปสู่เป้าหมายของพวกเขาได้ยากยิ่งขึ้น</para>

<para>(A similar principle can be found in economics.  Open markets have the
strongest competition, and generally the best and cheapest products.
Because of this, it's very much in the best interests of established
companies to make market entry more difficult&mdash;for example, by
convincing governments to require elaborate RFI testing on computers, or  
by creating `consensus' standards which are so complex that they cannot be
implemented effectively from scratch without large resources.  The markets
with the strongest entry barriers are the ones that come under the
strongest attack from revolutionaries, e.g. the Internet and the Justice
Dept. vs. the Bell System.)</para>

<para>(หลักการที่คล้ายกันนี้ พบได้ในเศรษฐศาสตร์เช่นกัน
ตลาดเปิดจะมีการแข่งขันที่เข้มข้นที่สุด
และโดยทั่วไปจะทำให้ได้สินค้าที่ดีและถูกที่สุดด้วย ด้วยเหตุนี้
จึงเป็นความสนใจหลักของบริษัทที่ปักหลักได้แล้ว
ที่จะพยายามทำให้การเข้าสู่ตลาดทำได้ยากยิ่งขึ้น เช่น
ด้วยการโน้มน้าวรัฐบาลให้กำหนดการทดสอบ RFI กับคอมพิวเตอร์
หรือด้วยการสร้างมาตรฐาน `ประชามติ' ที่ยุ่งยากซับซ้อน
จนไม่สามารถทำให้เป็นจริงจากการเริ่มต้นใหม่ได้โดยปราศจากทรัพยากรมหาศาล
ตลาดที่มีกำแพงขวางกั้นการเข้าสู่ตลาดที่แข็งที่สุด
ก็จะต้องเผชิญกับการโจมตีที่รุนแรงที่สุดจากการปฏิวัติเช่นกัน ตัวอย่างเช่น
กรณีอินเทอร์เน็ตและกระทรวงยุติธรรม กับ Bell System เป็นต้น)</para>

<para>An open process with low entry barriers encourages participation rather
than secession, because one can get results without the high overheads of
secession.  The results may not be as impressive as what could be achieved
by seceding, but they come at a lower price, and most people will consider
that an acceptable tradeoff.  (When the Spanish government revoked
Franco's anti-Basque laws and offered the Basque provinces their own
schools and limited local autonomy, most of the Basque Separatist movement
evaporated almost overnight.  Only the hard-core Marxists insisted that it
wasn't good enough.)</para>

<para>กระบวนการเปิดที่มีกำแพงขวางกั้นการเข้าร่วมที่ต่ำ
จะเชื้อเชิญให้ผู้คนเข้าร่วมมากกว่าแยกตัว
เพราะสามารถได้ผลลัพธ์โดยไม่ต้องสิ้นเปลืองกับการแยกตัว
ผลลัพธ์ที่ได้อาจไม่ประทับใจเท่ากับที่ได้จากการแยกตัว
แต่ก็ได้มาด้วยต้นทุนที่ต่ำกว่า
และคนส่วนใหญ่ก็จะถือว่านั่นเป็นการแลกเปลี่ยนที่ยอมรับได้
(เมื่อรัฐบาลสเปนยกเลิกกฎหมายต่อต้านชาวบาสก์ของนายพลฟรังโก
และสร้างโรงเรียนให้จังหวัดต่างๆ ของชาวบาสก์
พร้อมทั้งให้มีการปกครองส่วนท้องถิ่นเป็นเอกเทศ ปรากฏว่า
ความเคลื่อนไหวแบ่งแยกดินแดนของชาวบาสก์อันตรธานไปสิ้นแทบจะในชั่วข้ามคืน
มีเพียงพวกมาร์กซิสต์หัวรุนแรงเท่านั้นที่ยังยืนยันว่านั่นยังไม่เพียงพอ)</para>
</blockquote>

<para><anchor id="_rp"/><emphasis>[RP]</emphasis>
There are some subtleties about rogue patches.  One can divide them
into `friendly' and `unfriendly' types.  A `friendly' patch is
designed to be merged back into the project's main-line sources under
the maintainer's control (whether or not that merge actually happens); an
`unfriendly' one is intended to yank the project in a direction the
maintainer doesn't approve.  Some projects (notably the Linux kernel
itself) are pretty relaxed about friendly patches and even encourage
independent distribution of them as part of their beta-test phase.
An unfriendly patch, on the other hand, represents a decision to
compete with the original and is a serious matter.  Maintaining a whole
raft of unfriendly patches tends to lead to forking.</para>

<para><anchor id="rp"/><emphasis>[RP]</emphasis>
มีรายละเอียดปลีกย่อยนิดหน่อยเกี่ยวกับแพตช์เถื่อน
เราอาจแบ่งประเภทแพตช์เถื่อนออกเป็นแบบที่ `เป็นมิตร' และแบบที่ `ไม่เป็นมิตร'
แพตช์ที่ `เป็นมิตร' นั้น มุ่งหมายที่จะรวมกลับเข้าไปในซอร์สสายหลักของโครงการ
ภายใต้การควบคุมของผู้ดูแล (ไม่ว่าการรวมนั้นจะเกิดขึ้นหรือไม่ก็ตาม) ส่วนแพตช์ที่
`ไม่เป็นมิตร' นั้น มุ่งที่จะดึงเอาโครงการไปในทิศทางที่ผู้ดูแลไม่เห็นด้วย
บางโครงการ (โดยเฉพาะเคอร์เนลลินุกซ์เอง)
ค่อนข้างจะปล่อยตามสบายกับแพตช์ที่เป็นมิตร
หรือกระทั่งเชื้อเชิญให้แจกจ่ายแยกต่างหาก
โดยถือเป็นส่วนหนึ่งของขั้นตอนการทดสอบแพตช์ ในทางกลับกัน
แพตช์ที่ไม่เป็นมิตรเป็นการแสดงถึงการตัดสินใจที่จะแข่งกับฉบับดั้งเดิม
และถือเป็นเรื่องที่ร้ายแรง การดูแลแพตช์ที่ไม่เป็นมิตรทั้งกระบุง
มีแนวโน้มที่จะนำไปสู่การฟอร์กได้</para>

<para><anchor id="_lw"/><emphasis>[LW]</emphasis>
I am indebted to Michael Funk <email>mwfunk@uncc.campus.mci.net</email> for
pointing out how instructive a contrast with hackers the pirate
culture is. Linus Walleij has posted an analysis of their cultural
dynamics that differs from mine (describing them as a scarcity
culture) in <ulink url="http://www.df.lth.se/~triad/papers/Raymond_D00dz.html">A Comment on `Warez D00dz' Culture</ulink>.</para>

<para><anchor id="lw"/><emphasis>[LW]</emphasis>
ผู้เขียนเป็นหนี้ต่อ Michael Funk <email>mwfunk@uncc.campus.mci.net</email>
ที่ชี้ให้เห็นว่า ความตรงข้ามกันระหว่างวัฒนธรรมแฮกเกอร์กับจารชนนั้น
ช่วยให้คำอธิบายที่ดีอย่างไร Linus Walleij
ได้โพสต์การวิเคราะห์พลวัตของวัฒนธรรมของพวกเขา ซึ่งต่างจากที่ผู้เขียนวิเคราะห์
(ที่บรรยายวัฒนธรรมนั้นว่าเป็นวัฒนธรรมบนพื้นฐานของความขาดแคลน) ไว้ในบทความ
<ulink url="http://www.df.lth.se/~triad/papers/Raymond_D00dz.html">A Comment
on `Warez D00dz' Culture</ulink></para>

<para>The contrast may not last.  Former cracker Andrej Brandt
<email>andy@pilgrim.cs.net.pl</email> reports that he believes the
cracker/warez d00dz culture is now withering away, with its brightest
people and leaders assimilating to the open-source world.  Independent
evidence for this view may be provided by a precedent-breaking July
1999 action of the cracker group calling itself `Cult of the Dead Cow'.
They have released their `Back Orifice 2000' for breaking Microsoft
Windows security tools under the GPL.</para>

<para>ความต่างนี้อาจกำลังหมดไป Andrej Brandt
<email>andy@pilgrim.cs.net.pl</email> อดีตนักเจาะระบบรายงานว่า
เขาเชื่อว่าวัฒนธรรมนักเจาะระบบ หรือ warez d00dz กำลังเหี่ยวแห้งตายไป
เมื่อคนเก่งๆ และนักเจาะชั้นนำได้ค่อยๆ ย้ายมาสู่โลกโอเพนซอร์ส
อีกหลักฐานหนึ่งเกี่ยวกับเรื่องนี้ก็คือ ปฏิบัติการ กรกฎาคม 1999
ซึ่งทำลายแบบอย่างเดิมๆ ทิ้ง โดยกลุ่มที่เรียกตัวเองว่า `Cult of the Dead Cow'
พวกเขาได้ปล่อย `Back Orifice 2000' ที่ใช้ทำลายระบบความปลอดภัยของวินโดวส์
ภายใต้สัญญาอนุญาต GPL</para>

<para><anchor id="_HT"/><emphasis>[HT]</emphasis> 
In evolutionary terms, the craftsman's urge itself may (like
internalized ethics) be a result of the high risk and cost of
deception.  Evolutionary psychologists have collected experimental
evidence <link linkend="BCT">[BCT]</link> that human beings have brain logic
specialized for detecting social deceptions, and it is fairly easy to
see why our ancestors should have been selected for ability to detect
cheating.  Therefore, if one wishes to have a reputation for
personality traits that confer advantage but are risky or costly, it
may actually be better tactics to actually have these traits than to
fake them.  (``Honesty is the best policy'')</para>

<para><anchor id="HT"/><emphasis>[HT]</emphasis> 
ในแง่ของวิวัฒนาการแล้ว แรงผลักดันของช่างฝีมือเอง
(อย่างเดียวกับการเกิดคุณธรรมภายใน) อาจจะเป็นผลมาจากการที่การหลอกลวงนั้น
มีความเสี่ยงสูงและสิ้นเปลือง
นักจิตวิทยาเชิงวิวัฒนาการได้รวมรวมหลักฐานจากการทดลอง
<link linkend="BCT">[BCT]</link>
ว่ามนุษย์มีตรรกะของสมองที่สร้างมาเฉพาะเพื่อตรวจจับการหลอกลวงในสังคม
และก็เข้าใจได้ไม่ยากเลย
ว่าทำไมบรรพบุรุษของเราจึงควรถูกเลือกไว้เพราะความสามารถในการตรวจจับการโกงนี้
ดังนั้น ถ้าใครอยากจะมีชื่อเสียงในด้านบุคลิกลักษณะที่นำมาซึ่งข้อได้เปรียบ
แต่มีความเสี่ยงและต้นทุนสูง
ก็เป็นการดีกว่าถ้าจะเลือกแนวทางของการมีความสามารถนั้นๆ จริงๆ
แทนที่จะมีแบบปลอมๆ (``ความซื่อสัตย์คือกุศโลบายที่ดีที่สุด'')</para>

<para>Evolutionary psychologists have suggested that this explains behavior
like barroom fights.  Among younger adult male humans, having a
reputation for toughness is both socially and (even in today's
feminist-influenced climate) sexually useful.  Faking toughness,
however, is extremely risky; the negative result of being found out
leaves one in a worse position than never having claimed the trait.
The cost of deception is so high that it is sometimes better
minimaxing to internalize toughness and risk serious injury in a
fight to prove it.  Parallel observations have been made about less
controversial traits like honesty.</para>

<para>นักจิตวิทยาเชิงวิวัฒนาการได้ชี้แนะว่า
หลักการนี้อธิบายพฤติกรรมเหมือนการต่อสู้ในบาร์ ในหมู่มนุษย์ผู้ชายที่โตเต็มวัยนั้น
การมีชื่อเสียงในความแข็งแรงมีประโยชน์ทั้งในทางสังคมและทางเพศ
(แม้ในบรรยากาศที่เต็มไปด้วยอิทธิพลของนักสิทธิสตรีอย่างทุกวันนี้)
อย่างไรก็ดี ความแข็งแรงที่จอมปลอมกลับเป็นความเสี่ยงอย่างมาก
ผลทางลบของการถูกเปิดโปงจะทำให้คนคนนั้นอยู่ในฐานะที่แย่ยิ่งกว่าการไม่เคยกล่าวอ้างอะไรเลย
ต้นทุนของการหลอกลวงนั้นสูงเสียจนบางทีการปรับให้เป็นการสร้างความแข็งแรงภายใน
แล้วเสี่ยงรับความบาดเจ็บสาหัสในการต่อสู้เพื่อพิสูจน์ให้เห็นเลยยังจะดีเสียกว่า
มีการการสังเกตที่คล้ายกันนี้ต่อเรื่องที่เป็นที่กังขาน้อยกว่าอย่างความซื่อสัตย์ด้วย</para>

<para>Though the primary meditation-like rewards of creative work should not
be underestimated, the craftsman's urge is probably at least in part
just such an internalization (where the base trait is `capacity for
painstaking work' or something similar).</para>

<para>แม้ไม่ควรดูถูกรางวัลในลักษณะที่คล้ายการฝึกสมาธิของงานสร้างสรรค์
แต่ความปรารถนาของช่างฝีมืออย่างน้อยก็อาจมีลักษณะบางส่วนคล้ายกับการสร้างความแข็งแรงภายในดังกล่าว
(โดยที่ลักษณะที่เป็นพื้นฐานก็คือ `ความอดทนต่องานยากลำบาก'
หรืออะไรที่คล้ายกัน)</para>

<para>Handicap theory may also be relevant.  The peacock's gaudy tail
and the stag's massive rack of antlers are sexy to females because
they send a message about the health of the male (and, consequently,
its fitness to sire healthy offspring).  They say: "I am so vigorous
that I can afford to waste a lot of energy on this extravagant
display." Giving away source code, like owning a sports car, is very
similar to such showy, wasteful finery - it's expense without obvious
return, and makes the giver at least theoretically very sexy.</para>

<para>ทฤษฎีการต่อแต้มก็อาจมีความเกี่ยวข้องด้วย หางอันฉูดฉาดของนกยูง
และกิ่งก้านจำนวนมากของเขากวางตัวผู้นั้น แลดูเซ็กซี่ในสายตาของตัวเมีย
เพราะมันสื่อสารออกมาถึงสุขภาพที่ดีของตัวผู้
(ซึ่งหมายถึงความเหมาะสมที่จะเป็นพ่อพันธุ์ของลูกๆ ที่แข็งแรงด้วย)
สิ่งที่มันพูดก็คือ:
"ฉันแข็งแรงมากเสียจนสามารถจะเสียพลังงานไปมากมายสำหรับการโชว์อันฟุ่มเฟือยนี้"
การให้ซอร์สโค้ดออกไปมากมาย ก็เหมือนกับการมีรถสปอร์ตสักคัน
คือคล้ายกับอาภรณ์อันโอ่อ่าฟู่ฟ่าเหล่านั้น มันเป็นการให้ที่ไร้ผลตอบแทนที่ชัดเจน
และอย่างน้อยก็ทำให้ผู้ให้ดูเซ็กซี่มากๆ ในทางทฤษฎี</para>

<para><anchor id="_MH"/><emphasis>[MH]</emphasis> A concise summary of
Maslow's hierarchy and related theories is available on the Web at
<ulink
url="http://www.valdosta.peachnet.edu/~whuitt/psy702/regsys/maslow.html">Maslow's
Hierarchy of Needs</ulink></para>

<para><anchor id="MH"/><emphasis>[MH]</emphasis>
มีการสรุปที่กระชับเกี่ยวกับลำดับชั้นของมาสโลว์และทฤษฎีที่เกี่ยวข้องบนเว็บที่
<ulink
url="http://www.valdosta.peachnet.edu/~whuitt/psy702/regsys/maslow.html">Maslow's
Hierarchy of Needs</ulink></para>

<para><anchor id="_dc"/><emphasis>[DC]</emphasis> However, demanding
humility from leaders may be a more general characteristic of gift or
abundance cultures.  David Christie <email>dc@netscape.com</email> reports on
a trip through the outer islands of Fiji:</para>

<para><anchor id="dc"/><emphasis>[DC]</emphasis> อย่างไรก็ดี
ความต้องการความอ่อนน้อมถ่อมตนของผู้นำ
อาจเป็นลักษณะของวัฒนธรรมการให้หรือวัฒนธรรมเหลือเฟือที่มีโดยทั่วไปมากกว่านั้น
David Christie <email>dc@netscape.com</email>
รายงานการเดินทางไปยังเกาะรอบนอกของฟิจิไว้ว่า:</para>

<blockquote>
<para>In Fijian village chiefs, we observed the same sort of
self-deprecating, low-key leadership style that you attribute to open
source project leaders. [...] Though accorded great respect and of
course all of whatever actual power there is in Fiji, the chiefs we
met demonstrated genuine humility and often a saint-like acceptance of
their duty.  This is particularly interesting given that being chief
is a hereditary role, not an elected position or a popularity contest.
Somehow they are trained to it by the culture itself, although they
are born to it, not chosen by their peers.''  He goes on to emphasize
that he believes the characteristic style of Fijian chiefs springs
from the difficulty of compelling cooperation: a chief has ``no big
carrot or big stick''.</para>

<para>``ในตัวหัวหน้าหมู่บ้านทั้งหลายในฟิจินั้น
เราสังเกตได้ถึงสไตล์ความเป็นผู้นำที่ลดตัวลงต่ำ
ชนิดเดียวกับที่คุณบรรยายผู้นำโครงการโอเพนซอร์ส [...]
แม้จะได้รับความเคารพอย่างมาก และแน่นอนว่าย่อมมีอำนาจแท้จริงทุกอย่างที่มีในฟิจิ
แต่พวกหัวหน้าที่เราได้พบต่างแสดงความอ่อนน้อมอย่างจริงใจ
และมักจะยอมรับในภาระหน้าที่ของตนราวกับนักบุญ เรื่องนี้ยิ่งน่าสนใจเข้าไปอีก
เมื่อการเป็นหัวหน้าเป็นบทบาทที่สืบทอดโดยสายเลือด ไม่ได้มาจากการเลือกตั้ง
หรือจากการประกวดประขันคะแนนนิยมแต่อย่างใด
พวกเขาถูกฝึกฝนด้วยวิถีทางบางอย่างของตัววัฒนธรรมเอง
ถึงแม้พวกเขาจะเกิดมาเพื่อเป็นผู้นำโดยตรง ไม่ได้มาจากการเลือกของผองชน''
เขาเน้นต่อไปว่า เขาเชื่อว่าคุณลักษณะของผู้นำชาวฟิจินี้
เกิดจากความยากลำบากของการบังคับขอความร่วมมือ กล่าวคือ หัวหน้าไม่มี
``บำเหน็จรางวัลชิ้นใหญ่หรือคทาอาญาสิทธิ์''</para>
</blockquote>

<para><anchor id="_no"/><emphasis>[NO]</emphasis>
As a matter of observable fact, people who found successful projects
gather more prestige than people who do arguably equal amounts of work
debugging and assisting with successful projects.  An earlier version
of this paper asked ``Is this a rational valuation of comparative
effort, or is it a second-order effect of the unconscious territorial
model we have adduced here?''  Several respondents suggested persuasive
and essentially equivalent theories.  The following analysis by 
Ryan Waldron <email>rew@erebor.com</email> puts the case well:</para>

<para><anchor id="no"/><emphasis>[NO]</emphasis>
จากการสังเกตแล้ว ผู้ที่สามารถก่อตั้งโครงการที่ประสบความสำเร็จ
จะได้รับเกียรติยศมากกว่าผู้ที่อาจจะทำงานในปริมาณที่เทียบเท่ากันในการแก้บั๊กหรือช่วยพัฒนาโครงการที่ประสบความสำเร็จ
บทความนี้ฉบับเผยแพร่รุ่นก่อนได้ตั้งคำถามไว้ว่า
``เรื่องนี้ถือเป็นการให้คุณค่าของความพยายามอย่างสมเหตุสมผลแล้ว
หรือว่าเป็นผลทางอ้อมของหลักการประกาศถิ่นอย่างไม่เจตนาที่เราได้เสนอไป ณ
ที่นี้?'' มีผู้แสดงความเห็นหลายท่านได้เสนอแนะทฤษฎีที่น่าเชื่อถือ
และมีใจความหลักเหมือนกัน การวิเคราะห์โดย 
Ryan Waldron <email>rew@erebor.com</email> ต่อไปนี้ เป็นตัวอย่างที่ดี:</para>

<blockquote>
<para>In the context of the Lockean land theory, one who establishes a new and
successful project has essentially discovered or opened up new territory on
which others can homestead.  For most successful projects, there is a
pattern of declining returns, so that after a while, the credit for
contributions to a project has become so diffuse that it is hard for
significant reputation to accrete to a late participant, regardless of the
quality of his work.</para>

<para>ในบริบทของทฤษฎีที่ดินของล็อคแล้ว
ผู้ที่ก่อตั้งโครงการใหม่ที่ประสบความสำเร็จนั้น
ถือว่าได้ค้นพบหรือบุกเบิกดินแดนใหม่ ซึ่งผู้อื่นสามารถเข้าไปปักหลักได้
สำหรับโครงการที่ประสบความสำเร็จทั้งหลาย จะมีรูปแบบผลตอบแทนที่ค่อยๆ ลดลง
ซึ่งทำให้เมื่อเวลาผ่านไประยะหนึ่ง เครดิตของการร่วมพัฒนาโครงการก็จะถูกเจือจาง
จนยากที่ผู้มาทีหลังจะไต่เต้าจนได้ชื่อเสียงได้
ไม่ว่างานของเขาจะยอดเยี่ยมเพียงใดก็ตาม</para>

<para>For instance, how good a job would I have to do making
modifications to the perl code to have even a fraction of the
recognition for my participation that Larry, Tom, Randall, and others
have achieved?</para>

<para>ตัวอย่างเช่น ผมจะต้องทำงานดีขนาดไหน ในการแก้โค้ดของ perl
เพื่อให้คนอื่นมองเห็นแม้เศษเสี้ยวของความมีส่วนร่วมของผม อย่างที่ Larry, Tom,
Randall และคนอื่นๆ ได้รับมาแล้ว?</para>

<para>However, if a new project is founded [by someone else] tomorrow, and I
am an early and frequent participant in it, my ability to share in the
respect generated by such a successful project is greatly enhanced by
my early participation therein (assuming similar quality of
contributions).  I reckon it to be similar to those who invest in
Microoft stock early and those who invest in it later.  Everyone may
profit, but early participants profit more.  Therefore, at some point
I will be more interested in a new and successful IPO than I will be
in participating in the continual increase of an existing body of
corporate stock.</para>

<para>อย่างไรก็ดี ถ้าพรุ่งนี้มีโครงการใหม่ตั้งขึ้นมา [โดยคนอื่น] 
แล้วผมก็เป็นผู้เข้าร่วมคนแรกๆ และบ่อยๆ
โอกาสที่ผมจะมีส่วนร่วมในชื่อเสียงที่มากับโครงการที่ประสบความสำเร็จนั้น
ย่อมเพิ่มขึ้นอย่างมาก ในฐานะที่ผมเข้าร่วมแต่เนิ่นๆ (โดยสมมุติว่า
คุณภาพของงานที่เข้าร่วมนั้น พอๆ กัน) ผมคิดว่า
เรื่องนี้คล้ายกันกับกรณีผู้ร่วมลงทุนกับไมโครซอฟท์ตอนต้นๆ
เมื่อเทียบกับผู้ที่เข้าร่วมในภายหลัง ทุกคนอาจได้กำไรทั้งนั้น
แต่คนที่เข้าร่วมก่อนย่อมได้มากกว่า ดังนั้น ผมจึงสนใจในระดับหนึ่งที่จะเข้าร่วม
IPO ที่ใหม่และประสบความสำเร็จ
มากกว่าจะเข้าร่วมในการเพิ่มทุนของหุ้นบริษัทที่มีอยู่แล้ว</para>
</blockquote>

<para>Ryan Waldron's analogy can be extended.  The project founder has
to do a missionary sell of a new idea that may or may not be acceptable
or of use to others.  Thus the founder incurs something analogous to
an IPO risk (of possible damage to their reputation), more so than
others who assist with a project that has already garnered some
acceptance by their peers. The founder's reward is consistent despite
the fact that the assistants may be putting in more work in real
terms.  This is easily seen as analogous to the relationship between
risk and rewards in an exchange economy.</para>

<para>การเปรียบเปรยของ Ryan Waldron สามารถขยายต่อไปได้อีก
ผู้ก่อตั้งโครงการจำเป็นต้องเร่ขายความคิด
ซึ่งอาจได้รับการยอมรับหรือนำไปใช้หรือไม่ก็ได้ ดังนั้น
เขาจึงต้องพบกับบางสิ่งที่คล้ายกับความเสี่ยงของ IPO (ที่จะเสื่อมเสียชื่อเสียง)
มากกว่าคนอื่นๆ ที่เข้าช่วยโครงการที่ได้สั่งสมความเชื่อถือจากหมู่ชนมาแล้ว
รางวัลสำหรับผู้ก่อตั้งจึงคงที่ แม้ว่าโดยแท้จริงแล้ว
ผู้ร่วมพัฒนาจะทำงานเพิ่มเข้าไปมากกว่า
เรื่องนี้เห็นได้ชัดว่าคล้ายกันกับเรื่องความสัมพันธ์ระหว่างความเสี่ยงกับรางวัลในเศรษฐศาสตร์แบบแลกเปลี่ยน</para>

<para>Other respondents have observed that our nervous system is tuned
to perceive differences, not steady state. The revolutionary change
evidenced by the creation of a new project is therefore much more
noticeable than the cumulative effect of constant incremental
improvement. Thus Linus is revered as the father of Linux, although
the net effect of improvements by thousands of other contributors have
done more to contribute to the success of the OS than one man's work
ever could.</para>

<para>ผู้ร่วมแสดงความเห็นท่านอื่นๆ ยังได้สังเกตว่า ระบบประสาทของเรา
ถูกปรับมาเพื่อให้สัมผัสกับความแตกต่าง ไม่ใช่กับสถานะคงที่
การเปลี่ยนแปลงแบบปฏิวัติวงการโดยมีโครงการใหม่เป็นหลักฐาน
จึงสังเกตได้ง่ายกว่าผลสะสมของการพัฒนาที่ต่อเนื่องอย่างคงที่ ดังนั้น
ไลนัสจึงได้รับความเคารพในฐานะบิดาแห่งลินุกซ์
แม้ว่าผลสุทธิของการพัฒนาจากผู้เข้าร่วมอื่นๆ เรือนพัน
จะมีส่วนช่วยในความสำเร็จของ OS นี้เกินกว่าที่งานของคนคนหนึ่งจะทำได้ก็ตาม</para>

<para><anchor id="_HD"/><emphasis>[HD]</emphasis> The phrase
``de-commoditizing'' is a reference to the <ulink
url="http://www.opensource.org/halloween/">Halloween Documents</ulink>
in which Microsoft used ``de-commoditize'' quite frankly to refer to
their most effective long-term strategy for maintaining an
exploitative monopoly lock on customers.</para>

<para><anchor id="HD"/><emphasis>[HD]</emphasis> คำว่า ``ทำลายตลาด''
(de-commoditize) นี้ อ้างไปถึง <ulink
url="http://www.opensource.org/halloween/">เอกสารวันฮัลโลวีน</ulink>
ซึ่งไมโครซอฟท์ได้ใช้คำว่า ``ทำลายตลาด'' อย่างตรงไปตรงมา
ในการเรียกนโยบายระยะยาวที่ทรงประสิทธิภาพที่สุดในการผูกมัดลูกค้าไว้
โดยอาศัยการผูกขาดอย่างแกมโกง</para>

<para><anchor id="_KN"/><emphasis>[HD]</emphasis> A respondent points
out that the valus surrounding the ``You're not a hacker until other
hackers call you a hacker'' norm parallel ideals professed (if not
always achieved) by other meritocratic brotherhoods within social
elites sufficiently wealthy to escape the surrounding scarcity
economy.  In the medieval European ideal of knighthood, for example,
the aspiring knight was expected to fight for the right; to seek honor
rather than gain; to take the side of the weak and oppressed; and to
constantly seek challenges that tested his prowess to the utmost.  In
return, the knight-aspirant could regard himself (and be regarded by
others) as among the best of the best&mdash;but only after his skill and
virtue had been admitted and ratified by other knights.  In the
knightly ideal extolled by the Arthurian tales and Chansons de Geste
we see a mix of idealism, continual self-challenge, and status-seeking
similar to that which animates hackers today. It seems likely that
similar values and behavioral norms should evolve around any skill
that both requires great dedication and confers a kind of
power.</para>

<para><anchor id="KN"/><emphasis>[KN]</emphasis>
ผู้ร่วมแสดงความเห็นท่านหนึ่งชี้ว่า คุณค่าที่อยู่รอบๆ บรรทัดฐานที่ว่า
``คุณจะไม่เป็นแฮ็กเกอร์จนกว่าแฮ็กเกอร์คนอื่นจะเรียกคุณว่าแฮ็กเกอร์'' นี้
คล้ายกันกับอุดมคติที่กล่าวอ้าง (ถ้าไม่ใช่บรรลุ)
โดยสังคมอื่นที่เชื่อมั่นในความสำเร็จด้วยตนเอง
ในกลุ่มผู้นำทางสังคมซึ่งร่ำรวยพอที่จะหนีพ้นเศรษฐกิจแบบขาดแคลนที่รายล้อม
ตัวอย่างเช่น ในอุดมคติของยุโรปสมัยกลางเกี่ยวกับความเป็นอัศวินนั้น
อัศวินผู้ใฝ่ฝันจะถูกคาดหวังให้ต่อสู้เพื่อความถูกต้อง
ให้แสวงหาเกียรติศักดิ์ศรีแทนที่จะได้มาเฉยๆ
ให้ยืนหยัดเคียงข้างผู้ที่อ่อนแอและถูกกดขี่ และให้แสวงหาความท้าทายอย่างสม่ำเสมอ
ที่จะทดสอบความเก่งกล้าของตนอย่างถึงที่สุด
สิ่งที่ผู้ใฝ่ฝันจะเป็นอัศวินจะได้รับเป็นการตอบแทน คือสามารถเรียกตัวเอง
(และโดยผู้อื่น) ว่าเป็นหนึ่งในสุดยอดผู้กล้า
แต่ต้องหลังจากที่ความสามารถและคุณค่าของเขาได้รับการยอมรับและรับรองจากอัศวินคนอื่นแล้วเท่านั้น
ในอุดมคติของอัศวินที่ได้รับการสรรเสริญจากเรื่องกษัตริย์อาเธอร์และ Chansons de
Geste นั้น เราจะพบการคละเคล้าของอุดมการณ์ การท้าทายตัวเองอย่างต่อเนื่อง
และการแสวงหาสถานภาพ คล้ายกับสิ่งที่อยู่ในตัวแฮ็กเกอร์ทั้งหลายในทุกวันนี้
จึงดูเป็นไปได้ ที่คุณค่าและบรรทัดฐานการปฏิบัติที่คล้ายกัน
จะพัฒนาเกี่ยวเนื่องกับความสามารถที่ทั้งต้องการการอุทิศตนอย่างใหญ่หลวง
และเกี่ยวข้องกับอำนาจบางอย่าง</para>

<para><anchor id="_GNU"/><emphasis>[GNU]</emphasis>
The Free Software Foundation's main website carries 
<ulink url="http://www.gnu.org/philosophy/motivation.html">an
article</ulink> that summarizes the results of many of these studies.  The
quotes in this essay are excerpted from there.</para>

<para><anchor id="GNU"/><emphasis>[GNU]</emphasis>
เว็บไซต์หลักของมูลนิธิซอฟต์แวร์เสรีได้เสนอ
<ulink url="http://www.gnu.org/philosophy/motivation.html">บทความหนึ่ง</ulink>
ซึ่งสรุปผลของการศึกษาเหล่านี้จำนวนมาก คำพูดทั้งหลายเกี่ยวกับเรื่องนี้ในบทความนี้
ก็คัดลอกมาจากบทความดังกล่าว</para>

</sect1>
<!-- Bibliography -->
<sect1><title>บรรณานุกรม</title>

<para><anchor id="_miller"/><emphasis>[Miller]</emphasis>
Miller, William Ian; <emphasis>Bloodtaking and Peacemaking: Feud, Law, and
Society in Saga Iceland</emphasis>; University of Chicago Press 1990, ISBN
0-226-52680-1.  A fascinating study of Icelandic folkmoot law, which
both illuminates the ancestry of the Lockean theory of property and
describes the later stages of a historical process by which custom
passed into customary law and thence to written law.</para>

<para><anchor id="miller"/><emphasis>[Miller]</emphasis>
Miller, William Ian; <emphasis>Bloodtaking and Peacemaking: Feud, Law, and
Society in Saga Iceland</emphasis>; University of Chicago Press 1990, ISBN
0-226-52680-1.  การศึกษาที่น่าตื่นตาตื่นใจเกี่ยวกับกฎชุมนุมชนของชาวไอซ์แลนด์
ซึ่งทั้งให้ความกระจ่างเกี่ยวกับบรรพบุรุษของทฤษฎีทรัพย์สินของล็อค
และบรรยายถึงช่วงหลังๆ ของกระบวนการทางประวัติศาสตร์
ซึ่งจารีตประเพณีได้กลายมาเป็นกฎหมายจารีตประเพณี
แล้วจึงเป็นกฎหมายลายลักษณ์อักษร</para>

<para><anchor id="_Mal"/><emphasis>[Mal]</emphasis>
Malaclypse the Younger; <emphasis>Principia Discordia, or How I Found
Goddess and What I Did To Her When I Found Her</emphasis>; Loompanics, ISBN
1-55950-040-9.  There is much enlightening silliness to be found in
Discordianism.  Amidst it, the `SNAFU principle' provides a rather
trenchant analysis of why command hierarchies don't scale well.
There's a browseable <ulink url="http://www.cs.cmu.edu/~tilt/principia/">HTML version</ulink>.</para>

<para><anchor id="Mal"/><emphasis>[Mal]</emphasis>
Malaclypse the Younger; <emphasis>Principia Discordia, or How I Found
Goddess and What I Did To Her When I Found Her</emphasis>; Loompanics, ISBN
1-55950-040-9.  มีความเปิ่นที่เร้าใจมากมายที่สามารถพบได้ใน Discordianism
ในจำนวนนี้ `หลักการ SNAFU' ได้วิเคราะห์อย่างค่อนข้างตรงไปตรงมา
ว่าทำไมระบบยศศักดิ์จึงไม่สามารถปรับตัวตามขนาดได้ดี มี
<ulink url="http://www.cs.cmu.edu/~tilt/principia/">ฉบับ HTML</ulink>
ด้วย</para>

<para><anchor id="_BCT"/><emphasis>[BCT]</emphasis>
J. Barkow, L. Cosmides, and J. Tooby (Eds.); <emphasis>The Adapted Mind:
Evolutionary Psychology and the Generation of Culture.</emphasis> New York:
Oxford University Press 1992.  An excellent introduction to evolutionary
psychology.  Some of the papers bear directly on the three cultural
types I discuss (command/exchange/gift), suggesting that these patterns
are wired into the human psyche fairly deep.</para>

<para><anchor id="BCT"/><emphasis>[BCT]</emphasis>
J. Barkow, L. Cosmides, and J. Tooby (Eds.); <emphasis>The Adapted Mind:
Evolutionary Psychology and the Generation of Culture.</emphasis> New York:
Oxford University Press 1992. 
หนังสือปูพื้นอันยอดเยี่ยมเกี่ยวกับจิตวิทยาเชิงวิวัฒนาการ บทความบางเรื่องในนี้
เกี่ยวข้องโดยตรงกับเรื่องของวัฒนธรรมสามชนิดที่ผู้เขียนได้กล่าวถึง
(ยศศักดิ์/แลกเปลี่ยน/การให้) โดยได้ชี้แนะว่ารูปแบบเหล่านี้
ผูกพันแนบแน่นในจิตใจมนุษย์อย่างลึกล้ำพอสมควร</para>

<para><anchor id="_MHG"/><emphasis>[MHG]</emphasis>
Goldhaber, Michael K.; <ulink
url="http://www.firstmonday.dk/issues/issue2_4/goldhaber">The
Attention Economy and the Net</ulink>.  I discovered this paper after my
version 1.7.  It has obvious flaws (Goldhaber's argument for the
inapplicability of economic reasoning to attention does not bear close
examination), but Goldhaber nevertheless has funny and perceptive
things to say about the role of attention-seeking in organizing
behavior.  The prestige or peer repute I have discussed can fruitfully
be viewed as a particular case of attention in his sense.</para>

<para><anchor id="MHG"/><emphasis>[MHG]</emphasis>
Goldhaber, Michael K.; <ulink
url="http://www.firstmonday.dk/issues/issue2_4/goldhaber">The
Attention Economy and the Net</ulink>. 
ผู้เขียนไปพบบทความนี้หลังจากที่ได้เขียนบทความของผู้เขียนเองรุ่นที่ 1.7 ไปแล้ว
บทความนี้มีข้อผิดพลาดที่เห็นได้ชัดอยู่ (ในเรื่องการให้เหตุผลของ Goldhaber
เกี่ยวกับความไร้ผลของการใช้เหตุผลเชิงเศรษฐศาสตร์กับเรื่องการให้ความสนใจ
ซึ่งไม่มีการตรวจสอบอย่างละเอียดเท่าที่ควร) แต่ Goldhaber
ก็ยังมีสิ่งขบขันและลุ่มลึกที่จะพูด
เกี่ยวกับบทบาทของการเรียกร้องความสนใจต่อการจัดโครงสร้างของพฤติกรรม
เกียรติยศหรือชื่อเสียงในหมู่ชนที่ผู้เขียนได้พูดถึง
อาจมองอย่างแตกฉานได้ว่าเป็นเพียงกรณีเฉพาะกรณีหนึ่งของการให้ความสนใจในมุมมองของเขา
</para>

<para><anchor id="_HH"/><emphasis>[HH]</emphasis>
I have summarized the history of the hacker culture in <ulink url="http://www.tuxedo.org/~esr/faqs/hacker-hist.html">A
Brief History Of Hackerdom</ulink>.  The book
that will explain it really well remains to be written, probably not
by me.</para>

<para><anchor id="HH"/><emphasis>[HH]</emphasis>
ผู้เขียนได้สรุปประวัติศาสตร์ของวัฒนธรรมแฮ็กเกอร์ใน
<ulink url="http://www.tuxedo.org/~esr/faqs/hacker-hist.html">A
Brief History Of Hackerdom</ulink>.  หนังสือที่จะอธิบายได้ดีจริงๆ
ยังต้องเขียนกันต่อไป อาจจะไม่ใช่โดยผู้เขียนเอง</para>

</sect1>
<!-- Acknowledgements -->
<sect1><title>กิตติกรรมประกาศ</title>

<para>Robert Lanphier <email>robla@real.com</email> contributed much to the
discussion of egoless behavior.  Eric Kidd <email>eric.kidd@pobox.com</email>
highlighted the role of valuing humility in preventing cults of
personality.  The section on global effects was inspired by comments
from Daniel Burn <email>daniel@tsathoggua.lab.usyd.edu.au</email>.  Mike
Whitaker <email>mrw@entropic.co.uk</email> inspired the main thread in the
section on acculturation. Chris Phoenix <email>cphoenix@best.com</email>
pointed out the importance of the fact that hackers cannot gain
reputation by doing other hackers down. A.J. Venter
<email>JAVenter@africon.co.za</email> pointed out parallels with the medieval
ideal of knighthood.  Ian Lance Taylor <email>ian@airs.com</email> sent
careful criticisms of the reputation-game model which motivated me
to think through and explain my assumptions more clearly.</para>

<para>Robert Lanphier <email>robla@real.com</email>
ได้ร่วมสมทบมากมายในการอภิปรายเรื่องพฤติกรรมที่ไร้อัตตา
Eric Kidd <email>eric.kidd@pobox.com</email>
ได้ช่วยเน้นบทบาทของการให้ความสำคัญกับความอ่อนน้อมถ่อมตน
ในการป้องกันการบูชาตัวบุคคล
หัวข้อเกี่ยวกับผลต่อภาพรวมได้รับแรงบันดาลใจจากความเห็นของ
Daniel Burn <email>daniel@tsathoggua.lab.usyd.edu.au</email> 
Mike Whitaker <email>mrw@entropic.co.uk</email>
ได้ให้แรงบันดาลใจต่อเนื้อหาหลักในหัวข้อกลไกการถ่ายทอดวัฒนธรรม
Chris Phoenix <email>cphoenix@best.com</email>
ได้ชี้ถึงความสำคัญของการที่แฮ็กเกอร์ไม่อาจได้ชื่อเสียงด้วยการถล่มแฮ็กเกอร์คนอื่น
A.J. Venter <email>JAVenter@africon.co.za</email>
ได้ชี้ให้เห็นความคล้ายคลึงกับอุดมคติของอัศวินในยุคกลาง
Ian Lance Taylor <email>ian@airs.com</email>
ได้วิจารณ์อย่างระมัดระวังเกี่ยวกับโมเดลเกมแห่งชื่อเสียง
ซึ่งกระตุ้นให้ผู้เขียนต้องคิดทบทวน
และอธิบายข้อสมมุติของผู้เขียนให้ชัดเจนยิ่งขึ้น</para>

</sect1>
<!-- %%END ENDNOTES%% -->
</article>

